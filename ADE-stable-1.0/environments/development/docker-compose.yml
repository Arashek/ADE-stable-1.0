version: '3.8'

services:
  dev-api:
    build:
      context: ../..
      dockerfile: environments/development/Dockerfile
    volumes:
      - ../../src:/app/src
      - ../../tests:/app/tests
      - ../../projects:/app/projects
    ports:
      - "8000:8000"
      - "3000:3000"
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      - MONGODB_URI=mongodb://admin:adminpassword@dev-mongodb:27017
      - REDIS_PASSWORD=devredispassword
      - JWT_SECRET=dev-secret-key
    depends_on:
      - dev-mongodb
      - dev-redis
      - dev-ollama
    networks:
      - dev-network

  dev-mongodb:
    image: mongo:latest
    ports:
      - "27018:27017"  # Different port for development
    volumes:
      - dev_mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=adminpassword
    networks:
      - dev-network

  dev-redis:
    image: redis:latest
    ports:
      - "6380:6379"  # Different port for development
    volumes:
      - dev_redis_data:/data
    command: redis-server --requirepass devredispassword
    networks:
      - dev-network

  dev-ollama:
    image: ollama/ollama:latest
    ports:
      - "11435:11434"  # Different port for development
    volumes:
      - dev_ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_MODELS=codellama
    networks:
      - dev-network

  dev-adminer:  # Database management UI for development
    image: adminer
    ports:
      - "8080:8080"
    networks:
      - dev-network
    depends_on:
      - dev-mongodb

  dev-redis-commander:  # Redis UI for development
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=dev-redis
      - REDIS_HOST=dev-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=devredispassword
    ports:
      - "8081:8081"
    networks:
      - dev-network
    depends_on:
      - dev-redis

networks:
  dev-network:
    driver: bridge

volumes:
  dev_mongodb_data:
  dev_redis_data:
  dev_ollama_data: 