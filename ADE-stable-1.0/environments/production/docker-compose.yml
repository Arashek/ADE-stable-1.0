version: '3.8'

services:
  prod-api:
    build:
      context: ../..
      dockerfile: environments/production/Dockerfile
    image: ade-platform:prod
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - MONGODB_URI=mongodb://admin:${MONGO_PASSWORD}@prod-mongodb:27017
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - prod-mongodb
      - prod-redis
      - prod-ollama
    networks:
      - prod-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  prod-mongodb:
    image: mongo:latest
    command: ["mongod", "--bind_ip_all", "--replSet", "rs0"]
    volumes:
      - prod_mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - prod-network

  prod-redis:
    image: redis:latest
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    volumes:
      - prod_redis_data:/data
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    networks:
      - prod-network

  prod-ollama:
    image: ollama/ollama:latest
    volumes:
      - prod_ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_MODELS=codellama
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 16G
        reservations:
          cpus: '2'
          memory: 8G
    networks:
      - prod-network

  prod-nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - prod-api
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    networks:
      - prod-network

  prod-prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prod_prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - prod-network

  prod-grafana:
    image: grafana/grafana:latest
    volumes:
      - prod_grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - prod-network

networks:
  prod-network:
    driver: overlay
    attachable: true

volumes:
  prod_mongodb_data:
    driver: local
  prod_redis_data:
    driver: local
  prod_ollama_data:
    driver: local
  prod_prometheus_data:
    driver: local
  prod_grafana_data:
    driver: local 