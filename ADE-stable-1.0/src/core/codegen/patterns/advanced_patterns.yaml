react:
  patterns:
    performance:
      - name: "Virtual List"
        pattern: "react-window|react-virtualized"
        description: "Use virtual list for large datasets"
        severity: "high"
        fix: "Implement react-window or react-virtualized"
      - name: "Code Splitting"
        pattern: "React\\.lazy\\([^)]+\\)"
        description: "Use code splitting for better performance"
        severity: "medium"
        fix: "Implement React.lazy for route-based code splitting"
    state_management:
      - name: "Context Usage"
        pattern: "useContext\\([^)]+\\)"
        description: "Use React Context for global state"
        severity: "medium"
        fix: "Implement Context API for global state"
      - name: "Redux Usage"
        pattern: "useSelector|useDispatch"
        description: "Use Redux for complex state management"
        severity: "medium"
        fix: "Implement Redux for complex state"

vue:
  patterns:
    performance:
      - name: "Virtual Scrolling"
        pattern: "vue-virtual-scroller"
        description: "Use virtual scrolling for large lists"
        severity: "high"
        fix: "Implement vue-virtual-scroller"
      - name: "Lazy Loading"
        pattern: "defineAsyncComponent"
        description: "Use lazy loading for components"
        severity: "medium"
        fix: "Implement defineAsyncComponent"
    state_management:
      - name: "Pinia Usage"
        pattern: "defineStore"
        description: "Use Pinia for state management"
        severity: "medium"
        fix: "Implement Pinia store"

angular:
  patterns:
    performance:
      - name: "Change Detection"
        pattern: "ChangeDetectionStrategy\\.OnPush"
        description: "Use OnPush change detection"
        severity: "high"
        fix: "Set change detection to OnPush"
      - name: "Track By"
        pattern: "\\*ngFor\\s*=\\s*let\\s+\\w+\\s+of\\s+\\w+"
        description: "Use trackBy in ngFor"
        severity: "medium"
        fix: "Add trackBy function to ngFor"
    architecture:
      - name: "Smart Components"
        pattern: "@Component\\([^)]*\\)\\s*export\\s+class\\s+\\w+Component"
        description: "Use smart/presentational pattern"
        severity: "medium"
        fix: "Split into smart and presentational components"

nodejs:
  patterns:
    performance:
      - name: "Connection Pooling"
        pattern: "pool\\.query\\([^)]+\\)"
        description: "Use connection pooling for database"
        severity: "high"
        fix: "Implement connection pooling"
      - name: "Caching"
        pattern: "redis\\.get\\([^)]+\\)"
        description: "Use Redis for caching"
        severity: "medium"
        fix: "Implement Redis caching"
    architecture:
      - name: "Repository Pattern"
        pattern: "class\\s+\\w+Repository"
        description: "Use repository pattern"
        severity: "medium"
        fix: "Implement repository pattern"

flutter:
  patterns:
    performance:
      - name: "ListView Builder"
        pattern: "ListView\\.builder"
        description: "Use ListView.builder for lists"
        severity: "high"
        fix: "Replace ListView with ListView.builder"
      - name: "Image Caching"
        pattern: "Image\\.network"
        description: "Use cached network image"
        severity: "medium"
        fix: "Use CachedNetworkImage"
    architecture:
      - name: "BLoC Pattern"
        pattern: "BlocProvider|BlocBuilder"
        description: "Use BLoC pattern"
        severity: "medium"
        fix: "Implement BLoC pattern"

security:
  patterns:
    authentication:
      - name: "JWT Validation"
        pattern: "jwt\\.verify\\([^)]+\\)"
        description: "Validate JWT tokens"
        severity: "high"
        fix: "Implement JWT validation"
      - name: "Password Hashing"
        pattern: "bcrypt\\.hash\\([^)]+\\)"
        description: "Hash passwords"
        severity: "high"
        fix: "Use bcrypt for password hashing"
    authorization:
      - name: "Role-Based Access"
        pattern: "hasRole\\([^)]+\\)"
        description: "Implement role-based access"
        severity: "high"
        fix: "Implement role-based access control"
      - name: "Permission Check"
        pattern: "can\\([^)]+\\)"
        description: "Check permissions"
        severity: "high"
        fix: "Implement permission checking"

testing:
  patterns:
    unit_tests:
      - name: "Test Coverage"
        pattern: "describe\\([^)]+\\)"
        description: "Write unit tests"
        severity: "medium"
        fix: "Add unit tests"
      - name: "Mocking"
        pattern: "jest\\.mock\\([^)]+\\)"
        description: "Mock dependencies"
        severity: "medium"
        fix: "Implement proper mocking"
    integration_tests:
      - name: "API Testing"
        pattern: "supertest\\([^)]+\\)"
        description: "Test API endpoints"
        severity: "medium"
        fix: "Add API integration tests"
      - name: "E2E Testing"
        pattern: "cypress\\.visit\\([^)]+\\)"
        description: "Write E2E tests"
        severity: "medium"
        fix: "Add E2E tests"

documentation:
  patterns:
    api_docs:
      - name: "OpenAPI Spec"
        pattern: "openapi:\\s*\\d+\\.\\d+\\.\\d+"
        description: "Document API with OpenAPI"
        severity: "medium"
        fix: "Add OpenAPI documentation"
      - name: "JSDoc"
        pattern: "/\\*\\*[^*]*\\*+([^/*][^*]*\\*+)*/"
        description: "Document functions with JSDoc"
        severity: "medium"
        fix: "Add JSDoc comments"
    code_docs:
      - name: "Component Props"
        pattern: "PropTypes\\.\\w+"
        description: "Document component props"
        severity: "medium"
        fix: "Add PropTypes documentation"
      - name: "Type Definitions"
        pattern: "interface\\s+\\w+"
        description: "Document types"
        severity: "medium"
        fix: "Add TypeScript interfaces" 