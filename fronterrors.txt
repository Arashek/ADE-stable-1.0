Compiled with problems:
Ã—
ERROR
[eslint] 
src\App.tsx
  Line 81:1:  Import in body of module; reorder to top  import/first
  Line 82:1:  Import in body of module; reorder to top  import/first
  Line 83:1:  Import in body of module; reorder to top  import/first
  Line 84:1:  Import in body of module; reorder to top  import/first
  Line 85:1:  Import in body of module; reorder to top  import/first
  Line 86:1:  Import in body of module; reorder to top  import/first
  Line 87:1:  Import in body of module; reorder to top  import/first
  Line 88:1:  Import in body of module; reorder to top  import/first
  Line 89:1:  Import in body of module; reorder to top  import/first
  Line 90:1:  Import in body of module; reorder to top  import/first
  Line 91:1:  Import in body of module; reorder to top  import/first
  Line 92:1:  Import in body of module; reorder to top  import/first
  Line 93:1:  Import in body of module; reorder to top  import/first
  Line 94:1:  Import in body of module; reorder to top  import/first
  Line 95:1:  Import in body of module; reorder to top  import/first
  Line 96:1:  Import in body of module; reorder to top  import/first

Search for the keywords to learn more about each error.
ERROR in src/components/AgentChatTabs.tsx:207:13
TS2322: Type 'string' is not assignable to type 'AgentType'.
    205 |           <AgentChat
    206 |             projectId={projectId}
  > 207 |             agentType={tab.agentType}
        |             ^^^^^^^^^
    208 |             onClose={() => {
    209 |               // Handle tab close if needed
    210 |             }}
ERROR in src/components/AgentCoordinator.tsx:373:32
TS2769: No overload matches this call.
  Overload 1 of 2, '(props: { component: ElementType<any, keyof IntrinsicElements>; } & SvgIconOwnProps & CommonProps & Omit<any, "fontSize" | ... 10 more ... | "titleAccess">): Element', gave the following error.
    Type '"default" | "primary" | "error" | "success"' is not assignable to type 'OverridableStringUnion<"primary" | "secondary" | "disabled" | "inherit" | "action" | "error" | "info" | "success" | "warning", SvgIconPropsColorOverrides>'.
      Type '"default"' is not assignable to type 'OverridableStringUnion<"primary" | "secondary" | "disabled" | "inherit" | "action" | "error" | "info" | "success" | "warning", SvgIconPropsColorOverrides>'.
  Overload 2 of 2, '(props: DefaultComponentProps<SvgIconTypeMap<{}, "svg">>): Element', gave the following error.
    Type '"default" | "primary" | "error" | "success"' is not assignable to type 'OverridableStringUnion<"primary" | "secondary" | "disabled" | "inherit" | "action" | "error" | "info" | "success" | "warning", SvgIconPropsColorOverrides>'.
      Type '"default"' is not assignable to type 'OverridableStringUnion<"primary" | "secondary" | "disabled" | "inherit" | "action" | "error" | "info" | "success" | "warning", SvgIconPropsColorOverrides>'.
    371 |                 <ListItem key={agent.id}>
    372 |                   <ListItemIcon>
  > 373 |                     <AgentIcon color={getAgentStatusColor(agent.status)} />
        |                                ^^^^^
    374 |                   </ListItemIcon>
    375 |                   <ListItemText
    376 |                     primary={agent.name}
ERROR in src/components/AgentCoordinator.tsx:416:37
TS2769: No overload matches this call.
  Overload 1 of 2, '(props: { component: ElementType<any, keyof IntrinsicElements>; } & SvgIconOwnProps & CommonProps & Omit<any, "fontSize" | ... 10 more ... | "titleAccess">): Element', gave the following error.
    Type '"default" | "primary" | "error" | "success" | "warning"' is not assignable to type 'OverridableStringUnion<"primary" | "secondary" | "disabled" | "inherit" | "action" | "error" | "info" | "success" | "warning", SvgIconPropsColorOverrides>'.
      Type '"default"' is not assignable to type 'OverridableStringUnion<"primary" | "secondary" | "disabled" | "inherit" | "action" | "error" | "info" | "success" | "warning", SvgIconPropsColorOverrides>'.
  Overload 2 of 2, '(props: DefaultComponentProps<SvgIconTypeMap<{}, "svg">>): Element', gave the following error.
    Type '"default" | "primary" | "error" | "success" | "warning"' is not assignable to type 'OverridableStringUnion<"primary" | "secondary" | "disabled" | "inherit" | "action" | "error" | "info" | "success" | "warning", SvgIconPropsColorOverrides>'.
      Type '"default"' is not assignable to type 'OverridableStringUnion<"primary" | "secondary" | "disabled" | "inherit" | "action" | "error" | "info" | "success" | "warning", SvgIconPropsColorOverrides>'.
    414 |                       <ListItem>
    415 |                         <ListItemIcon>
  > 416 |                           <TaskIcon color={getStatusColor(task.status)} />
        |                                     ^^^^^
    417 |                         </ListItemIcon>
    418 |                         <ListItemText
    419 |                           primary={
ERROR in src/components/AgentCoordinator.tsx:635:61
TS2322: Type 'string' is not assignable to type '"high" | "low" | "medium"'.
    633 |                   value={newTask.priority}
    634 |                   label="Priority"
  > 635 |                   onChange={(e) => setNewTask({ ...newTask, priority: e.target.value })}
        |                                                             ^^^^^^^^
    636 |                 >
    637 |                   <MenuItem value="high">High</MenuItem>
    638 |                   <MenuItem value="medium">Medium</MenuItem>
ERROR in src/components/agents/AgentActivityTimeline.tsx:265:30
TS2339: Property 'purple' does not exist on type 'Palette'.
    263 |     switch (agentType) {
    264 |       case AgentType.VALIDATOR:
  > 265 |         return theme.palette.purple.main;
        |                              ^^^^^^
    266 |       case AgentType.DESIGNER:
    267 |         return theme.palette.blue.main;
    268 |       case AgentType.ARCHITECT:
ERROR in src/components/agents/AgentActivityTimeline.tsx:267:30
TS2339: Property 'blue' does not exist on type 'Palette'.
    265 |         return theme.palette.purple.main;
    266 |       case AgentType.DESIGNER:
  > 267 |         return theme.palette.blue.main;
        |                              ^^^^
    268 |       case AgentType.ARCHITECT:
    269 |         return theme.palette.green.main;
    270 |       case AgentType.SECURITY:
ERROR in src/components/agents/AgentActivityTimeline.tsx:269:30
TS2339: Property 'green' does not exist on type 'Palette'.
    267 |         return theme.palette.blue.main;
    268 |       case AgentType.ARCHITECT:
  > 269 |         return theme.palette.green.main;
        |                              ^^^^^
    270 |       case AgentType.SECURITY:
    271 |         return theme.palette.red.main;
    272 |       case AgentType.PERFORMANCE:
ERROR in src/components/agents/AgentActivityTimeline.tsx:271:30
TS2339: Property 'red' does not exist on type 'Palette'.
    269 |         return theme.palette.green.main;
    270 |       case AgentType.SECURITY:
  > 271 |         return theme.palette.red.main;
        |                              ^^^
    272 |       case AgentType.PERFORMANCE:
    273 |         return theme.palette.orange.main;
    274 |       case AgentType.ADMIN:
ERROR in src/components/agents/AgentActivityTimeline.tsx:273:30
TS2339: Property 'orange' does not exist on type 'Palette'.
    271 |         return theme.palette.red.main;
    272 |       case AgentType.PERFORMANCE:
  > 273 |         return theme.palette.orange.main;
        |                              ^^^^^^
    274 |       case AgentType.ADMIN:
    275 |         return theme.palette.blueGrey.main;
    276 |       default:
ERROR in src/components/agents/AgentActivityTimeline.tsx:275:30
TS2339: Property 'blueGrey' does not exist on type 'Palette'.
    273 |         return theme.palette.orange.main;
    274 |       case AgentType.ADMIN:
  > 275 |         return theme.palette.blueGrey.main;
        |                              ^^^^^^^^
    276 |       default:
    277 |         return theme.palette.grey[500];
    278 |     }
ERROR in src/components/agents/AgentListPanel.tsx:538:14
TS2304: Cannot find name 'SettingsIcon'.
    536 |         <MenuItem onClick={handleContextMenuClose}>
    537 |           <ListItemIcon>
  > 538 |             <SettingsIcon fontSize="small" />
        |              ^^^^^^^^^^^^
    539 |           </ListItemIcon>
    540 |           <ListItemText>Configure</ListItemText>
    541 |         </MenuItem>
ERROR in src/components/agents/panels/ModelSelectionPanel.tsx:31:5
TS2322: Type '"balanced"' is not assignable to type '"high" | "low" | "medium"'.
    29 | export const ModelSelectionPanel: React.FC<ModelSelectionPanelProps> = ({ onModelConfigChange }) => {
    30 |   const [config, setConfig] = useState<ModelConfig>({
  > 31 |     quality: 'balanced',
       |     ^^^^^^^
    32 |     responseTimeLimit: 5000,
    33 |     contextLength: 4096,
    34 |     costPreference: 'balanced',
ERROR in src/components/agents/panels/ResultsPanel.tsx:173:31
TS2322: Type '"default" | "error" | "success" | "warning"' is not assignable to type 'OverridableStringUnion<"primary" | "secondary" | "inherit" | "error" | "info" | "success" | "warning", LinearProgressPropsColorOverrides>'.
  Type '"default"' is not assignable to type 'OverridableStringUnion<"primary" | "secondary" | "inherit" | "error" | "info" | "success" | "warning", LinearProgressPropsColorOverrides>'.
    171 |                               variant="determinate"
    172 |                               value={result.progress}
  > 173 |                               color={getStatusColor(result.status)}
        |                               ^^^^^
    174 |                             />
    175 |                           </Box>
    176 |                           <Typography variant="body2" color="text.secondary">
ERROR in src/components/agents/SpecializedAgents.tsx:515:37
TS2769: No overload matches this call.
  Overload 1 of 2, '(props: { component: ElementType<any, keyof IntrinsicElements>; } & SvgIconOwnProps & CommonProps & Omit<any, "fontSize" | ... 10 more ... | "titleAccess">): Element', gave the following error.
    Type '"default" | "primary" | "error" | "success" | "warning"' is not assignable to type 'OverridableStringUnion<"primary" | "secondary" | "disabled" | "inherit" | "action" | "error" | "info" | "success" | "warning", SvgIconPropsColorOverrides>'.
      Type '"default"' is not assignable to type 'OverridableStringUnion<"primary" | "secondary" | "disabled" | "inherit" | "action" | "error" | "info" | "success" | "warning", SvgIconPropsColorOverrides>'.
  Overload 2 of 2, '(props: DefaultComponentProps<SvgIconTypeMap<{}, "svg">>): Element', gave the following error.
    Type '"default" | "primary" | "error" | "success" | "warning"' is not assignable to type 'OverridableStringUnion<"primary" | "secondary" | "disabled" | "inherit" | "action" | "error" | "info" | "success" | "warning", SvgIconPropsColorOverrides>'.
      Type '"default"' is not assignable to type 'OverridableStringUnion<"primary" | "secondary" | "disabled" | "inherit" | "action" | "error" | "info" | "success" | "warning", SvgIconPropsColorOverrides>'.
    513 |                       <ListItem>
    514 |                         <ListItemIcon>
  > 515 |                           <TaskIcon color={getStatusColor(task.status)} />
        |                                     ^^^^^
    516 |                         </ListItemIcon>
    517 |                         <ListItemText
    518 |                           primary={
ERROR in src/components/agents/SpecializedAgents.tsx:698:49
TS2769: No overload matches this call.
  Overload 1 of 2, '(props: { component: ElementType<any, keyof IntrinsicElements>; } & SvgIconOwnProps & CommonProps & Omit<any, "fontSize" | ... 10 more ... | "titleAccess">): Element', gave the following error.
    Type '"default" | "primary" | "error" | "success" | "warning"' is not assignable to type 'OverridableStringUnion<"primary" | "secondary" | "disabled" | "inherit" | "action" | "error" | "info" | "success" | "warning", SvgIconPropsColorOverrides>'.
      Type '"default"' is not assignable to type 'OverridableStringUnion<"primary" | "secondary" | "disabled" | "inherit" | "action" | "error" | "info" | "success" | "warning", SvgIconPropsColorOverrides>'.
  Overload 2 of 2, '(props: DefaultComponentProps<SvgIconTypeMap<{}, "svg">>): Element', gave the following error.
    Type '"default" | "primary" | "error" | "success" | "warning"' is not assignable to type 'OverridableStringUnion<"primary" | "secondary" | "disabled" | "inherit" | "action" | "error" | "info" | "success" | "warning", SvgIconPropsColorOverrides>'.
      Type '"default"' is not assignable to type 'OverridableStringUnion<"primary" | "secondary" | "disabled" | "inherit" | "action" | "error" | "info" | "success" | "warning", SvgIconPropsColorOverrides>'.
    696 |                                   <ListItem key={index}>
    697 |                                     <ListItemIcon>
  > 698 |                                       <TaskIcon color={getStatusColor(subtask.status)} />
        |                                                 ^^^^^
    699 |                                     </ListItemIcon>
    700 |                                     <ListItemText
    701 |                                       primary={subtask.title}
ERROR in src/components/agents/SpecializedAgents.tsx:814:61
TS2322: Type 'string' is not assignable to type '"high" | "low" | "medium"'.
    812 |                   value={newTask.priority}
    813 |                   label="Priority"
  > 814 |                   onChange={(e) => setNewTask({ ...newTask, priority: e.target.value })}
        |                                                             ^^^^^^^^
    815 |                 >
    816 |                   <MenuItem value="high">High</MenuItem>
    817 |                   <MenuItem value="medium">Medium</MenuItem>
ERROR in src/components/agents/workflow/ConsensusBuilderPanel.tsx:443:55
TS2339: Property 'color' does not exist on type 'Agent'.
    441 |                                   <Avatar 
    442 |                                     sx={{ 
  > 443 |                                       bgcolor: agent?.color || theme.palette.grey[500],
        |                                                       ^^^^^
    444 |                                       border: `2px solid ${
    445 |                                         vote.vote === VoteType.APPROVE ? theme.palette.success.main : 
    446 |                                         vote.vote === VoteType.REJECT ? theme.palette.error.main :
ERROR in src/components/agents/WorkflowControlTabs.tsx:23:37
TS2307: Cannot find module './workflow/PerformanceMetricsPanel' or its corresponding type declarations.
    21 | import ConsensusBuilderPanel from './workflow/ConsensusBuilderPanel';
    22 | import ErrorAnalyticsPanel from './workflow/ErrorAnalyticsPanel';
  > 23 | import PerformanceMetricsPanel from './workflow/PerformanceMetricsPanel';
       |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    24 |
    25 | // Interface for tab panel props
    26 | interface TabPanelProps {
ERROR in src/components/ChatPanel.tsx:414:23
TS2322: Type '{ children: string[]; id: string; }' is not assignable to type 'IntrinsicAttributes & { children: ReactNode; }'.
  Property 'id' does not exist on type 'IntrinsicAttributes & { children: ReactNode; }'.
    412 |         </IconButton>
    413 |       </Paper>
  > 414 |       <VisuallyHidden id="message-help-text">
        |                       ^^
    415 |         Press Enter to send message. Use Shift + Enter for a new line.
    416 |         {speechSupported && " Press the microphone button to use voice input."}
    417 |       </VisuallyHidden>
ERROR in src/components/CodeEditor.tsx:74:9
TS2322: Type 'true' is not assignable to type '"off" | "currentDocument" | "matchingDocuments" | "allDocuments"'.
    72 |         acceptSuggestionOnEnter: 'on',
    73 |         tabCompletion: 'on',
  > 74 |         wordBasedSuggestions: true,
       |         ^^^^^^^^^^^^^^^^^^^^
    75 |         parameterHints: {
    76 |           enabled: true
    77 |         },
ERROR in src/components/CodeEditor.tsx:83:9
TS2322: Type 'true' is not assignable to type '"on" | "off" | "dimmed"'.
    81 |         renderWhitespace: 'selection',
    82 |         renderLineHighlight: 'all',
  > 83 |         renderFinalNewline: true,
       |         ^^^^^^^^^^^^^^^^^^
    84 |         // Debugging features
    85 |         glyphMargin: true,
    86 |         lineDecorationsWidth: 5,
ERROR in src/components/CodeEditor.tsx:103:9
TS2322: Type '(model: ITextModel, position: Position) => Promise<{ suggestions: CompletionItem[]; }>' is not assignable to type '(model: ITextModel, position: Position, context: CompletionContext, token: CancellationToken) => ProviderResult<CompletionList>'.
  Type 'Promise<{ suggestions: CompletionItem[]; }>' is not assignable to type 'ProviderResult<CompletionList>'.
    Type 'Promise<{ suggestions: CompletionItem[]; }>' is not assignable to type 'Thenable<CompletionList>'.
      Types of property 'then' are incompatible.
        Type '<TResult1 = { suggestions: CompletionItem[]; }, TResult2 = never>(onfulfilled?: (value: { suggestions: CompletionItem[]; }) => TResult1 | PromiseLike<TResult1>, onrejected?: (reason: any) => TResult2 | PromiseLike<...>) => Promise<...>' is not assignable to type '<TResult1 = CompletionList, TResult2 = never>(onfulfilled?: (value: CompletionList) => TResult1 | PromiseLike<TResult1>, onrejected?: (reason: any) => TResult2 | PromiseLike<...>) => PromiseLike<...>'.
          Types of parameters 'onfulfilled' and 'onfulfilled' are incompatible.
            Types of parameters 'value' and 'value' are incompatible.
              Type '{ suggestions: CompletionItem[]; }' is not assignable to type 'CompletionList'.
                Types of property 'suggestions' are incompatible.
                  Type 'CompletionItem[]' is not assignable to type 'import("D:/ADE-stable-1.0/frontend/node_modules/monaco-editor/esm/vs/editor/editor.api").languages.CompletionItem[]'.
                    Property 'range' is missing in type 'CompletionItem' but required in type 'import("D:/ADE-stable-1.0/frontend/node_modules/monaco-editor/esm/vs/editor/editor.api").languages.CompletionItem'.
    101 |       // Register custom completion provider
    102 |       monaco.languages.registerCompletionItemProvider(getLanguageFromFile(currentFile), {
  > 103 |         provideCompletionItems: async (model, position) => {
        |         ^^^^^^^^^^^^^^^^^^^^^^
    104 |           const suggestions: CompletionItem[] = [];
    105 |           
    106 |           // Add AI-powered code completion
ERROR in src/components/CodeReview/AIReviewPanel.stories.tsx:1:46
TS2307: Cannot find module '@storybook/react' or its corresponding type declarations.
  > 1 | import type { Meta, StoryObj, StoryFn } from '@storybook/react';
      |                                              ^^^^^^^^^^^^^^^^^^
    2 | import { ThemeProvider, createTheme } from '@mui/material/styles';
    3 | import AIReviewPanel from './AIReviewPanel';
    4 | import { CodeQualityService, CodeIssue } from '../../services/codeAnalysis/CodeQualityService';
ERROR in src/components/collaboration/AIPairProgramming.tsx:29:10
TS2724: '"../../services/collaboration/CollaborationService"' has no exported member named 'CollaborationService'. Did you mean 'collaborationService'?
    27 |   ContentCopy as CopyIcon,
    28 | } from '@mui/icons-material';
  > 29 | import { CollaborationService, TextChange } from '../../services/collaboration/CollaborationService';
       |          ^^^^^^^^^^^^^^^^^^^^
    30 |
    31 | interface AISuggestion {
    32 |   id: string;
ERROR in src/components/collaboration/AIPairProgramming.tsx:125:24
TS2339: Property 'file' does not exist on type 'TextChange'.
    123 |         body: JSON.stringify({
    124 |           sessionId,
  > 125 |           file: change.file,
        |                        ^^^^
    126 |           change,
    127 |         }),
    128 |       });
ERROR in src/components/collaboration/CollaborationPanel.tsx:26:10
TS2724: '"../../services/collaboration/CollaborationService"' has no exported member named 'CollaborationService'. Did you mean 'collaborationService'?
    24 |   PersonAdd as PersonAddIcon,
    25 | } from '@mui/icons-material';
  > 26 | import { CollaborationService, CollaborationState, CollaborationUser } from '../../services/collaboration/CollaborationService';
       |          ^^^^^^^^^^^^^^^^^^^^
    27 |
    28 | const CollaborationContainer = styled(Paper)(({ theme }) => ({
    29 |   position: 'fixed',
ERROR in src/components/collaboration/CollaborationPanel.tsx:26:32
TS2305: Module '"../../services/collaboration/CollaborationService"' has no exported member 'CollaborationState'.
    24 |   PersonAdd as PersonAddIcon,
    25 | } from '@mui/icons-material';
  > 26 | import { CollaborationService, CollaborationState, CollaborationUser } from '../../services/collaboration/CollaborationService';
       |                                ^^^^^^^^^^^^^^^^^^
    27 |
    28 | const CollaborationContainer = styled(Paper)(({ theme }) => ({
    29 |   position: 'fixed',
ERROR in src/components/collaboration/CollaborationPanel.tsx:26:52
TS2724: '"../../services/collaboration/CollaborationService"' has no exported member named 'CollaborationUser'. Did you mean 'collaborationService'?
    24 |   PersonAdd as PersonAddIcon,
    25 | } from '@mui/icons-material';
  > 26 | import { CollaborationService, CollaborationState, CollaborationUser } from '../../services/collaboration/CollaborationService';
       |                                                    ^^^^^^^^^^^^^^^^^
    27 |
    28 | const CollaborationContainer = styled(Paper)(({ theme }) => ({
    29 |   position: 'fixed',
ERROR in src/components/CommandCenter/AgentCommandCenter.tsx:24:48
TS2307: Cannot find module '../../../backend/src/services/agent/AgentRegistry' or its corresponding type declarations.
    22 | import { Add as AddIcon, Refresh as RefreshIcon } from '@mui/icons-material';
    23 | import AgentVisualization from './AgentVisualization';
  > 24 | import { AgentConfig, AgentRegistration } from '../../../backend/src/services/agent/AgentRegistry';
       |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    25 | import { LLMEndpoint, LLMProvider } from '../../../backend/src/services/agent/LLMProviderService';
    26 |
    27 | interface TabPanelProps {
ERROR in src/components/CommandCenter/AgentCommandCenter.tsx:25:42
TS2307: Cannot find module '../../../backend/src/services/agent/LLMProviderService' or its corresponding type declarations.
    23 | import AgentVisualization from './AgentVisualization';
    24 | import { AgentConfig, AgentRegistration } from '../../../backend/src/services/agent/AgentRegistry';
  > 25 | import { LLMEndpoint, LLMProvider } from '../../../backend/src/services/agent/LLMProviderService';
       |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    26 |
    27 | interface TabPanelProps {
    28 |   children?: React.ReactNode;
ERROR in src/components/CommandCenter/AgentVisualization.tsx:2:30
TS2307: Cannot find module 'react-force-graph' or its corresponding type declarations.
    1 | import React, { useEffect, useRef, useState } from 'react';
  > 2 | import { ForceGraph2D } from 'react-force-graph';
      |                              ^^^^^^^^^^^^^^^^^^^
    3 | import { Box, Typography, Paper, Tooltip } from '@mui/material';
    4 | import { AgentConfig, AgentRegistration } from '../../../backend/src/services/agent/AgentRegistry';
    5 | import { LLMEndpoint } from '../../../backend/src/services/agent/LLMProviderService';
ERROR in src/components/CommandCenter/AgentVisualization.tsx:4:48
TS2307: Cannot find module '../../../backend/src/services/agent/AgentRegistry' or its corresponding type declarations.
    2 | import { ForceGraph2D } from 'react-force-graph';
    3 | import { Box, Typography, Paper, Tooltip } from '@mui/material';
  > 4 | import { AgentConfig, AgentRegistration } from '../../../backend/src/services/agent/AgentRegistry';
      |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    5 | import { LLMEndpoint } from '../../../backend/src/services/agent/LLMProviderService';
    6 |
    7 | interface Node {
ERROR in src/components/CommandCenter/AgentVisualization.tsx:5:29
TS2307: Cannot find module '../../../backend/src/services/agent/LLMProviderService' or its corresponding type declarations.
    3 | import { Box, Typography, Paper, Tooltip } from '@mui/material';
    4 | import { AgentConfig, AgentRegistration } from '../../../backend/src/services/agent/AgentRegistry';
  > 5 | import { LLMEndpoint } from '../../../backend/src/services/agent/LLMProviderService';
      |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    6 |
    7 | interface Node {
    8 |   id: string;
ERROR in src/components/CommandHub.tsx:47:10
TS2614: Module '"./common/SyntaxHighlighter"' has no exported member 'SyntaxHighlighter'. Did you mean to use 'import SyntaxHighlighter from "./common/SyntaxHighlighter"' instead?
    45 | } from '@mui/icons-material';
    46 | import CodeEditor from './CodeEditor';
  > 47 | import { SyntaxHighlighter } from './common/SyntaxHighlighter';
       |          ^^^^^^^^^^^^^^^^^
    48 |
    49 | interface CommandHubProps {
    50 |   onSave: (design: any) => void;
ERROR in src/components/CommandHub/index.tsx:6:23
TS2307: Cannot find module './CodeAgent' or its corresponding type declarations.
    4 | import { Outlet, useNavigate, useLocation } from 'react-router-dom';
    5 | import DesignAgent from './DesignAgent';
  > 6 | import CodeAgent from './CodeAgent';
      |                       ^^^^^^^^^^^^^
    7 | import AIAssistant from './AIAssistant';
    8 | import ToolsPanel from './ToolsPanel';
    9 |
ERROR in src/components/CommandHub/index.tsx:7:25
TS2307: Cannot find module './AIAssistant' or its corresponding type declarations.
     5 | import DesignAgent from './DesignAgent';
     6 | import CodeAgent from './CodeAgent';
  >  7 | import AIAssistant from './AIAssistant';
       |                         ^^^^^^^^^^^^^^^
     8 | import ToolsPanel from './ToolsPanel';
     9 |
    10 | const StyledRoot = styled(Box)(({ theme }) => ({
ERROR in src/components/CommandHub/index.tsx:8:24
TS2307: Cannot find module './ToolsPanel' or its corresponding type declarations.
     6 | import CodeAgent from './CodeAgent';
     7 | import AIAssistant from './AIAssistant';
  >  8 | import ToolsPanel from './ToolsPanel';
       |                        ^^^^^^^^^^^^^^
     9 |
    10 | const StyledRoot = styled(Box)(({ theme }) => ({
    11 |   height: '100%',
ERROR in src/components/CommandHub/ProjectTimeline.tsx:10:8
TS2307: Cannot find module '@mui/lab' or its corresponding type declarations.
     8 |   TimelineContent,
     9 |   TimelineDot,
  > 10 | } from '@mui/lab';
       |        ^^^^^^^^^^
    11 | import { CheckCircle, RadioButtonUnchecked, Warning } from '@mui/icons-material';
    12 |
    13 | interface Milestone {
ERROR in src/components/CommandPanel.tsx:11:3
TS2305: Module '"@mui/material"' has no exported member 'VisuallyHidden'.
     9 |   useMediaQuery,
    10 |   Tooltip,
  > 11 |   VisuallyHidden,
       |   ^^^^^^^^^^^^^^
    12 | } from '@mui/material';
    13 | import {
    14 |   Send as SendIcon,
ERROR in src/components/common/EnhancedButton.tsx:88:7
TS2322: Type '"primary" | "secondary" | "text" | "outline"' is not assignable to type 'OverridableStringUnion<"outlined" | "text" | "contained", ButtonPropsVariantOverrides>'.
  Type '"primary"' is not assignable to type 'OverridableStringUnion<"outlined" | "text" | "contained", ButtonPropsVariantOverrides>'.
    86 |     <StyledButton
    87 |       ref={buttonRef}
  > 88 |       variant={variant}
       |       ^^^^^^^
    89 |       size={size}
    90 |       disabled={disabled || loading}
    91 |       onClick={handleClick}
ERROR in src/components/Dashboard/Dashboard.tsx:120:13
TS2322: Type '{ pullRequestId: string; changes: undefined[]; comments: undefined[]; onAddComment: () => void; onUpdateComment: () => void; onDeleteComment: () => void; onResolveComment: () => void; onApprove: () => void; onRequestChanges: () => void; }' is not assignable to type 'IntrinsicAttributes & CodeReviewPanelProps'.
  Property 'onApprove' does not exist on type 'IntrinsicAttributes & CodeReviewPanelProps'.
    118 |             onDeleteComment={() => {}}
    119 |             onResolveComment={() => {}}
  > 120 |             onApprove={() => {}}
        |             ^^^^^^^^^
    121 |             onRequestChanges={() => {}}
    122 |           />
    123 |         );
ERROR in src/components/Dashboard/Dashboard.tsx:146:13
TS2322: Type '{ url: string; onRefresh: () => void; onOpenInNewWindow: () => void; onDeviceChange: () => void; onZoomChange: () => void; onFullscreenToggle: () => void; onSettingsChange: () => void; }' is not assignable to type 'IntrinsicAttributes & PreviewPanelProps'.
  Property 'url' does not exist on type 'IntrinsicAttributes & PreviewPanelProps'.
    144 |         return (
    145 |           <PreviewPanel
  > 146 |             url="http://localhost:3000"
        |             ^^^
    147 |             onRefresh={() => {}}
    148 |             onOpenInNewWindow={() => {}}
    149 |             onDeviceChange={() => {}}
ERROR in src/components/Dashboard/Dashboard.tsx:156:17
TS2741: Property 'onSendMessage' is missing in type '{}' but required in type 'UnifiedChatProps'.
    154 |         );
    155 |       case 'chat':
  > 156 |         return <UnifiedChat />;
        |                 ^^^^^^^^^^^
    157 |       case 'notifications':
    158 |         return <NotificationSystem />;
    159 |       case 'settings':
ERROR in src/components/Dashboard/Dashboard.tsx:158:17
TS2739: Type '{}' is missing the following properties from type 'NotificationSystemProps': notifications, onMarkAsRead, onMarkAllAsRead, onNotificationClick, onDismiss
    156 |         return <UnifiedChat />;
    157 |       case 'notifications':
  > 158 |         return <NotificationSystem />;
        |                 ^^^^^^^^^^^^^^^^^^
    159 |       case 'settings':
    160 |         return (
    161 |           <ProjectConfig
ERROR in src/components/design/DesignCanvas.tsx:84:13
TS2322: Type '{ position: string; left: string; top: string; width: string; height: string; cursor: string; outline: string; }' is not assignable to type 'CSSProperties'.
  Types of property 'position' are incompatible.
    Type 'string' is not assignable to type 'Position'.
    82 |           <div
    83 |             key={component.id}
  > 84 |             style={componentStyles}
       |             ^^^^^
    85 |             onClick={() => handleComponentClick(component)}
    86 |           />
    87 |         );
ERROR in src/components/design/DesignCanvas.tsx:92:13
TS2322: Type '{ position: string; left: string; top: string; width: string; height: string; cursor: string; outline: string; }' is not assignable to type 'CSSProperties'.
  Types of property 'position' are incompatible.
    Type 'string' is not assignable to type 'Position'.
    90 |           <div
    91 |             key={component.id}
  > 92 |             style={componentStyles}
       |             ^^^^^
    93 |             onClick={() => handleComponentClick(component)}
    94 |           >
    95 |             {component.properties.text || 'Text'}
ERROR in src/components/design/DesignCanvas.tsx:102:13
TS2322: Type '{ position: string; left: string; top: string; width: string; height: string; cursor: string; outline: string; }' is not assignable to type 'CSSProperties'.
  Types of property 'position' are incompatible.
    Type 'string' is not assignable to type 'Position'.
    100 |           <div
    101 |             key={component.id}
  > 102 |             style={componentStyles}
        |             ^^^^^
    103 |             onClick={() => handleComponentClick(component)}
    104 |           >
    105 |             {component.properties.src ? (
ERROR in src/components/design/DesignCanvas.tsx:122:13
TS2322: Type '{ position: string; left: string; top: string; width: string; height: string; cursor: string; outline: string; }' is not assignable to type 'CSSProperties'.
  Types of property 'position' are incompatible.
    Type 'string' is not assignable to type 'Position'.
    120 |           <button
    121 |             key={component.id}
  > 122 |             style={componentStyles}
        |             ^^^^^
    123 |             onClick={() => handleComponentClick(component)}
    124 |           >
    125 |             {component.properties.text || 'Button'}
ERROR in src/components/design/DesignCanvas.tsx:149:35
TS2339: Property 'properties' does not exist on type 'DesignPage'.
    147 |             transform: `scale(${scale}) translate(${position.x}px, ${position.y}px)`,
    148 |             transformOrigin: '0 0',
  > 149 |             width: `${currentPage.properties.width || 1920}px`,
        |                                   ^^^^^^^^^^
    150 |             height: `${currentPage.properties.height || 1080}px`,
    151 |             margin: '20px',
    152 |           }}
ERROR in src/components/design/DesignCanvas.tsx:150:36
TS2339: Property 'properties' does not exist on type 'DesignPage'.
    148 |             transformOrigin: '0 0',
    149 |             width: `${currentPage.properties.width || 1920}px`,
  > 150 |             height: `${currentPage.properties.height || 1080}px`,
        |                                    ^^^^^^^^^^
    151 |             margin: '20px',
    152 |           }}
    153 |         >
ERROR in src/components/design/DesignCanvas.tsx:158:44
TS2339: Property 'properties' does not exist on type 'DesignPage'.
    156 |             className="absolute inset-0"
    157 |             style={{
  > 158 |               backgroundColor: currentPage.properties.backgroundColor || '#ffffff',
        |                                            ^^^^^^^^^^
    159 |             }}
    160 |           />
    161 |
ERROR in src/components/design/DesignChat.tsx:86:53
TS2339: Property 'suggestedTool' does not exist on type 'AgentResponse'.
    84 |
    85 |       // If in hybrid mode and the response suggests a tool action
  > 86 |       if (modificationMode === 'hybrid' && response.suggestedTool) {
       |                                                     ^^^^^^^^^^^^^
    87 |         const toolMessage: ChatMessage = {
    88 |           id: (Date.now() + 2).toString(),
    89 |           type: 'tool',
ERROR in src/components/design/DesignChat.tsx:90:48
TS2339: Property 'suggestedTool' does not exist on type 'AgentResponse'.
    88 |           id: (Date.now() + 2).toString(),
    89 |           type: 'tool',
  > 90 |           content: `Suggested tool: ${response.suggestedTool.name}`,
       |                                                ^^^^^^^^^^^^^
    91 |           timestamp: new Date(),
    92 |           metadata: {
    93 |             toolAction: {
ERROR in src/components/design/DesignChat.tsx:94:30
TS2339: Property 'suggestedTool' does not exist on type 'AgentResponse'.
    92 |           metadata: {
    93 |             toolAction: {
  > 94 |               type: response.suggestedTool.type,
       |                              ^^^^^^^^^^^^^
    95 |               target: response.suggestedTool.target,
    96 |               value: response.suggestedTool.value,
    97 |             },
ERROR in src/components/design/DesignChat.tsx:95:32
TS2339: Property 'suggestedTool' does not exist on type 'AgentResponse'.
    93 |             toolAction: {
    94 |               type: response.suggestedTool.type,
  > 95 |               target: response.suggestedTool.target,
       |                                ^^^^^^^^^^^^^
    96 |               value: response.suggestedTool.value,
    97 |             },
    98 |           },
ERROR in src/components/design/DesignChat.tsx:96:31
TS2339: Property 'suggestedTool' does not exist on type 'AgentResponse'.
    94 |               type: response.suggestedTool.type,
    95 |               target: response.suggestedTool.target,
  > 96 |               value: response.suggestedTool.value,
       |                               ^^^^^^^^^^^^^
    97 |             },
    98 |           },
    99 |         };
ERROR in src/components/design/DesignChat.tsx:101:32
TS2339: Property 'suggestedTool' does not exist on type 'AgentResponse'.
     99 |         };
    100 |         setMessages(prev => [...prev, toolMessage]);
  > 101 |         setActiveTool(response.suggestedTool.name);
        |                                ^^^^^^^^^^^^^
    102 |       }
    103 |     } catch (error) {
    104 |       const errorMessage: ChatMessage = {
ERROR in src/components/design/DesignCommandCenter.tsx:92:20
TS2339: Property 'changes' does not exist on type 'DesignSuggestion'.
    90 |
    91 |   const handleSuggestionApply = (suggestion: DesignSuggestion) => {
  > 92 |     if (suggestion.changes) {
       |                    ^^^^^^^
    93 |       handleDesignUpdate(suggestion.changes);
    94 |     }
    95 |   };
ERROR in src/components/design/DesignCommandCenter.tsx:93:37
TS2339: Property 'changes' does not exist on type 'DesignSuggestion'.
    91 |   const handleSuggestionApply = (suggestion: DesignSuggestion) => {
    92 |     if (suggestion.changes) {
  > 93 |       handleDesignUpdate(suggestion.changes);
       |                                     ^^^^^^^
    94 |     }
    95 |   };
    96 |
ERROR in src/components/design/DesignCommandCenter.tsx:104:35
TS2339: Property 'type' does not exist on type '{ label: string; handler: () => void; }'.
    102 |   const handleNotificationAction = (notification: DesignNotification) => {
    103 |     if (notification.action) {
  > 104 |       switch (notification.action.type) {
        |                                   ^^^^
    105 |         case 'review':
    106 |           setCurrentTab('preview');
    107 |           break;
ERROR in src/components/design/DesignCommandCenter.tsx:109:50
TS2339: Property 'data' does not exist on type '{ label: string; handler: () => void; }'.
    107 |           break;
    108 |         case 'update':
  > 109 |           handleDesignUpdate(notification.action.data);
        |                                                  ^^^^
    110 |           break;
    111 |         case 'finalize':
    112 |           handleFinalize(notification.action.data);
ERROR in src/components/design/DesignCommandCenter.tsx:112:46
TS2339: Property 'data' does not exist on type '{ label: string; handler: () => void; }'.
    110 |           break;
    111 |         case 'finalize':
  > 112 |           handleFinalize(notification.action.data);
        |                                              ^^^^
    113 |           break;
    114 |         default:
    115 |           console.log('Unknown notification action:', notification.action);
ERROR in src/components/design/DesignCommandCenter.tsx:135:13
TS2322: Type 'Partial<DesignSystem>' is not assignable to type 'DesignSystem'.
  Property 'id' is optional in type 'Partial<DesignSystem>' but required in type 'DesignSystem'.
    133 |         return (
    134 |           <DesignToolsPanel
  > 135 |             currentDesign={currentDesign}
        |             ^^^^^^^^^^^^^
    136 |             onDesignUpdate={handleDesignUpdate}
    137 |             modificationMode={modificationMode}
    138 |           />
ERROR in src/components/design/DesignCommandCenter.tsx:154:13
TS2322: Type '{ design: Partial<DesignSystem>; onUpdate: (design: Partial<DesignSystem>) => void; currentPage: string; }' is not assignable to type 'IntrinsicAttributes & DesignPreviewProps'.
  Property 'design' does not exist on type 'IntrinsicAttributes & DesignPreviewProps'.
    152 |         return (
    153 |           <DesignPreview
  > 154 |             design={currentDesign}
        |             ^^^^^^
    155 |             onUpdate={handleDesignUpdate}
    156 |             currentPage={currentPage}
    157 |           />
ERROR in src/components/design/DesignCommandCenter.tsx:186:13
TS2322: Type '(suggestion: import("D:/ADE-stable-1.0/frontend/src/types/design").DesignSuggestion) => void' is not assignable to type '(suggestion: import("D:/ADE-stable-1.0/frontend/src/services/DesignAgent").DesignSuggestion) => void'.
  Types of parameters 'suggestion' and 'suggestion' are incompatible.
    Type 'import("D:/ADE-stable-1.0/frontend/src/services/DesignAgent").DesignSuggestion' is not assignable to type 'import("D:/ADE-stable-1.0/frontend/src/types/design").DesignSuggestion'.
      Types of property 'type' are incompatible.
        Type '"style" | "page" | "component" | "layout" | "system"' is not assignable to type '"style" | "component" | "layout" | "theme"'.
          Type '"page"' is not assignable to type '"style" | "component" | "layout" | "theme"'.
    184 |           <DesignSuggestionsPanel
    185 |             designAgent={designAgent}
  > 186 |             onSuggestionApply={handleSuggestionApply}
        |             ^^^^^^^^^^^^^^^^^
    187 |             onSuggestionReject={handleSuggestionReject}
    188 |             onNotificationAction={handleNotificationAction}
    189 |           />
ERROR in src/components/design/DesignCommandCenter.tsx:187:13
TS2322: Type '(suggestion: import("D:/ADE-stable-1.0/frontend/src/types/design").DesignSuggestion) => void' is not assignable to type '(suggestion: import("D:/ADE-stable-1.0/frontend/src/services/DesignAgent").DesignSuggestion) => void'.
  Types of parameters 'suggestion' and 'suggestion' are incompatible.
    Type 'import("D:/ADE-stable-1.0/frontend/src/services/DesignAgent").DesignSuggestion' is not assignable to type 'import("D:/ADE-stable-1.0/frontend/src/types/design").DesignSuggestion'.
      Types of property 'type' are incompatible.
        Type '"style" | "page" | "component" | "layout" | "system"' is not assignable to type '"style" | "component" | "layout" | "theme"'.
          Type '"page"' is not assignable to type '"style" | "component" | "layout" | "theme"'.
    185 |             designAgent={designAgent}
    186 |             onSuggestionApply={handleSuggestionApply}
  > 187 |             onSuggestionReject={handleSuggestionReject}
        |             ^^^^^^^^^^^^^^^^^^
    188 |             onNotificationAction={handleNotificationAction}
    189 |           />
    190 |         );
ERROR in src/components/design/DesignCommandCenter.tsx:188:13
TS2322: Type '(notification: import("D:/ADE-stable-1.0/frontend/src/types/design").DesignNotification) => void' is not assignable to type '(notification: import("D:/ADE-stable-1.0/frontend/src/services/DesignAgent").DesignNotification) => void'.
  Types of parameters 'notification' and 'notification' are incompatible.
    Type 'DesignNotification' is missing the following properties from type 'DesignNotification': source, read
    186 |             onSuggestionApply={handleSuggestionApply}
    187 |             onSuggestionReject={handleSuggestionReject}
  > 188 |             onNotificationAction={handleNotificationAction}
        |             ^^^^^^^^^^^^^^^^^^^^
    189 |           />
    190 |         );
    191 |       default:
ERROR in src/components/design/DesignPreview.tsx:47:13
TS2322: Type '{ position: string; left: string; top: string; width: string; height: string; }' is not assignable to type 'CSSProperties'.
  Types of property 'position' are incompatible.
    Type 'string' is not assignable to type 'Position'.
    45 |           <div
    46 |             key={component.id}
  > 47 |             style={componentStyles}
       |             ^^^^^
    48 |           />
    49 |         );
    50 |       case 'text':
ERROR in src/components/design/DesignPreview.tsx:54:13
TS2322: Type '{ position: string; left: string; top: string; width: string; height: string; }' is not assignable to type 'CSSProperties'.
  Types of property 'position' are incompatible.
    Type 'string' is not assignable to type 'Position'.
    52 |           <div
    53 |             key={component.id}
  > 54 |             style={componentStyles}
       |             ^^^^^
    55 |           >
    56 |             {component.properties.text || 'Text'}
    57 |           </div>
ERROR in src/components/design/DesignPreview.tsx:63:13
TS2322: Type '{ position: string; left: string; top: string; width: string; height: string; }' is not assignable to type 'CSSProperties'.
  Types of property 'position' are incompatible.
    Type 'string' is not assignable to type 'Position'.
    61 |           <div
    62 |             key={component.id}
  > 63 |             style={componentStyles}
       |             ^^^^^
    64 |           >
    65 |             {component.properties.src ? (
    66 |               <img
ERROR in src/components/design/DesignPreview.tsx:82:13
TS2322: Type '{ position: string; left: string; top: string; width: string; height: string; }' is not assignable to type 'CSSProperties'.
  Types of property 'position' are incompatible.
    Type 'string' is not assignable to type 'Position'.
    80 |           <button
    81 |             key={component.id}
  > 82 |             style={componentStyles}
       |             ^^^^^
    83 |           >
    84 |             {component.properties.text || 'Button'}
    85 |           </button>
ERROR in src/components/design/DesignPreview.tsx:195:45
TS2339: Property 'properties' does not exist on type 'DesignPage'.
    193 |             className="absolute inset-0"
    194 |             style={{
  > 195 |               backgroundColor: currentPage?.properties.backgroundColor || '#ffffff',
        |                                             ^^^^^^^^^^
    196 |             }}
    197 |           />
    198 |
ERROR in src/components/design/DesignPropertiesPanel.tsx:44:24
TS2322: Type '(DesignStyle | { id: string; name: string; type: string; properties?: Record<string, any>; styles?: Record<string, string>; pageId?: string; parentId?: string; children?: string[]; value: string; scope: "page" | ... 1 more ... | "global"; targetId?: string; })[]' is not assignable to type 'DesignStyle[]'.
  Type 'DesignStyle | { id: string; name: string; type: string; properties?: Record<string, any>; styles?: Record<string, string>; pageId?: string; parentId?: string; children?: string[]; value: string; scope: "page" | ... 1 more ... | "global"; targetId?: string; }' is not assignable to type 'DesignStyle'.
    Type '{ id: string; name: string; type: string; properties?: Record<string, any>; styles?: Record<string, string>; pageId?: string; parentId?: string; children?: string[]; value: string; scope: "global" | "page" | "component"; targetId?: string; }' is not assignable to type 'DesignStyle'.
      Types of property 'type' are incompatible.
        Type 'string' is not assignable to type '"FILL" | "TEXT" | "EFFECT" | "GRID"'.
    42 |         style.id === selectedStyle.id ? { ...style, ...editForm } : style
    43 |       );
  > 44 |       onDesignUpdate({ styles: updatedStyles });
       |                        ^^^^^^
    45 |     }
    46 |   };
    47 |
ERROR in src/components/design/DesignPropertiesPanel.tsx:84:44
TS2339: Property 'properties' does not exist on type 'Partial<DesignComponent | DesignStyle>'.
  Property 'properties' does not exist on type 'Partial<DesignStyle>'.
    82 |           <label className="block text-sm font-medium text-gray-700 mb-1">Properties</label>
    83 |           <textarea
  > 84 |             value={JSON.stringify(editForm.properties || {}, null, 2)}
       |                                            ^^^^^^^^^^
    85 |             onChange={e => {
    86 |               try {
    87 |                 handlePropertyChange('properties', JSON.parse(e.target.value));
ERROR in src/components/design/DesignPropertiesPanel.tsx:99:44
TS2339: Property 'styles' does not exist on type 'Partial<DesignComponent | DesignStyle>'.
  Property 'styles' does not exist on type 'Partial<DesignStyle>'.
     97 |           <label className="block text-sm font-medium text-gray-700 mb-1">Styles</label>
     98 |           <textarea
  >  99 |             value={JSON.stringify(editForm.styles || {}, null, 2)}
        |                                            ^^^^^^
    100 |             onChange={e => {
    101 |               try {
    102 |                 handlePropertyChange('styles', JSON.parse(e.target.value));
ERROR in src/components/design/DesignPropertiesPanel.tsx:152:29
TS2339: Property 'value' does not exist on type 'Partial<DesignComponent | DesignStyle>'.
  Property 'value' does not exist on type 'Partial<DesignComponent>'.
    150 |           <input
    151 |             type="text"
  > 152 |             value={editForm.value || ''}
        |                             ^^^^^
    153 |             onChange={e => handlePropertyChange('value', e.target.value)}
    154 |             className="w-full px-3 py-2 border rounded-md"
    155 |           />
ERROR in src/components/design/DesignPropertiesPanel.tsx:160:29
TS2339: Property 'scope' does not exist on type 'Partial<DesignComponent | DesignStyle>'.
  Property 'scope' does not exist on type 'Partial<DesignComponent>'.
    158 |           <label className="block text-sm font-medium text-gray-700 mb-1">Scope</label>
    159 |           <select
  > 160 |             value={editForm.scope || ''}
        |                             ^^^^^
    161 |             onChange={e => handlePropertyChange('scope', e.target.value)}
    162 |             className="w-full px-3 py-2 border rounded-md"
    163 |           >
ERROR in src/components/design/FigmaIntegration.tsx:2:30
TS2307: Cannot find module '../../../backend/src/services/design/FigmaService' or its corresponding type declarations.
    1 | import React, { useState, useEffect } from 'react';
  > 2 | import { FigmaService } from '../../../backend/src/services/design/FigmaService';
      |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    3 | import { DesignSystem } from '../../../types/design';
    4 | import { DesignAgent } from '../../../services/DesignAgent';
    5 |
ERROR in src/components/design/FigmaIntegration.tsx:3:30
TS2307: Cannot find module '../../../types/design' or its corresponding type declarations.
    1 | import React, { useState, useEffect } from 'react';
    2 | import { FigmaService } from '../../../backend/src/services/design/FigmaService';
  > 3 | import { DesignSystem } from '../../../types/design';
      |                              ^^^^^^^^^^^^^^^^^^^^^^^
    4 | import { DesignAgent } from '../../../services/DesignAgent';
    5 |
    6 | interface FigmaIntegrationProps {
ERROR in src/components/design/FigmaIntegration.tsx:4:29
TS2307: Cannot find module '../../../services/DesignAgent' or its corresponding type declarations.
    2 | import { FigmaService } from '../../../backend/src/services/design/FigmaService';
    3 | import { DesignSystem } from '../../../types/design';
  > 4 | import { DesignAgent } from '../../../services/DesignAgent';
      |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    5 |
    6 | interface FigmaIntegrationProps {
    7 |   onFileSelect: (fileKey: string) => void;
ERROR in src/components/design/StyleGuide.tsx:21:7
TS2322: Type '"class"' is not assignable to type '"FILL" | "TEXT" | "EFFECT" | "GRID"'.
    19 |       id: `style-${Date.now()}`,
    20 |       name: 'New Style',
  > 21 |       type: 'class',
       |       ^^^^
    22 |       properties: {},
    23 |       scope: 'global',
    24 |     };
ERROR in src/components/design/StyleGuide.tsx:77:34
TS2339: Property 'properties' does not exist on type 'DesignStyle'.
    75 |         className="w-full h-24 border rounded-lg p-2"
    76 |         style={{
  > 77 |           backgroundColor: style.properties.backgroundColor || '#ffffff',
       |                                  ^^^^^^^^^^
    78 |           borderColor: style.properties.borderColor || '#d1d5db',
    79 |           borderWidth: style.properties.borderWidth || '1px',
    80 |         }}
ERROR in src/components/design/StyleGuide.tsx:78:30
TS2339: Property 'properties' does not exist on type 'DesignStyle'.
    76 |         style={{
    77 |           backgroundColor: style.properties.backgroundColor || '#ffffff',
  > 78 |           borderColor: style.properties.borderColor || '#d1d5db',
       |                              ^^^^^^^^^^
    79 |           borderWidth: style.properties.borderWidth || '1px',
    80 |         }}
    81 |       >
ERROR in src/components/design/StyleGuide.tsx:79:30
TS2339: Property 'properties' does not exist on type 'DesignStyle'.
    77 |           backgroundColor: style.properties.backgroundColor || '#ffffff',
    78 |           borderColor: style.properties.borderColor || '#d1d5db',
  > 79 |           borderWidth: style.properties.borderWidth || '1px',
       |                              ^^^^^^^^^^
    80 |         }}
    81 |       >
    82 |         <div className="text-xs text-gray-500 mb-1">{style.name}</div>
ERROR in src/components/design/StyleGuide.tsx:87:28
TS2339: Property 'properties' does not exist on type 'DesignStyle'.
    85 |             className="w-full h-full flex items-center justify-center"
    86 |             style={{
  > 87 |               color: style.properties.color || '#000000',
       |                            ^^^^^^^^^^
    88 |               fontSize: style.properties.fontSize || '16px',
    89 |               fontFamily: style.properties.fontFamily || 'sans-serif',
    90 |             }}
ERROR in src/components/design/StyleGuide.tsx:88:31
TS2339: Property 'properties' does not exist on type 'DesignStyle'.
    86 |             style={{
    87 |               color: style.properties.color || '#000000',
  > 88 |               fontSize: style.properties.fontSize || '16px',
       |                               ^^^^^^^^^^
    89 |               fontFamily: style.properties.fontFamily || 'sans-serif',
    90 |             }}
    91 |           >
ERROR in src/components/design/StyleGuide.tsx:89:33
TS2339: Property 'properties' does not exist on type 'DesignStyle'.
    87 |               color: style.properties.color || '#000000',
    88 |               fontSize: style.properties.fontSize || '16px',
  > 89 |               fontFamily: style.properties.fontFamily || 'sans-serif',
       |                                 ^^^^^^^^^^
    90 |             }}
    91 |           >
    92 |             {style.properties.text || 'Style Preview'}
ERROR in src/components/design/StyleGuide.tsx:92:20
TS2339: Property 'properties' does not exist on type 'DesignStyle'.
    90 |             }}
    91 |           >
  > 92 |             {style.properties.text || 'Style Preview'}
       |                    ^^^^^^^^^^
    93 |           </div>
    94 |         </div>
    95 |       </div>
ERROR in src/components/design/StyleGuide.tsx:163:48
TS2345: Argument of type '(prev: Partial<DesignStyle>) => { type: string; id?: string; name?: string; value?: string; scope?: "page" | "component" | "global"; targetId?: string; }' is not assignable to parameter of type 'SetStateAction<Partial<DesignStyle>>'.
  Type '(prev: Partial<DesignStyle>) => { type: string; id?: string; name?: string; value?: string; scope?: "page" | "component" | "global"; targetId?: string; }' is not assignable to type '(prevState: Partial<DesignStyle>) => Partial<DesignStyle>'.
    Call signature return types '{ type: string; id?: string; name?: string; value?: string; scope?: "page" | "component" | "global"; targetId?: string; }' and 'Partial<DesignStyle>' are incompatible.
      The types of 'type' are incompatible between these types.
        Type 'string' is not assignable to type '"FILL" | "TEXT" | "EFFECT" | "GRID"'.
    161 |                 <select
    162 |                   value={editForm.type || ''}
  > 163 |                   onChange={(e) => setEditForm(prev => ({ ...prev, type: e.target.value }))}
        |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    164 |                   className="w-full px-3 py-2 border rounded"
    165 |                 >
    166 |                   <option value="class">Class</option>
ERROR in src/components/design/StyleGuide.tsx:176:48
TS2345: Argument of type '(prev: Partial<DesignStyle>) => { scope: string; id?: string; name?: string; type?: "FILL" | "TEXT" | "EFFECT" | "GRID"; value?: string; targetId?: string; }' is not assignable to parameter of type 'SetStateAction<Partial<DesignStyle>>'.
  Type '(prev: Partial<DesignStyle>) => { scope: string; id?: string; name?: string; type?: "FILL" | "TEXT" | "EFFECT" | "GRID"; value?: string; targetId?: string; }' is not assignable to type '(prevState: Partial<DesignStyle>) => Partial<DesignStyle>'.
    Call signature return types '{ scope: string; id?: string; name?: string; type?: "FILL" | "TEXT" | "EFFECT" | "GRID"; value?: string; targetId?: string; }' and 'Partial<DesignStyle>' are incompatible.
      The types of 'scope' are incompatible between these types.
        Type 'string' is not assignable to type '"page" | "component" | "global"'.
    174 |                 <select
    175 |                   value={editForm.scope || 'global'}
  > 176 |                   onChange={(e) => setEditForm(prev => ({ ...prev, scope: e.target.value }))}
        |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    177 |                   className="w-full px-3 py-2 border rounded"
    178 |                 >
    179 |                   <option value="global">Global</option>
ERROR in src/components/design/StyleGuide.tsx:193:39
TS2339: Property 'properties' does not exist on type 'Partial<DesignStyle>'.
    191 |                     <input
    192 |                       type="color"
  > 193 |                       value={editForm.properties?.backgroundColor || '#ffffff'}
        |                                       ^^^^^^^^^^
    194 |                       onChange={(e) => setEditForm(prev => ({
    195 |                         ...prev,
    196 |                         properties: { ...prev.properties, backgroundColor: e.target.value },
ERROR in src/components/design/StyleGuide.tsx:196:47
TS2339: Property 'properties' does not exist on type 'Partial<DesignStyle>'.
    194 |                       onChange={(e) => setEditForm(prev => ({
    195 |                         ...prev,
  > 196 |                         properties: { ...prev.properties, backgroundColor: e.target.value },
        |                                               ^^^^^^^^^^
    197 |                       }))}
    198 |                       className="w-full h-8"
    199 |                     />
ERROR in src/components/design/StyleGuide.tsx:205:39
TS2339: Property 'properties' does not exist on type 'Partial<DesignStyle>'.
    203 |                     <input
    204 |                       type="color"
  > 205 |                       value={editForm.properties?.color || '#000000'}
        |                                       ^^^^^^^^^^
    206 |                       onChange={(e) => setEditForm(prev => ({
    207 |                         ...prev,
    208 |                         properties: { ...prev.properties, color: e.target.value },
ERROR in src/components/design/StyleGuide.tsx:208:47
TS2339: Property 'properties' does not exist on type 'Partial<DesignStyle>'.
    206 |                       onChange={(e) => setEditForm(prev => ({
    207 |                         ...prev,
  > 208 |                         properties: { ...prev.properties, color: e.target.value },
        |                                               ^^^^^^^^^^
    209 |                       }))}
    210 |                       className="w-full h-8"
    211 |                     />
ERROR in src/components/design/StyleGuide.tsx:217:39
TS2339: Property 'properties' does not exist on type 'Partial<DesignStyle>'.
    215 |                     <input
    216 |                       type="text"
  > 217 |                       value={editForm.properties?.fontSize || '16px'}
        |                                       ^^^^^^^^^^
    218 |                       onChange={(e) => setEditForm(prev => ({
    219 |                         ...prev,
    220 |                         properties: { ...prev.properties, fontSize: e.target.value },
ERROR in src/components/design/StyleGuide.tsx:220:47
TS2339: Property 'properties' does not exist on type 'Partial<DesignStyle>'.
    218 |                       onChange={(e) => setEditForm(prev => ({
    219 |                         ...prev,
  > 220 |                         properties: { ...prev.properties, fontSize: e.target.value },
        |                                               ^^^^^^^^^^
    221 |                       }))}
    222 |                       className="w-full px-3 py-2 border rounded"
    223 |                     />
ERROR in src/components/design/StyleGuide.tsx:229:39
TS2339: Property 'properties' does not exist on type 'Partial<DesignStyle>'.
    227 |                     <input
    228 |                       type="text"
  > 229 |                       value={editForm.properties?.fontFamily || 'sans-serif'}
        |                                       ^^^^^^^^^^
    230 |                       onChange={(e) => setEditForm(prev => ({
    231 |                         ...prev,
    232 |                         properties: { ...prev.properties, fontFamily: e.target.value },
ERROR in src/components/design/StyleGuide.tsx:232:47
TS2339: Property 'properties' does not exist on type 'Partial<DesignStyle>'.
    230 |                       onChange={(e) => setEditForm(prev => ({
    231 |                         ...prev,
  > 232 |                         properties: { ...prev.properties, fontFamily: e.target.value },
        |                                               ^^^^^^^^^^
    233 |                       }))}
    234 |                       className="w-full px-3 py-2 border rounded"
    235 |                     />
ERROR in src/components/DesignAgentChat.tsx:18:3
TS2305: Module '"@mui/icons-material"' has no exported member 'Resize'.
    16 |   Add as AddIcon,
    17 |   DragIndicator as DragIcon,
  > 18 |   Resize as ResizeIcon,
       |   ^^^^^^
    19 |   Save as SaveIcon,
    20 |   Undo as UndoIcon,
    21 |   Redo as RedoIcon,
ERROR in src/components/DesignHub/DesignHub.tsx:78:41
TS2554: Expected 1 arguments, but got 0.
    76 |   const { loading: agentLoading } = useDesignAgent();
    77 |   const [designAgent, setDesignAgent] = useState<any>(null);
  > 78 |   const [designAgentService] = useState(new DesignAgentService());
       |                                         ^^^^^^^^^^^^^^^^^^^^^^^^
    79 |   const [interactiveService] = useState(new InteractiveDesignService());
    80 |   
    81 |   // Initialize design agent
ERROR in src/components/DesignHub/DesignHub.tsx:79:41
TS2554: Expected 1 arguments, but got 0.
    77 |   const [designAgent, setDesignAgent] = useState<any>(null);
    78 |   const [designAgentService] = useState(new DesignAgentService());
  > 79 |   const [interactiveService] = useState(new InteractiveDesignService());
       |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    80 |   
    81 |   // Initialize design agent
    82 |   useEffect(() => {
ERROR in src/components/DesignHub/DesignHub.tsx:107:68
TS2345: Argument of type 'DesignSystem | { id: string; name: string; version: string; components: undefined[]; pages: { id: string; name: string; components: undefined[]; }[]; currentPage: string; theme: { colors: { ...; }; typography: { ...; }; spacing: { ...; }; borderRadius: { ...; }; }; }' is not assignable to parameter of type 'DesignSystem | (() => DesignSystem)'.
  Type '{ id: string; name: string; version: string; components: undefined[]; pages: { id: string; name: string; components: undefined[]; }[]; currentPage: string; theme: { colors: { primary: string; secondary: string; ... 4 more ...; textSecondary: string; }; typography: { ...; }; spacing: { ...; }; borderRadius: { ...; };...' is not assignable to type 'DesignSystem | (() => DesignSystem)'.
    Types of property 'pages' are incompatible.
      Type '{ id: string; name: string; components: undefined[]; }[]' is not assignable to type 'DesignPage[]'.
        Type '{ id: string; name: string; components: undefined[]; }' is missing the following properties from type 'DesignPage': path, styles, layout
    105 |   
    106 |   // Design state
  > 107 |   const [currentDesign, setCurrentDesign] = useState<DesignSystem>(initialDesign as DesignSystem || {
        |                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 108 |     id: `design-${Date.now()}`,
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 109 |     name: 'New Design',
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 110 |     version: '1.0',
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 111 |     components: [],
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 112 |     pages: [
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 113 |       {
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 114 |         id: 'home',
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 115 |         name: 'Home',
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 116 |         components: []
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 117 |       }
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 118 |     ],
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 119 |     currentPage: 'home',
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 120 |     theme: {
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 121 |       colors: {
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 122 |         primary: '#3f51b5',
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 123 |         secondary: '#f50057',
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 124 |         background: '#ffffff',
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 125 |         surface: '#f5f5f5',
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 126 |         error: '#f44336',
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 127 |         text: '#212121',
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 128 |         textSecondary: '#757575'
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 129 |       },
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 130 |       typography: {
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 131 |         fontFamily: 'Roboto, sans-serif',
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 132 |         fontSize: 16,
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 133 |         h1: { fontSize: '2.5rem', fontWeight: 500 },
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 134 |         h2: { fontSize: '2rem', fontWeight: 500 },
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 135 |         h3: { fontSize: '1.75rem', fontWeight: 500 },
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 136 |         body: { fontSize: '1rem', fontWeight: 400 }
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 137 |       },
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 138 |       spacing: {
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 139 |         unit: 8,
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 140 |         xs: 4,
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 141 |         sm: 8,
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 142 |         md: 16,
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 143 |         lg: 24,
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 144 |         xl: 32
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 145 |       },
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 146 |       borderRadius: {
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 147 |         sm: 4,
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 148 |         md: 8,
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 149 |         lg: 16
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 150 |       }
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 151 |     }
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 152 |   });
        | ^^^^
    153 |   
    154 |   const [currentPage, setCurrentPage] = useState<string>(currentDesign.currentPage || 'home');
    155 |   const [currentComponent, setCurrentComponent] = useState<string | null>(null);
ERROR in src/components/DesignHub/DesignHub.tsx:181:26
TS2554: Expected 2 arguments, but got 1.
    179 |     if (projectId) {
    180 |       setLoading(true);
  > 181 |       interactiveService.connectSession(projectId)
        |                          ^^^^^^^^^^^^^^
    182 |         .then(session => {
    183 |           if (session.design) {
    184 |             setCurrentDesign(session.design);
ERROR in src/components/DesignHub/DesignHub.tsx:200:46
TS2554: Expected 0 arguments, but got 1.
    198 |       // Cleanup on unmount
    199 |       return () => {
  > 200 |         interactiveService.disconnectSession(projectId);
        |                                              ^^^^^^^^^
    201 |       };
    202 |     }
    203 |   }, [projectId]);
ERROR in src/components/DesignHub/DesignHub.tsx:209:56
TS2554: Expected 1 arguments, but got 2.
    207 |     try {
    208 |       if (projectId) {
  > 209 |         await interactiveService.saveDesign(projectId, currentDesign);
        |                                                        ^^^^^^^^^^^^^
    210 |       }
    211 |       if (onSaveDesign) {
    212 |         onSaveDesign(currentDesign);
ERROR in src/components/DesignHub/DesignHub.tsx:376:13
TS2322: Type '{ currentDesign: DesignSystem; currentPage: string; onUpdateComponent: (componentId: string, updates: Partial<DesignComponent>) => void; onAddComponent: (component: any) => void; onSelectComponent: Dispatch<...>; onDeleteComponent: (componentId: any) => void; }' is not assignable to type 'IntrinsicAttributes & DesignCanvasProps'.
  Property 'currentPage' does not exist on type 'IntrinsicAttributes & DesignCanvasProps'.
    374 |           <DesignCanvas 
    375 |             currentDesign={currentDesign}
  > 376 |             currentPage={currentPage}
        |             ^^^^^^^^^^^
    377 |             onUpdateComponent={handleUpdateComponent}
    378 |             onAddComponent={(component) => {
    379 |               const updatedComponents = [...(currentDesign.components || []), component];
ERROR in src/components/DesignHub/DesignHub.tsx:421:13
TS2322: Type '{ components: DesignComponent[]; onAdd: (component: any) => void; onUpdate: (componentId: string, updates: Partial<DesignComponent>) => void; onSelect: Dispatch<...>; }' is not assignable to type 'IntrinsicAttributes & ComponentLibraryProps'.
  Property 'onAdd' does not exist on type 'IntrinsicAttributes & ComponentLibraryProps'.
    419 |           <ComponentLibrary 
    420 |             components={currentDesign.components || []}
  > 421 |             onAdd={(component) => {
        |             ^^^^^
    422 |               const updatedComponents = [...(currentDesign.components || []), component];
    423 |               handleUpdateDesign({ components: updatedComponents });
    424 |             }}
ERROR in src/components/DesignHub/DesignHub.tsx:432:13
TS2322: Type '{ theme: DesignTheme; onUpdate: (theme: any) => void; }' is not assignable to type 'IntrinsicAttributes & StyleGuideProps'.
  Property 'theme' does not exist on type 'IntrinsicAttributes & StyleGuideProps'.
    430 |         return (
    431 |           <StyleGuide 
  > 432 |             theme={currentDesign.theme}
        |             ^^^^^
    433 |             onUpdate={(theme) => handleUpdateDesign({ theme })}
    434 |           />
    435 |         );
ERROR in src/components/DesignHub/DesignHub.tsx:441:13
TS2322: Type '{ designAgent: any; currentDesign: DesignSystem; onUpdateDesign: (updatedDesign: Partial<DesignSystem>) => void; onApplySuggestion: (suggestion: DesignSuggestion) => void; }' is not assignable to type 'IntrinsicAttributes & DesignChatProps'.
  Property 'onUpdateDesign' does not exist on type 'IntrinsicAttributes & DesignChatProps'.
    439 |             designAgent={designAgent}
    440 |             currentDesign={currentDesign}
  > 441 |             onUpdateDesign={handleUpdateDesign}
        |             ^^^^^^^^^^^^^^
    442 |             onApplySuggestion={handleApplySuggestion}
    443 |           />
    444 |         );
ERROR in src/components/DesignHub/DesignHub.tsx:486:13
TS2322: Type '{ currentDesign: DesignSystem; onUpdateDesign: (updatedDesign: Partial<DesignSystem>) => void; }' is not assignable to type 'IntrinsicAttributes & DesignSystemConfigProps'.
  Property 'onUpdateDesign' does not exist on type 'IntrinsicAttributes & DesignSystemConfigProps'.
    484 |           <DesignSystemConfig 
    485 |             currentDesign={currentDesign}
  > 486 |             onUpdateDesign={handleUpdateDesign}
        |             ^^^^^^^^^^^^^^
    487 |           />
    488 |         );
    489 |       case 'history':
ERROR in src/components/DesignHub/DesignHub.tsx:597:11
TS2322: Type '{ currentDesign: DesignSystem; device: DevicePreview; onClose: () => void; }' is not assignable to type 'IntrinsicAttributes & DesignPreviewProps'.
  Property 'device' does not exist on type 'IntrinsicAttributes & DesignPreviewProps'.
    595 |         <DesignPreview 
    596 |           currentDesign={currentDesign}
  > 597 |           device={devicePreview}
        |           ^^^^^^
    598 |           onClose={() => setViewMode('design')}
    599 |         />
    600 |       );
ERROR in src/components/DesignHub/DesignHub.tsx:829:13
TS2322: Type '{ suggestions: DesignSuggestion[]; onApplySuggestion: (suggestion: DesignSuggestion) => void; onDismiss: () => void; }' is not assignable to type 'IntrinsicAttributes & DesignSuggestionsPanelProps'.
  Property 'suggestions' does not exist on type 'IntrinsicAttributes & DesignSuggestionsPanelProps'.
    827 |         >
    828 |           <DesignSuggestionsPanel 
  > 829 |             suggestions={suggestions}
        |             ^^^^^^^^^^^
    830 |             onApplySuggestion={handleApplySuggestion}
    831 |             onDismiss={() => setSuggestions([])}
    832 |           />
ERROR in src/components/DesignPanel/AssetGenerator.tsx:27:13
TS2339: Property 'projectContext' does not exist on type 'ProjectContextType'.
    25 |
    26 | export const AssetGenerator: React.FC<AssetGeneratorProps> = ({ onGenerate }) => {
  > 27 |     const { projectContext } = useProjectContext();
       |             ^^^^^^^^^^^^^^
    28 |     const [requirements, setRequirements] = useState<string[]>([]);
    29 |     const [newRequirement, setNewRequirement] = useState('');
    30 |     const [style, setStyle] = useState({
ERROR in src/components/DesignPanel/AssetGenerator.tsx:59:17
TS2322: Type 'undefined[]' is not assignable to type 'string'.
    57 |             const request: DesignRequest = {
    58 |                 id: crypto.randomUUID(),
  > 59 |                 requirements: [],
       |                 ^^^^^^^^^^^^
    60 |                 projectContext,
    61 |                 style,
    62 |                 assetRequirements: requirements,
ERROR in src/components/DesignPanel/DesignAnalyzer.tsx:26:29
TS2307: Cannot find module 'react-dropzone' or its corresponding type declarations.
    24 | } from '@mui/icons-material';
    25 | import { DesignFeedback } from '../../types/design';
  > 26 | import { useDropzone } from 'react-dropzone';
       |                             ^^^^^^^^^^^^^^^^
    27 |
    28 | interface DesignAnalyzerProps {
    29 |     onAnalyze: (design: any) => Promise<DesignFeedback>;
ERROR in src/components/DesignPanel/DesignAnalyzer.tsx:163:78
TS2339: Property 'score' does not exist on type 'number'.
    161 |                     <Grid container spacing={2} sx={{ mb: 3 }}>
    162 |                         <Grid item xs={12} md={6}>
  > 163 |                             <ScoreDisplay score={feedback.analysis.usability.score} label="Usability" />
        |                                                                              ^^^^^
    164 |                             <ScoreDisplay score={feedback.analysis.accessibility.score} label="Accessibility" />
    165 |                         </Grid>
    166 |                         <Grid item xs={12} md={6}>
ERROR in src/components/DesignPanel/DesignAnalyzer.tsx:164:82
TS2339: Property 'score' does not exist on type 'number'.
    162 |                         <Grid item xs={12} md={6}>
    163 |                             <ScoreDisplay score={feedback.analysis.usability.score} label="Usability" />
  > 164 |                             <ScoreDisplay score={feedback.analysis.accessibility.score} label="Accessibility" />
        |                                                                                  ^^^^^
    165 |                         </Grid>
    166 |                         <Grid item xs={12} md={6}>
    167 |                             <ScoreDisplay score={feedback.analysis.consistency.score} label="Consistency" />
ERROR in src/components/DesignPanel/DesignAnalyzer.tsx:167:80
TS2339: Property 'score' does not exist on type 'number'.
    165 |                         </Grid>
    166 |                         <Grid item xs={12} md={6}>
  > 167 |                             <ScoreDisplay score={feedback.analysis.consistency.score} label="Consistency" />
        |                                                                                ^^^^^
    168 |                             <ScoreDisplay score={feedback.analysis.performance.score} label="Performance" />
    169 |                         </Grid>
    170 |                     </Grid>
ERROR in src/components/DesignPanel/DesignAnalyzer.tsx:168:68
TS2339: Property 'performance' does not exist on type '{ accessibility: number; consistency: number; usability: number; responsiveness: number; }'.
    166 |                         <Grid item xs={12} md={6}>
    167 |                             <ScoreDisplay score={feedback.analysis.consistency.score} label="Consistency" />
  > 168 |                             <ScoreDisplay score={feedback.analysis.performance.score} label="Performance" />
        |                                                                    ^^^^^^^^^^^
    169 |                         </Grid>
    170 |                     </Grid>
    171 |
ERROR in src/components/DesignPanel/DesignAnalyzer.tsx:183:75
TS2339: Property 'issues' does not exist on type 'number'.
    181 |                         </AccordionSummary>
    182 |                         <AccordionDetails>
  > 183 |                             {renderIssuesList(feedback.analysis.usability.issues, <WarningIcon color="warning" />)}
        |                                                                           ^^^^^^
    184 |                         </AccordionDetails>
    185 |                     </Accordion>
    186 |
ERROR in src/components/DesignPanel/DesignAnalyzer.tsx:192:79
TS2339: Property 'issues' does not exist on type 'number'.
    190 |                         </AccordionSummary>
    191 |                         <AccordionDetails>
  > 192 |                             {renderIssuesList(feedback.analysis.accessibility.issues, <ErrorIcon color="error" />)}
        |                                                                               ^^^^^^
    193 |                         </AccordionDetails>
    194 |                     </Accordion>
    195 |
ERROR in src/components/DesignPanel/DesignAnalyzer.tsx:203:68
TS2339: Property 'recommendations' does not exist on type 'number'.
    201 |                             {renderIssuesList(
    202 |                                 [
  > 203 |                                     ...feedback.analysis.usability.recommendations,
        |                                                                    ^^^^^^^^^^^^^^^
    204 |                                     ...feedback.analysis.accessibility.recommendations,
    205 |                                     ...feedback.analysis.consistency.recommendations,
    206 |                                     ...feedback.analysis.performance.recommendations,
ERROR in src/components/DesignPanel/DesignAnalyzer.tsx:204:72
TS2339: Property 'recommendations' does not exist on type 'number'.
    202 |                                 [
    203 |                                     ...feedback.analysis.usability.recommendations,
  > 204 |                                     ...feedback.analysis.accessibility.recommendations,
        |                                                                        ^^^^^^^^^^^^^^^
    205 |                                     ...feedback.analysis.consistency.recommendations,
    206 |                                     ...feedback.analysis.performance.recommendations,
    207 |                                 ],
ERROR in src/components/DesignPanel/DesignAnalyzer.tsx:205:70
TS2339: Property 'recommendations' does not exist on type 'number'.
    203 |                                     ...feedback.analysis.usability.recommendations,
    204 |                                     ...feedback.analysis.accessibility.recommendations,
  > 205 |                                     ...feedback.analysis.consistency.recommendations,
        |                                                                      ^^^^^^^^^^^^^^^
    206 |                                     ...feedback.analysis.performance.recommendations,
    207 |                                 ],
    208 |                                 <CheckIcon color="success" />
ERROR in src/components/DesignPanel/DesignAnalyzer.tsx:206:58
TS2339: Property 'performance' does not exist on type '{ accessibility: number; consistency: number; usability: number; responsiveness: number; }'.
    204 |                                     ...feedback.analysis.accessibility.recommendations,
    205 |                                     ...feedback.analysis.consistency.recommendations,
  > 206 |                                     ...feedback.analysis.performance.recommendations,
        |                                                          ^^^^^^^^^^^
    207 |                                 ],
    208 |                                 <CheckIcon color="success" />
    209 |                             )}
ERROR in src/components/DesignPanel/UIMockupGenerator.tsx:25:13
TS2339: Property 'projectContext' does not exist on type 'ProjectContextType'.
    23 |
    24 | export const UIMockupGenerator: React.FC<UIMockupGeneratorProps> = ({ onGenerate }) => {
  > 25 |     const { projectContext } = useProjectContext();
       |             ^^^^^^^^^^^^^^
    26 |     const [requirements, setRequirements] = useState<string[]>([]);
    27 |     const [newRequirement, setNewRequirement] = useState('');
    28 |     const [style, setStyle] = useState({
ERROR in src/components/DesignPanel/UIMockupGenerator.tsx:69:17
TS2322: Type 'string[]' is not assignable to type 'string'.
    67 |             const request: DesignRequest = {
    68 |                 id: crypto.randomUUID(),
  > 69 |                 requirements,
       |                 ^^^^^^^^^^^^
    70 |                 projectContext,
    71 |                 style,
    72 |                 dimensions,
ERROR in src/components/documentation/APIReference.tsx:30:31
TS2307: Cannot find module '../../types/documentation' or its corresponding type declarations.
    28 | import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';
    29 | import { tomorrow } from 'react-syntax-highlighter/dist/esm/styles/prism';
  > 30 | import { Documentation } from '../../types/documentation';
       |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    31 | import { MonitoringService } from '../../services/monitoring.service';
    32 |
    33 | interface APIReferenceProps {
ERROR in src/components/documentation/APIReference.tsx:84:7
TS2353: Object literal may only specify known properties, and 'category' does not exist in type 'Omit<MonitoringMetric, "id" | "timestamp">'.
    82 |     // Track endpoint interaction
    83 |     monitoring.recordMetric({
  > 84 |       category: 'api_docs',
       |       ^^^^^^^^
    85 |       name: 'endpoint_expanded',
    86 |       value: 1,
    87 |       tags: { endpoint: endpointId }
ERROR in src/components/documentation/APIReference.tsx:98:7
TS2353: Object literal may only specify known properties, and 'category' does not exist in type 'Omit<MonitoringMetric, "id" | "timestamp">'.
     96 |     // Track code copy
     97 |     monitoring.recordMetric({
  >  98 |       category: 'api_docs',
        |       ^^^^^^^^
     99 |       name: 'code_copied',
    100 |       value: 1,
    101 |       tags: { language }
ERROR in src/components/documentation/APIReference.tsx:108:7
TS2353: Object literal may only specify known properties, and 'category' does not exist in type 'Omit<MonitoringMetric, "id" | "timestamp">'.
    106 |     // Implement endpoint testing logic
    107 |     monitoring.recordMetric({
  > 108 |       category: 'api_docs',
        |       ^^^^^^^^
    109 |       name: 'endpoint_tested',
    110 |       value: 1,
    111 |       tags: { 
ERROR in src/components/documentation/DocumentationBrowser.tsx:29:40
TS2307: Cannot find module '../../types/documentation' or its corresponding type declarations.
    27 | import { styled } from '@mui/material/styles';
    28 | import { DocumentationService } from '../../services/DocumentationService';
  > 29 | import { Documentation, DocType } from '../../types/documentation';
       |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    30 | import { APIReference } from './APIReference';
    31 | import { UserGuide } from './UserGuide';
    32 | import { TechnicalDocs } from './TechnicalDocs';
ERROR in src/components/documentation/DocumentationBrowser.tsx:31:27
TS2307: Cannot find module './UserGuide' or its corresponding type declarations.
    29 | import { Documentation, DocType } from '../../types/documentation';
    30 | import { APIReference } from './APIReference';
  > 31 | import { UserGuide } from './UserGuide';
       |                           ^^^^^^^^^^^^^
    32 | import { TechnicalDocs } from './TechnicalDocs';
    33 | import { MonitoringService } from '../../services/monitoring.service';
    34 |
ERROR in src/components/documentation/DocumentationBrowser.tsx:32:31
TS2307: Cannot find module './TechnicalDocs' or its corresponding type declarations.
    30 | import { APIReference } from './APIReference';
    31 | import { UserGuide } from './UserGuide';
  > 32 | import { TechnicalDocs } from './TechnicalDocs';
       |                               ^^^^^^^^^^^^^^^^^
    33 | import { MonitoringService } from '../../services/monitoring.service';
    34 |
    35 | const StyledPaper = styled(Paper)(({ theme }) => ({
ERROR in src/components/documentation/DocumentationBrowser.tsx:86:9
TS2353: Object literal may only specify known properties, and 'category' does not exist in type 'Omit<MonitoringMetric, "id" | "timestamp">'.
    84 |       const duration = performance.now() - startTime;
    85 |       monitoring.recordMetric({
  > 86 |         category: 'documentation',
       |         ^^^^^^^^
    87 |         name: 'load_time',
    88 |         value: duration,
    89 |         tags: { type: docType }
ERROR in src/components/documentation/DocumentationBrowser.tsx:92:18
TS2339: Property 'recordError' does not exist on type 'MonitoringService'.
    90 |       });
    91 |     } catch (error) {
  > 92 |       monitoring.recordError('load_documentation_failed', error);
       |                  ^^^^^^^^^^^
    93 |       // Handle error
    94 |     }
    95 |   };
ERROR in src/components/DraggableComponent.tsx:9:3
TS2305: Module '"@mui/material"' has no exported member 'ResizeHandle'.
     7 |   IconButton,
     8 |   Tooltip,
  >  9 |   ResizeHandle,
       |   ^^^^^^^^^^^^
    10 | } from '@mui/material';
    11 | import {
    12 |   DragIndicator as DragIcon,
ERROR in src/components/DraggableComponent.tsx:13:3
TS2305: Module '"@mui/icons-material"' has no exported member 'Resize'.
    11 | import {
    12 |   DragIndicator as DragIcon,
  > 13 |   Resize as ResizeIcon,
       |   ^^^^^^
    14 |   Edit as EditIcon,
    15 |   Delete as DeleteIcon,
    16 | } from '@mui/icons-material';
ERROR in src/components/FileExplorer/GitIntegration.tsx:28:3
TS2305: Module '"@mui/icons-material"' has no exported member 'BranchIcon'.
    26 |   Add as AddIcon,
    27 |   Commit as CommitIcon,
  > 28 |   BranchIcon,
       |   ^^^^^^^^^^
    29 |   History as HistoryIcon,
    30 | } from '@mui/icons-material';
    31 |
ERROR in src/components/Git/BranchCommitViewer.tsx:35:3
TS2305: Module '"@mui/icons-material"' has no exported member 'Checkout'.
    33 |   Delete as DeleteIcon,
    34 |   MoreVert as MoreVertIcon,
  > 35 |   Checkout as CheckoutIcon,
       |   ^^^^^^^^
    36 |   Merge as MergeIcon,
    37 |   Compare as CompareIcon,
    38 |   History as HistoryIcon,
ERROR in src/components/Git/BranchCommitViewer.tsx:40:3
TS2305: Module '"@mui/icons-material"' has no exported member 'Push'.
    38 |   History as HistoryIcon,
    39 |   Search as SearchIcon,
  > 40 |   Push as PushIcon,
       |   ^^^^
    41 |   Pull as PullIcon,
    42 |   Rebase as RebaseIcon,
    43 |   Reset as ResetIcon,
ERROR in src/components/Git/BranchCommitViewer.tsx:41:3
TS2305: Module '"@mui/icons-material"' has no exported member 'Pull'.
    39 |   Search as SearchIcon,
    40 |   Push as PushIcon,
  > 41 |   Pull as PullIcon,
       |   ^^^^
    42 |   Rebase as RebaseIcon,
    43 |   Reset as ResetIcon,
    44 |   Tag as TagIcon,
ERROR in src/components/Git/BranchCommitViewer.tsx:42:3
TS2305: Module '"@mui/icons-material"' has no exported member 'Rebase'.
    40 |   Push as PushIcon,
    41 |   Pull as PullIcon,
  > 42 |   Rebase as RebaseIcon,
       |   ^^^^^^
    43 |   Reset as ResetIcon,
    44 |   Tag as TagIcon,
    45 |   Stash as StashIcon,
ERROR in src/components/Git/BranchCommitViewer.tsx:43:3
TS2724: '"@mui/icons-material"' has no exported member named 'Reset'. Did you mean 'ResetTv'?
    41 |   Pull as PullIcon,
    42 |   Rebase as RebaseIcon,
  > 43 |   Reset as ResetIcon,
       |   ^^^^^
    44 |   Tag as TagIcon,
    45 |   Stash as StashIcon,
    46 | } from '@mui/icons-material';
ERROR in src/components/Git/BranchCommitViewer.tsx:45:3
TS2724: '"@mui/icons-material"' has no exported member named 'Stash'. Did you mean 'Stars'?
    43 |   Reset as ResetIcon,
    44 |   Tag as TagIcon,
  > 45 |   Stash as StashIcon,
       |   ^^^^^
    46 | } from '@mui/icons-material';
    47 |
    48 | interface Commit {
ERROR in src/components/IDE/features/GitStatusBar.tsx:17:3
TS2305: Module '"@mui/icons-material"' has no exported member 'BranchIcon'.
    15 |   CloudDownload as PullIcon,
    16 |   Merge as MergeIcon,
  > 17 |   BranchIcon,
       |   ^^^^^^^^^^
    18 |   Sync as SyncIcon,
    19 | } from '@mui/icons-material';
    20 | import { useTheme } from '@mui/material/styles';
ERROR in src/components/IDE/features/IntelliSense.tsx:45:11
TS2339: Property 'analyzeCode' does not exist on type '{ analyzeFile: (path: string, content: string) => Promise<FileContext>; getDependencies: (path: string) => Promise<string[]>; getSymbols: (path: string) => Promise<...>; ... 4 more ...; isConnected: boolean; }'.
    43 |   const [suggestions, setSuggestions] = useState<Suggestion[]>([]);
    44 |   const [selectedIndex, setSelectedIndex] = useState(0);
  > 45 |   const { analyzeCode, getSymbols } = useCodebaseAwareness();
       |           ^^^^^^^^^^^
    46 |
    47 |   useEffect(() => {
    48 |     const getSuggestions = async () => {
ERROR in src/components/IDE/features/IntelliSense.tsx:45:39
TS2554: Expected 1 arguments, but got 0.
    43 |   const [suggestions, setSuggestions] = useState<Suggestion[]>([]);
    44 |   const [selectedIndex, setSelectedIndex] = useState(0);
  > 45 |   const { analyzeCode, getSymbols } = useCodebaseAwareness();
       |                                       ^^^^^^^^^^^^^^^^^^^^
    46 |
    47 |   useEffect(() => {
    48 |     const getSuggestions = async () => {
ERROR in src/components/IDE/features/IntelliSense.tsx:51:57
TS2554: Expected 1 arguments, but got 2.
    49 |       try {
    50 |         const analysis = await analyzeCode(code, language);
  > 51 |         const symbols = await getSymbols(position.line, position.column);
       |                                                         ^^^^^^^^^^^^^^^
    52 |         
    53 |         const newSuggestions = [...analysis.suggestions, ...symbols]
    54 |           .map(item => ({
ERROR in src/components/IDE/WebIDE.tsx:134:12
TS2604: JSX element type 'Editor' does not have any construct or call signatures.
    132 |       <Grid item xs={9}>
    133 |         <Paper sx={{ height: '100%', overflow: 'hidden' }}>
  > 134 |           <Editor
        |            ^^^^^^
    135 |             height="100%"
    136 |             defaultLanguage="typescript"
    137 |             defaultValue={code}
ERROR in src/components/IDE/WebIDE.tsx:134:12
TS2786: 'Editor' cannot be used as a JSX component.
  Its type 'typeof import("@monaco-editor/react")' is not a valid JSX element type.
    132 |       <Grid item xs={9}>
    133 |         <Paper sx={{ height: '100%', overflow: 'hidden' }}>
  > 134 |           <Editor
        |            ^^^^^^
    135 |             height="100%"
    136 |             defaultLanguage="typescript"
    137 |             defaultValue={code}
ERROR in src/components/Integrations/GitIntegrations.tsx:27:3
TS2305: Module '"@mui/icons-material"' has no exported member 'GitLab'.
    25 | import {
    26 |   GitHub as GitHubIcon,
  > 27 |   GitLab as GitLabIcon,
       |   ^^^^^^
    28 |   CheckCircle as CheckCircleIcon,
    29 |   Error as ErrorIcon,
    30 |   Refresh as RefreshIcon,
ERROR in src/components/Integrations/OtherIntegrations.tsx:31:3
TS2305: Module '"@mui/icons-material"' has no exported member 'Slack'.
    29 | } from '@mui/material';
    30 | import {
  > 31 |   Slack as SlackIcon,
       |   ^^^^^
    32 |   Email as EmailIcon,
    33 |   Notifications as NotificationsIcon,
    34 |   CheckCircle as CheckCircleIcon,
ERROR in src/components/Layout/AdvancedFeaturesLayout.tsx:20:37
TS1261: Already included file name 'D:/ADE-stable-1.0/frontend/src/components/Visualization/CodeDependencyGraph.tsx' differs from file name 'D:/ADE-stable-1.0/frontend/src/components/visualization/CodeDependencyGraph.tsx' only in casing.
  The file is in the program because:
    Imported via '../Visualization/CodeDependencyGraph' from file 'D:/ADE-stable-1.0/frontend/src/components/Layout/AdvancedFeaturesLayout.tsx'
    Root file specified for compilation
    18 |   FullscreenExit,
    19 | } from '@mui/icons-material';
  > 20 | import { CodeDependencyGraph } from '../Visualization/CodeDependencyGraph';
       |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    21 | import { PerformanceMonitor } from '../Performance/PerformanceMonitor';
    22 | import { ArchitectureSuggestions } from '../Architecture/ArchitectureSuggestions';
    23 |
ERROR in src/components/Layout/AdvancedFeaturesLayout.tsx:21:36
TS1261: Already included file name 'D:/ADE-stable-1.0/frontend/src/components/Performance/PerformanceMonitor.tsx' differs from file name 'D:/ADE-stable-1.0/frontend/src/components/performance/PerformanceMonitor.tsx' only in casing.
  The file is in the program because:
    Imported via '../Performance/PerformanceMonitor' from file 'D:/ADE-stable-1.0/frontend/src/components/Layout/AdvancedFeaturesLayout.tsx'
    Root file specified for compilation
    19 | } from '@mui/icons-material';
    20 | import { CodeDependencyGraph } from '../Visualization/CodeDependencyGraph';
  > 21 | import { PerformanceMonitor } from '../Performance/PerformanceMonitor';
       |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    22 | import { ArchitectureSuggestions } from '../Architecture/ArchitectureSuggestions';
    23 |
    24 | interface TabPanelProps {
ERROR in src/components/Layout/NavigationSidebar.tsx:29:3
TS2305: Module '"@mui/icons-material"' has no exported member 'GitBranch'.
    27 |   Group as GroupIcon,
    28 |   Preview as PreviewIcon,
  > 29 |   GitBranch as GitBranchIcon,
       |   ^^^^^^^^^
    30 | } from '@mui/icons-material';
    31 | import { useNavigate, useLocation } from 'react-router-dom';
    32 |
ERROR in src/components/LiveChat.tsx:600:46
TS2345: Argument of type 'ChangeEvent<HTMLInputElement | HTMLTextAreaElement>' is not assignable to parameter of type 'ChangeEvent<HTMLInputElement>'.
  Type 'HTMLInputElement | HTMLTextAreaElement' is not assignable to type 'HTMLInputElement'.
    Type 'HTMLTextAreaElement' is missing the following properties from type 'HTMLInputElement': accept, align, alt, capture, and 29 more.
    598 |           placeholder="Ask anything..."
    599 |           value={input}
  > 600 |           onChange={(e) => handleInputChange(e)}
        |                                              ^
    601 |           onKeyPress={(e) => {
    602 |             if (e.key === 'Enter' && !e.shiftKey) {
    603 |               e.preventDefault();
ERROR in src/components/llm/LLMComparison.tsx:95:50
TS2554: Expected 1 arguments, but got 2.
     93 |     } catch (err) {
     94 |       setError(`Error generating completion for ${model}`);
  >  95 |       monitoringService.trackError(err as Error, {
        |                                                  ^
  >  96 |         context: 'llm_comparison',
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  >  97 |         model,
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  >  98 |       });
        | ^^^^^^^^
     99 |     } finally {
    100 |       setLoading((prev) => ({ ...prev, [model]: false }));
    101 |     }
ERROR in src/components/llm/LLMComparison.tsx:123:50
TS2554: Expected 1 arguments, but got 2.
    121 |     } catch (err) {
    122 |       setError('Error comparing models');
  > 123 |       monitoringService.trackError(err as Error, {
        |                                                  ^
  > 124 |         context: 'llm_comparison',
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 125 |       });
        | ^^^^^^^^
    126 |     } finally {
    127 |       setLoading({ llama2: false, mistral: false });
    128 |     }
ERROR in src/components/ModelCapabilities.tsx:39:3
TS2305: Module '"@mui/icons-material"' has no exported member 'Eco'.
    37 |   Psychology as PsychologyIcon,
    38 |   AccessibilityNew as AccessibilityIcon,
  > 39 |   Eco as EcoIcon,
       |   ^^^
    40 |   Groups as GroupsIcon,
    41 |   MonetizationOn as MonetizationIcon,
    42 |   Gavel as GavelIcon
ERROR in src/components/ModelCapabilities.tsx:268:19
TS2769: No overload matches this call.
  Overload 1 of 2, '(props: Props): Sankey', gave the following error.
    Type '{ children: Element; data: { nodes: any[]; links: any[]; }; node: { fill: string; }; link: { stroke: string; strokeOpacity: number; }; nodePadding: number; nodeThickness: number; linkCurvature: number; iterations: number; }' is not assignable to type 'IntrinsicAttributes & IntrinsicClassAttributes<Sankey> & Pick<Readonly<Props>, "string" | "direction" | ... 478 more ... | "node"> & InexactPartial<...> & InexactPartial<...>'.
      Property 'nodeThickness' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<Sankey> & Pick<Readonly<Props>, "string" | "direction" | ... 478 more ... | "node"> & InexactPartial<...> & InexactPartial<...>'.
  Overload 2 of 2, '(props: Props, context: any): Sankey', gave the following error.
    Type '{ children: Element; data: { nodes: any[]; links: any[]; }; node: { fill: string; }; link: { stroke: string; strokeOpacity: number; }; nodePadding: number; nodeThickness: number; linkCurvature: number; iterations: number; }' is not assignable to type 'IntrinsicAttributes & IntrinsicClassAttributes<Sankey> & Pick<Readonly<Props>, "string" | "direction" | ... 478 more ... | "node"> & InexactPartial<...> & InexactPartial<...>'.
      Property 'nodeThickness' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<Sankey> & Pick<Readonly<Props>, "string" | "direction" | ... 478 more ... | "node"> & InexactPartial<...> & InexactPartial<...>'.
    266 |                   link={{ stroke: '#8884d8', strokeOpacity: 0.3 }}
    267 |                   nodePadding={50}
  > 268 |                   nodeThickness={18}
        |                   ^^^^^^^^^^^^^
    269 |                   linkCurvature={0.5}
    270 |                   iterations={32}
    271 |                 >
ERROR in src/components/ModelConfigManager.tsx:230:9
TS2698: Spread types may only be created from object types.
    228 |       ...selectedConfig,
    229 |       [parent]: {
  > 230 |         ...selectedConfig[parent as keyof ModelConfig],
        |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    231 |         [field]: value
    232 |       }
    233 |     });
ERROR in src/components/Navigation.tsx:94:15
TS2322: Type 'true' is not assignable to type 'false'.
    92 |           <Tooltip key={item.path} title={item.tooltip} placement="right">
    93 |             <StyledListItem
  > 94 |               button
       |               ^^^^^^
    95 |               component={Link}
    96 |               to={item.path}
    97 |               sx={{
ERROR in src/components/Notifications/NotificationSystem.tsx:21:3
TS2305: Module '"@mui/icons-material"' has no exported member 'PullRequest'.
    19 |   Code as CodeIcon,
    20 |   Comment as CommentIcon,
  > 21 |   PullRequest as PullRequestIcon,
       |   ^^^^^^^^^^^
    22 |   Check as CheckIcon,
    23 |   Close as CloseIcon,
    24 |   Build as BuildIcon,
ERROR in src/components/Project/ProjectConfig.tsx:40:3
TS2305: Module '"@mui/icons-material"' has no exported member 'Template'.
    38 |   Build as BuildIcon,
    39 |   Cloud as CloudIcon,
  > 40 |   Template as TemplateIcon,
       |   ^^^^^^^^
    41 |   Security as SecurityIcon,
    42 |   Code as CodeIcon,
    43 |   Settings as SettingsIcon,
ERROR in src/components/ProjectDashboard.tsx:14:59
TS2307: Cannot find module '../types' or its corresponding type declarations.
    12 |   CardContent,
    13 | } from '@mui/material';
  > 14 | import { ProjectStatus, AgentActivity, CodeMetrics } from '../types';
       |                                                           ^^^^^^^^^^
    15 | import { useProject } from '../hooks/useProject';
    16 | import { MetricsChart } from './MetricsChart';
    17 | import { AgentList } from './AgentList';
ERROR in src/components/ProjectDashboard.tsx:18:10
TS2614: Module '"./CodeEditor"' has no exported member 'CodeEditor'. Did you mean to use 'import CodeEditor from "./CodeEditor"' instead?
    16 | import { MetricsChart } from './MetricsChart';
    17 | import { AgentList } from './AgentList';
  > 18 | import { CodeEditor } from './CodeEditor';
       |          ^^^^^^^^^^
    19 |
    20 | interface ProjectDashboardProps {
    21 |   projectId: string;
ERROR in src/components/ProjectDashboard.tsx:25:20
TS2339: Property 'metrics' does not exist on type '{ project: Project; loading: boolean; error: string; updateProject: (updates: Partial<Project>) => Promise<any>; }'.
    23 |
    24 | export const ProjectDashboard: React.FC<ProjectDashboardProps> = ({ projectId }) => {
  > 25 |   const { project, metrics, agents, loading, error } = useProject(projectId);
       |                    ^^^^^^^
    26 |   const [selectedFile, setSelectedFile] = useState<string | null>(null);
    27 |
    28 |   if (loading) {
ERROR in src/components/ProjectDashboard.tsx:25:29
TS2339: Property 'agents' does not exist on type '{ project: Project; loading: boolean; error: string; updateProject: (updates: Partial<Project>) => Promise<any>; }'.
    23 |
    24 | export const ProjectDashboard: React.FC<ProjectDashboardProps> = ({ projectId }) => {
  > 25 |   const { project, metrics, agents, loading, error } = useProject(projectId);
       |                             ^^^^^^
    26 |   const [selectedFile, setSelectedFile] = useState<string | null>(null);
    27 |
    28 |   if (loading) {
ERROR in src/components/ProjectDashboard.tsx:86:37
TS2339: Property 'files' does not exist on type 'Project'.
    84 |               file={selectedFile}
    85 |               onFileChange={setSelectedFile}
  > 86 |               projectFiles={project.files}
       |                                     ^^^^^
    87 |             />
    88 |           </Paper>
    89 |         </Grid>
ERROR in src/components/PromptProcessor.tsx:152:17
TS2322: Type '(event: React.ChangeEvent<{ value: unknown; }>) => void' is not assignable to type '(event: SelectChangeEvent<string>, child: ReactNode) => void'.
  Types of parameters 'event' and 'event' are incompatible.
    Type 'SelectChangeEvent<string>' is not assignable to type 'ChangeEvent<{ value: unknown; }>'.
      Type 'Event & { target: { value: string; name: string; }; }' is missing the following properties from type 'ChangeEvent<{ value: unknown; }>': nativeEvent, isDefaultPrevented, isPropagationStopped, persist
    150 |                 value={agent}
    151 |                 label="Select Agent"
  > 152 |                 onChange={handleAgentChange}
        |                 ^^^^^^^^
    153 |               >
    154 |                 <MenuItem value="assistant">AI Assistant</MenuItem>
    155 |                 <MenuItem value="designer">UI/UX Designer</MenuItem>
ERROR in src/components/Team/TeamManagement.tsx:151:18
TS2345: Argument of type '{ name: string; email: string; role: string; id: string; avatar?: string; status: "active" | "inactive" | "pending"; joinedAt: string; }[]' is not assignable to parameter of type 'SetStateAction<TeamMember[]>'.
  Type '{ name: string; email: string; role: string; id: string; avatar?: string; status: "active" | "inactive" | "pending"; joinedAt: string; }[]' is not assignable to type 'TeamMember[]'.
    Type '{ name: string; email: string; role: string; id: string; avatar?: string; status: "active" | "pending" | "inactive"; joinedAt: string; }' is not assignable to type 'TeamMember'.
      Types of property 'role' are incompatible.
        Type 'string' is not assignable to type '"developer" | "admin" | "viewer" | "reviewer"'.
    149 |   const handleSaveMember = () => {
    150 |     if (editingItem) {
  > 151 |       setMembers(members.map(member =>
        |                  ^^^^^^^^^^^^^^^^^^^^^
  > 152 |         member.id === (editingItem as TeamMember).id
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 153 |           ? { ...member, ...newMember }
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 154 |           : member
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 155 |       ));
        | ^^^^^^^^
    156 |     } else {
    157 |       setMembers([
    158 |         ...members,
ERROR in src/components/Team/TeamManagement.tsx:158:9
TS2322: Type 'TeamMember | { status: "pending"; joinedAt: string; name: string; email: string; role: string; id: string; }' is not assignable to type 'TeamMember'.
  Type '{ status: "pending"; joinedAt: string; name: string; email: string; role: string; id: string; }' is not assignable to type 'TeamMember'.
    Types of property 'role' are incompatible.
      Type 'string' is not assignable to type '"developer" | "admin" | "viewer" | "reviewer"'.
    156 |     } else {
    157 |       setMembers([
  > 158 |         ...members,
        |         ^^^^^^^^^^
    159 |         {
    160 |           id: Date.now().toString(),
    161 |           ...newMember,
ERROR in src/components/Team/TeamManagement.tsx:159:9
TS2322: Type '{ status: "pending"; joinedAt: string; name: string; email: string; role: string; id: string; }' is not assignable to type 'TeamMember'.
  Types of property 'role' are incompatible.
    Type 'string' is not assignable to type '"developer" | "admin" | "viewer" | "reviewer"'.
    157 |       setMembers([
    158 |         ...members,
  > 159 |         {
        |         ^
  > 160 |           id: Date.now().toString(),
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 161 |           ...newMember,
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 162 |           status: 'pending',
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 163 |           joinedAt: new Date().toISOString().split('T')[0],
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 164 |         },
        | ^^^^^^^^^^
    165 |       ]);
    166 |     }
    167 |     handleCloseDialog();
ERROR in src/components/Terminal.tsx:4:35
TS2307: Cannot find module 'xterm' or its corresponding type declarations.
    2 | import { Box, Typography, IconButton, TextField } from '@mui/material';
    3 | import { Clear as ClearIcon, Send as SendIcon } from '@mui/icons-material';
  > 4 | import { Terminal as XTerm } from 'xterm';
      |                                   ^^^^^^^
    5 | import { FitAddon } from 'xterm-addon-fit';
    6 | import { WebLinksAddon } from 'xterm-addon-web-links';
    7 | import 'xterm/css/xterm.css';
ERROR in src/components/Terminal.tsx:5:26
TS2307: Cannot find module 'xterm-addon-fit' or its corresponding type declarations.
    3 | import { Clear as ClearIcon, Send as SendIcon } from '@mui/icons-material';
    4 | import { Terminal as XTerm } from 'xterm';
  > 5 | import { FitAddon } from 'xterm-addon-fit';
      |                          ^^^^^^^^^^^^^^^^^
    6 | import { WebLinksAddon } from 'xterm-addon-web-links';
    7 | import 'xterm/css/xterm.css';
    8 |
ERROR in src/components/Terminal.tsx:6:31
TS2307: Cannot find module 'xterm-addon-web-links' or its corresponding type declarations.
    4 | import { Terminal as XTerm } from 'xterm';
    5 | import { FitAddon } from 'xterm-addon-fit';
  > 6 | import { WebLinksAddon } from 'xterm-addon-web-links';
      |                               ^^^^^^^^^^^^^^^^^^^^^^^
    7 | import 'xterm/css/xterm.css';
    8 |
    9 | interface TerminalProps {
ERROR in src/components/Terminal/Terminal.tsx:2:35
TS2307: Cannot find module 'xterm' or its corresponding type declarations.
    1 | import React, { useEffect, useRef, useState } from 'react';
  > 2 | import { Terminal as XTerm } from 'xterm';
      |                                   ^^^^^^^
    3 | import { FitAddon } from 'xterm-addon-fit';
    4 | import { WebLinksAddon } from 'xterm-addon-web-links';
    5 | import { SearchAddon } from 'xterm-addon-search';
ERROR in src/components/Terminal/Terminal.tsx:3:26
TS2307: Cannot find module 'xterm-addon-fit' or its corresponding type declarations.
    1 | import React, { useEffect, useRef, useState } from 'react';
    2 | import { Terminal as XTerm } from 'xterm';
  > 3 | import { FitAddon } from 'xterm-addon-fit';
      |                          ^^^^^^^^^^^^^^^^^
    4 | import { WebLinksAddon } from 'xterm-addon-web-links';
    5 | import { SearchAddon } from 'xterm-addon-search';
    6 | import { WebglAddon } from 'xterm-addon-webgl';
ERROR in src/components/Terminal/Terminal.tsx:4:31
TS2307: Cannot find module 'xterm-addon-web-links' or its corresponding type declarations.
    2 | import { Terminal as XTerm } from 'xterm';
    3 | import { FitAddon } from 'xterm-addon-fit';
  > 4 | import { WebLinksAddon } from 'xterm-addon-web-links';
      |                               ^^^^^^^^^^^^^^^^^^^^^^^
    5 | import { SearchAddon } from 'xterm-addon-search';
    6 | import { WebglAddon } from 'xterm-addon-webgl';
    7 | import 'xterm/css/xterm.css';
ERROR in src/components/Terminal/Terminal.tsx:5:29
TS2307: Cannot find module 'xterm-addon-search' or its corresponding type declarations.
    3 | import { FitAddon } from 'xterm-addon-fit';
    4 | import { WebLinksAddon } from 'xterm-addon-web-links';
  > 5 | import { SearchAddon } from 'xterm-addon-search';
      |                             ^^^^^^^^^^^^^^^^^^^^
    6 | import { WebglAddon } from 'xterm-addon-webgl';
    7 | import 'xterm/css/xterm.css';
    8 | import { styled } from '@mui/material/styles';
ERROR in src/components/Terminal/Terminal.tsx:6:28
TS2307: Cannot find module 'xterm-addon-webgl' or its corresponding type declarations.
    4 | import { WebLinksAddon } from 'xterm-addon-web-links';
    5 | import { SearchAddon } from 'xterm-addon-search';
  > 6 | import { WebglAddon } from 'xterm-addon-webgl';
      |                            ^^^^^^^^^^^^^^^^^^^
    7 | import 'xterm/css/xterm.css';
    8 | import { styled } from '@mui/material/styles';
    9 | import { Paper, Box, Typography, IconButton, Tooltip, LinearProgress, Grid, Collapse, Chip } from '@mui/material';
ERROR in src/components/testing/LoadTestVisualizer.tsx:86:9
TS2322: Type 'boolean' is not assignable to type 'string'.
    84 |       value: 1,
    85 |       tags: {
  > 86 |         success: results.success,
       |         ^^^^^^^
    87 |         total_requests: results.requests
    88 |       }
    89 |     });
ERROR in src/components/testing/LoadTestVisualizer.tsx:87:9
TS2322: Type 'number' is not assignable to type 'string'.
    85 |       tags: {
    86 |         success: results.success,
  > 87 |         total_requests: results.requests
       |         ^^^^^^^^^^^^^^
    88 |       }
    89 |     });
    90 |   }, [results]);
ERROR in src/components/testing/LoadTestVisualizer.tsx:106:9
TS2353: Object literal may only specify known properties, and 'category' does not exist in type 'Omit<MonitoringMetric, "id" | "timestamp">'.
    104 |
    105 |       monitoring.recordMetric({
  > 106 |         category: 'load_test',
        |         ^^^^^^^^
    107 |         name: 'results_exported',
    108 |         value: 1
    109 |       });
ERROR in src/components/testing/LoadTestVisualizer.tsx:111:18
TS2339: Property 'recordError' does not exist on type 'MonitoringService'.
    109 |       });
    110 |     } catch (error) {
  > 111 |       monitoring.recordError('export_results_failed', error);
        |                  ^^^^^^^^^^^
    112 |     }
    113 |   };
    114 |
ERROR in src/components/testing/LoadTestVisualizer.tsx:118:7
TS2353: Object literal may only specify known properties, and 'category' does not exist in type 'Omit<MonitoringMetric, "id" | "timestamp">'.
    116 |     // Implement sharing functionality
    117 |     monitoring.recordMetric({
  > 118 |       category: 'load_test',
        |       ^^^^^^^^
    119 |       name: 'results_shared',
    120 |       value: 1
    121 |     });
ERROR in src/components/testing/SecurityTestDashboard.tsx:113:9
TS2322: Type 'number' is not assignable to type 'string'.
    111 |       value: 1,
    112 |       tags: {
  > 113 |         vulnerabilities: results.vulnerabilities.length,
        |         ^^^^^^^^^^^^^^^
    114 |         pass_rate: (results.passed_checks / results.total_checks) * 100
    115 |       }
    116 |     });
ERROR in src/components/testing/SecurityTestDashboard.tsx:114:9
TS2322: Type 'number' is not assignable to type 'string'.
    112 |       tags: {
    113 |         vulnerabilities: results.vulnerabilities.length,
  > 114 |         pass_rate: (results.passed_checks / results.total_checks) * 100
        |         ^^^^^^^^^
    115 |       }
    116 |     });
    117 |   }, [results]);
ERROR in src/components/testing/SecurityTestDashboard.tsx:124:7
TS2353: Object literal may only specify known properties, and 'category' does not exist in type 'Omit<MonitoringMetric, "id" | "timestamp">'.
    122 |
    123 |     monitoring.recordMetric({
  > 124 |       category: 'security_test',
        |       ^^^^^^^^
    125 |       name: 'vulnerability_viewed',
    126 |       value: 1,
    127 |       tags: {
ERROR in src/components/testing/SecurityTestDashboard.tsx:165:9
TS2353: Object literal may only specify known properties, and 'category' does not exist in type 'Omit<MonitoringMetric, "id" | "timestamp">'.
    163 |
    164 |       monitoring.recordMetric({
  > 165 |         category: 'security_test',
        |         ^^^^^^^^
    166 |         name: 'report_generated',
    167 |         value: 1
    168 |       });
ERROR in src/components/testing/SecurityTestDashboard.tsx:170:18
TS2339: Property 'recordError' does not exist on type 'MonitoringService'.
    168 |       });
    169 |     } catch (error) {
  > 170 |       monitoring.recordError('generate_report_failed', error);
        |                  ^^^^^^^^^^^
    171 |     } finally {
    172 |       setIsGeneratingReport(false);
    173 |     }
ERROR in src/components/testing/TestRunner.tsx:28:29
TS2307: Cannot find module './TestResults' or its corresponding type declarations.
    26 | } from '@mui/icons-material';
    27 | import { styled } from '@mui/material/styles';
  > 28 | import { TestResults } from './TestResults';
       |                             ^^^^^^^^^^^^^^^
    29 | import { LoadTestVisualizer } from './LoadTestVisualizer';
    30 | import { SecurityTestDashboard } from './SecurityTestDashboard';
    31 | import { MonitoringService } from '../../services/monitoring.service';
ERROR in src/components/testing/TestRunner.tsx:73:20
TS2339: Property 'recordError' does not exist on type 'MonitoringService'.
    71 |         }
    72 |       } catch (error) {
  > 73 |         monitoring.recordError('load_test_configs_failed', error);
       |                    ^^^^^^^^^^^
    74 |       }
    75 |     };
    76 |     loadSavedConfigs();
ERROR in src/components/testing/TestRunner.tsx:88:9
TS2353: Object literal may only specify known properties, and 'category' does not exist in type 'Omit<MonitoringMetric, "id" | "timestamp">'.
    86 |     try {
    87 |       monitoring.recordMetric({
  > 88 |         category: 'testing',
       |         ^^^^^^^^
    89 |         name: 'test_started',
    90 |         value: 1,
    91 |         tags: { type: activeTest.type }
ERROR in src/components/testing/TestRunner.tsx:111:9
TS2353: Object literal may only specify known properties, and 'category' does not exist in type 'Omit<MonitoringMetric, "id" | "timestamp">'.
    109 |
    110 |       monitoring.recordMetric({
  > 111 |         category: 'testing',
        |         ^^^^^^^^
    112 |         name: 'test_completed',
    113 |         value: 1,
    114 |         tags: { 
ERROR in src/components/testing/TestRunner.tsx:120:18
TS2339: Property 'recordError' does not exist on type 'MonitoringService'.
    118 |       });
    119 |     } catch (error) {
  > 120 |       monitoring.recordError('test_execution_failed', error);
        |                  ^^^^^^^^^^^
    121 |     } finally {
    122 |       setIsRunning(false);
    123 |     }
ERROR in src/components/testing/TestRunner.tsx:129:7
TS2353: Object literal may only specify known properties, and 'category' does not exist in type 'Omit<MonitoringMetric, "id" | "timestamp">'.
    127 |     setIsRunning(false);
    128 |     monitoring.recordMetric({
  > 129 |       category: 'testing',
        |       ^^^^^^^^
    130 |       name: 'test_stopped',
    131 |       value: 1,
    132 |       tags: { type: activeTest?.type }
ERROR in src/components/testing/TestRunner.tsx:144:7
TS2353: Object literal may only specify known properties, and 'category' does not exist in type 'Omit<MonitoringMetric, "id" | "timestamp">'.
    142 |
    143 |     monitoring.recordMetric({
  > 144 |       category: 'testing',
        |       ^^^^^^^^
    145 |       name: 'config_saved',
    146 |       value: 1,
    147 |       tags: { type: activeTest.type }
ERROR in src/components/visualization/CodeDependencyGraph.tsx:2:26
TS2307: Cannot find module '3d-force-graph' or its corresponding type declarations.
    1 | import React, { useEffect, useRef } from 'react';
  > 2 | import ForceGraph3D from '3d-force-graph';
      |                          ^^^^^^^^^^^^^^^^
    3 | import { Box, Paper, Typography, IconButton, Tooltip } from '@mui/material';
    4 | import { Refresh as RefreshIcon, ZoomIn, ZoomOut, CenterFocusStrong } from '@mui/icons-material';
    5 | import { DependencyService } from '../../services/dependency/DependencyService';
ERROR in src/components/visualization/CodeDependencyGraph.tsx:100:52
TS2339: Property 'x' does not exist on type 'Node'.
     98 |   const handleNodeClick = (node: Node) => {
     99 |     const distance = 40;
  > 100 |     const distRatio = 1 + distance/Math.hypot(node.x!, node.y!, node.z!);
        |                                                    ^
    101 |
    102 |     if (graphRef.current) {
    103 |       graphRef.current.cameraPosition(
ERROR in src/components/visualization/CodeDependencyGraph.tsx:100:61
TS2339: Property 'y' does not exist on type 'Node'.
     98 |   const handleNodeClick = (node: Node) => {
     99 |     const distance = 40;
  > 100 |     const distRatio = 1 + distance/Math.hypot(node.x!, node.y!, node.z!);
        |                                                             ^
    101 |
    102 |     if (graphRef.current) {
    103 |       graphRef.current.cameraPosition(
ERROR in src/components/visualization/CodeDependencyGraph.tsx:100:70
TS2339: Property 'z' does not exist on type 'Node'.
     98 |   const handleNodeClick = (node: Node) => {
     99 |     const distance = 40;
  > 100 |     const distRatio = 1 + distance/Math.hypot(node.x!, node.y!, node.z!);
        |                                                                      ^
    101 |
    102 |     if (graphRef.current) {
    103 |       graphRef.current.cameraPosition(
ERROR in src/components/visualization/CodeDependencyGraph.tsx:104:19
TS2339: Property 'x' does not exist on type 'Node'.
    102 |     if (graphRef.current) {
    103 |       graphRef.current.cameraPosition(
  > 104 |         { x: node.x! * distRatio, y: node.y! * distRatio, z: node.z! * distRatio },
        |                   ^
    105 |         node,
    106 |         1000
    107 |       );
ERROR in src/components/visualization/CodeDependencyGraph.tsx:104:43
TS2339: Property 'y' does not exist on type 'Node'.
    102 |     if (graphRef.current) {
    103 |       graphRef.current.cameraPosition(
  > 104 |         { x: node.x! * distRatio, y: node.y! * distRatio, z: node.z! * distRatio },
        |                                           ^
    105 |         node,
    106 |         1000
    107 |       );
ERROR in src/components/visualization/CodeDependencyGraph.tsx:104:67
TS2339: Property 'z' does not exist on type 'Node'.
    102 |     if (graphRef.current) {
    103 |       graphRef.current.cameraPosition(
  > 104 |         { x: node.x! * distRatio, y: node.y! * distRatio, z: node.z! * distRatio },
        |                                                                   ^
    105 |         node,
    106 |         1000
    107 |       );
ERROR in src/components/Visualization/CodeDependencyGraph.tsx:2:26
TS2307: Cannot find module '3d-force-graph' or its corresponding type declarations.
    1 | import React, { useEffect, useRef } from 'react';
  > 2 | import ForceGraph3D from '3d-force-graph';
      |                          ^^^^^^^^^^^^^^^^
    3 | import { Box, Paper, Typography, IconButton, Tooltip } from '@mui/material';
    4 | import { Refresh as RefreshIcon, ZoomIn, ZoomOut, CenterFocusStrong } from '@mui/icons-material';
    5 | import { DependencyService } from '../../services/dependency/DependencyService';
ERROR in src/components/Visualization/CodeDependencyGraph.tsx:100:52
TS2339: Property 'x' does not exist on type 'Node'.
     98 |   const handleNodeClick = (node: Node) => {
     99 |     const distance = 40;
  > 100 |     const distRatio = 1 + distance/Math.hypot(node.x!, node.y!, node.z!);
        |                                                    ^
    101 |
    102 |     if (graphRef.current) {
    103 |       graphRef.current.cameraPosition(
ERROR in src/components/Visualization/CodeDependencyGraph.tsx:100:61
TS2339: Property 'y' does not exist on type 'Node'.
     98 |   const handleNodeClick = (node: Node) => {
     99 |     const distance = 40;
  > 100 |     const distRatio = 1 + distance/Math.hypot(node.x!, node.y!, node.z!);
        |                                                             ^
    101 |
    102 |     if (graphRef.current) {
    103 |       graphRef.current.cameraPosition(
ERROR in src/components/Visualization/CodeDependencyGraph.tsx:100:70
TS2339: Property 'z' does not exist on type 'Node'.
     98 |   const handleNodeClick = (node: Node) => {
     99 |     const distance = 40;
  > 100 |     const distRatio = 1 + distance/Math.hypot(node.x!, node.y!, node.z!);
        |                                                                      ^
    101 |
    102 |     if (graphRef.current) {
    103 |       graphRef.current.cameraPosition(
ERROR in src/components/Visualization/CodeDependencyGraph.tsx:104:19
TS2339: Property 'x' does not exist on type 'Node'.
    102 |     if (graphRef.current) {
    103 |       graphRef.current.cameraPosition(
  > 104 |         { x: node.x! * distRatio, y: node.y! * distRatio, z: node.z! * distRatio },
        |                   ^
    105 |         node,
    106 |         1000
    107 |       );
ERROR in src/components/Visualization/CodeDependencyGraph.tsx:104:43
TS2339: Property 'y' does not exist on type 'Node'.
    102 |     if (graphRef.current) {
    103 |       graphRef.current.cameraPosition(
  > 104 |         { x: node.x! * distRatio, y: node.y! * distRatio, z: node.z! * distRatio },
        |                                           ^
    105 |         node,
    106 |         1000
    107 |       );
ERROR in src/components/Visualization/CodeDependencyGraph.tsx:104:67
TS2339: Property 'z' does not exist on type 'Node'.
    102 |     if (graphRef.current) {
    103 |       graphRef.current.cameraPosition(
  > 104 |         { x: node.x! * distRatio, y: node.y! * distRatio, z: node.z! * distRatio },
        |                                                                   ^
    105 |         node,
    106 |         1000
    107 |       );
ERROR in src/components/visualization/CodeVisualization.tsx:2:30
TS2307: Cannot find module 'react-force-graph' or its corresponding type declarations.
    1 | import React, { useCallback, useMemo, useRef, useState } from 'react';
  > 2 | import { ForceGraph2D } from 'react-force-graph';
      |                              ^^^^^^^^^^^^^^^^^^^
    3 | import {
    4 |   Box,
    5 |   Paper,
ERROR in src/components/VisualPerceptionCapture.tsx:81:40
TS2345: Argument of type 'Element' is not assignable to parameter of type 'HTMLElement'.
  Type 'Element' is missing the following properties from type 'HTMLElement': accessKey, accessKeyLabel, autocapitalize, dir, and 127 more.
    79 |       
    80 |       // Capture the screenshot
  > 81 |       const canvas = await html2canvas(targetElement, {
       |                                        ^^^^^^^^^^^^^
    82 |         logging: false,
    83 |         useCORS: true,
    84 |         allowTaint: true,
ERROR in src/components/WebIDE.tsx:42:7
TS2353: Object literal may only specify known properties, and 'ideType' does not exist in type '{ ws: Socket<DefaultEventsMap, DefaultEventsMap>; projectId: string; ideConfig: IDEConfig; }'.
    40 |       ws: socket,
    41 |       projectId,
  > 42 |       ideType: 'web'
       |       ^^^^^^^
    43 |     });
    44 |
    45 |     const collaborativeEditingService = new CollaborativeEditingService({
ERROR in src/components/WebIDE.tsx:65:37
TS2554: Expected 0 arguments, but got 1.
    63 |     // Initialize services
    64 |     Promise.all([
  > 65 |       codeEditingService.initialize(editorRef.current),
       |                                     ^^^^^^^^^^^^^^^^^
    66 |       ideCommunicationService.initialize(),
    67 |       collaborativeEditingService.initialize(),
    68 |       codeNavigationService.initialize()
ERROR in src/components/WebIDE.tsx:67:35
TS2339: Property 'initialize' does not exist on type 'CollaborativeEditingService'.
    65 |       codeEditingService.initialize(editorRef.current),
    66 |       ideCommunicationService.initialize(),
  > 67 |       collaborativeEditingService.initialize(),
       |                                   ^^^^^^^^^^
    68 |       codeNavigationService.initialize()
    69 |     ]);
    70 |
ERROR in src/components/WebIDE.tsx:98:10
TS2604: JSX element type 'Editor' does not have any construct or call signatures.
     96 |       </Paper>
     97 |       <Box sx={{ flex: 1, overflow: 'hidden' }}>
  >  98 |         <Editor
        |          ^^^^^^
     99 |           height="100%"
    100 |           defaultLanguage="typescript"
    101 |           defaultValue={code}
ERROR in src/components/WebIDE.tsx:98:10
TS2786: 'Editor' cannot be used as a JSX component.
  Its type 'typeof import("@monaco-editor/react")' is not a valid JSX element type.
     96 |       </Paper>
     97 |       <Box sx={{ flex: 1, overflow: 'hidden' }}>
  >  98 |         <Editor
        |          ^^^^^^
     99 |           height="100%"
    100 |           defaultLanguage="typescript"
    101 |           defaultValue={code}
ERROR in src/components/Workspace/Workspace.tsx:7:5
TS2305: Module '"@mui/icons-material"' has no exported member 'ChevronUp'.
     5 |     ChevronLeft as ChevronLeftIcon,
     6 |     ChevronRight as ChevronRightIcon,
  >  7 |     ChevronUp as ChevronUpIcon,
       |     ^^^^^^^^^
     8 |     ChevronDown as ChevronDownIcon,
     9 |     Settings as SettingsIcon,
    10 |     Fullscreen as FullscreenIcon,
ERROR in src/components/Workspace/Workspace.tsx:8:5
TS2305: Module '"@mui/icons-material"' has no exported member 'ChevronDown'.
     6 |     ChevronRight as ChevronRightIcon,
     7 |     ChevronUp as ChevronUpIcon,
  >  8 |     ChevronDown as ChevronDownIcon,
       |     ^^^^^^^^^^^
     9 |     Settings as SettingsIcon,
    10 |     Fullscreen as FullscreenIcon,
    11 |     FullscreenExit as FullscreenExitIcon
ERROR in src/components/Workspace/Workspace.tsx:13:31
TS2307: Cannot find module '../CommandCenter/CommandCenter' or its corresponding type declarations.
    11 |     FullscreenExit as FullscreenExitIcon
    12 | } from '@mui/icons-material';
  > 13 | import { CommandCenter } from '../CommandCenter/CommandCenter';
       |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    14 | import { FileExplorer } from '../FileExplorer/FileExplorer';
    15 | import { Editor } from '../Editor/Editor';
    16 | import { Terminal } from '../Terminal/Terminal';
ERROR in src/components/Workspace/Workspace.tsx:14:30
TS2307: Cannot find module '../FileExplorer/FileExplorer' or its corresponding type declarations.
    12 | } from '@mui/icons-material';
    13 | import { CommandCenter } from '../CommandCenter/CommandCenter';
  > 14 | import { FileExplorer } from '../FileExplorer/FileExplorer';
       |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    15 | import { Editor } from '../Editor/Editor';
    16 | import { Terminal } from '../Terminal/Terminal';
    17 | import { StatusBar } from '../StatusBar/StatusBar';
ERROR in src/components/Workspace/Workspace.tsx:15:24
TS2307: Cannot find module '../Editor/Editor' or its corresponding type declarations.
    13 | import { CommandCenter } from '../CommandCenter/CommandCenter';
    14 | import { FileExplorer } from '../FileExplorer/FileExplorer';
  > 15 | import { Editor } from '../Editor/Editor';
       |                        ^^^^^^^^^^^^^^^^^^
    16 | import { Terminal } from '../Terminal/Terminal';
    17 | import { StatusBar } from '../StatusBar/StatusBar';
    18 | import { IDELayout, IDEConfig, ProjectConfig } from '../../interfaces/ide';
ERROR in src/components/Workspace/Workspace.tsx:17:27
TS2307: Cannot find module '../StatusBar/StatusBar' or its corresponding type declarations.
    15 | import { Editor } from '../Editor/Editor';
    16 | import { Terminal } from '../Terminal/Terminal';
  > 17 | import { StatusBar } from '../StatusBar/StatusBar';
       |                           ^^^^^^^^^^^^^^^^^^^^^^^^
    18 | import { IDELayout, IDEConfig, ProjectConfig } from '../../interfaces/ide';
    19 | import { CommandCenterConfig } from '../../interfaces/command-center';
    20 |
ERROR in src/components/Workspace/Workspace.tsx:237:29
TS2322: Type '{ sessions: TerminalSession[]; config: { theme: string; fontSize: number; cursorStyle: string; cursorBlink: boolean; }; collapsed: boolean; }' is not assignable to type 'IntrinsicAttributes & TerminalProps'.
  Property 'sessions' does not exist on type 'IntrinsicAttributes & TerminalProps'. Did you mean 'sessionId'?
    235 |                     >
    236 |                         <Terminal
  > 237 |                             sessions={layout.terminal.sessions}
        |                             ^^^^^^^^
    238 |                             config={config.terminal}
    239 |                             collapsed={layout.terminal.collapsed}
    240 |                         />
ERROR in src/contexts/AIAssistantContext.tsx:72:7
TS2739: Type '{ totalInteractions: number; successfulSuggestions: number; rejectedSuggestions: number; averageConfidence: number; popularCommands: undefined[]; userFeedback: { helpful: number; notHelpful: number; }; performance: { ...; }; }' is missing the following properties from type 'AIAssistantAnalytics': userEngagement, codeMetrics, learningMetrics, visualization
    70 | };
    71 |
  > 72 | const initialAnalytics: AIAssistantAnalytics = {
       |       ^^^^^^^^^^^^^^^^
    73 |     totalInteractions: 0,
    74 |     successfulSuggestions: 0,
    75 |     rejectedSuggestions: 0,
ERROR in src/contexts/ProjectContext.tsx:29:26
TS2673: Constructor of class 'ProjectService' is private and only accessible within the class declaration.
    27 |   const [error, setError] = useState<string | null>(null);
    28 |   
  > 29 |   const projectService = new ProjectService();
       |                          ^^^^^^^^^^^^^^^^^^^^
    30 |
    31 |   const refreshProjects = async () => {
    32 |     setLoading(true);
ERROR in src/data/mockDesignData.ts:478:7
TS2739: Type '{ primary: string; secondary: string; text: string; }' is missing the following properties from type '{ [key: string]: string; primary: string; secondary: string; background: string; surface: string; error: string; text: string; textSecondary: string; }': background, surface, error, textSecondary
    476 |     priority: 'medium',
    477 |     styles: {
  > 478 |       colors: {
        |       ^^^^^^
    479 |         primary: '#0d47a1',
    480 |         secondary: '#c2185b',
    481 |         text: '#121212'
ERROR in src/hooks/useProject.ts:20:26
TS2673: Constructor of class 'ProjectService' is private and only accessible within the class declaration.
    18 |   const [loading, setLoading] = useState<boolean>(false);
    19 |   const [error, setError] = useState<string | null>(null);
  > 20 |   const projectService = new ProjectService();
       |                          ^^^^^^^^^^^^^^^^^^^^
    21 |
    22 |   useEffect(() => {
    23 |     if (!projectId) return;
ERROR in src/hooks/useThemeMode.ts:2:10
TS2305: Module '"../theme"' has no exported member 'createAppTheme'.
    1 | import { useState, useEffect } from 'react';
  > 2 | import { createAppTheme } from '../theme';
      |          ^^^^^^^^^^^^^^
    3 |
    4 | type ThemeMode = 'light' | 'dark';
    5 |
ERROR in src/interfaces/ide.ts:22:19
TS2304: Cannot find name 'TerminalSession'.
    20 |         height: number;
    21 |         collapsed: boolean;
  > 22 |         sessions: TerminalSession[];
       |                   ^^^^^^^^^^^^^^^
    23 |     };
    24 |     statusBar: {
    25 |         height: number;
ERROR in src/interfaces/ide.ts:95:19
TS2304: Cannot find name 'TerminalSession'.
    93 |     };
    94 |     terminal: {
  > 95 |         sessions: TerminalSession[];
       |                   ^^^^^^^^^^^^^^^
    96 |         splitView: boolean;
    97 |         theme: string;
    98 |     };
ERROR in src/mocks/server.ts:1:29
TS2307: Cannot find module 'msw/node' or its corresponding type declarations.
  > 1 | import { setupServer } from 'msw/node';
      |                             ^^^^^^^^^^
    2 | import { rest } from 'msw';
    3 |
    4 | // Mock API endpoints
ERROR in src/mocks/server.ts:2:22
TS2307: Cannot find module 'msw' or its corresponding type declarations.
    1 | import { setupServer } from 'msw/node';
  > 2 | import { rest } from 'msw';
      |                      ^^^^^
    3 |
    4 | // Mock API endpoints
    5 | const handlers = [
ERROR in src/pages/Profile.tsx:248:21
TS2322: Type '(message: string, threadId?: string) => void' is not assignable to type '(message: string, threadId?: string) => Promise<void>'.
  Type 'void' is not assignable to type 'Promise<void>'.
    246 |                 <Box sx={{ height: 500 }}>
    247 |                   <UnifiedChat
  > 248 |                     onSendMessage={handleSendMessage}
        |                     ^^^^^^^^^^^^^
    249 |                     onCreateThread={handleCreateThread}
    250 |                     showThreads
    251 |                     currentAgent={{
ERROR in src/pages/Profile.tsx:249:21
TS2322: Type '(title: string, type: string) => void' is not assignable to type '(title: string, type: "task" | "review" | "decision" | "general") => Promise<void>'.
  Type 'void' is not assignable to type 'Promise<void>'.
    247 |                   <UnifiedChat
    248 |                     onSendMessage={handleSendMessage}
  > 249 |                     onCreateThread={handleCreateThread}
        |                     ^^^^^^^^^^^^^^
    250 |                     showThreads
    251 |                     currentAgent={{
    252 |                       id: 'personal-assistant',
ERROR in src/pages/Projects.tsx:301:19
TS2322: Type '(message: string, threadId?: string) => void' is not assignable to type '(message: string, threadId?: string) => Promise<void>'.
  Type 'void' is not assignable to type 'Promise<void>'.
    299 |               <Box sx={{ flex: 1 }}>
    300 |                 <UnifiedChat
  > 301 |                   onSendMessage={handleSendMessage}
        |                   ^^^^^^^^^^^^^
    302 |                   onCreateThread={handleCreateThread}
    303 |                   showThreads
    304 |                   currentAgent={{
ERROR in src/pages/Projects.tsx:302:19
TS2322: Type '(title: string, type: string) => void' is not assignable to type '(title: string, type: "task" | "review" | "decision" | "general") => Promise<void>'.
  Type 'void' is not assignable to type 'Promise<void>'.
    300 |                 <UnifiedChat
    301 |                   onSendMessage={handleSendMessage}
  > 302 |                   onCreateThread={handleCreateThread}
        |                   ^^^^^^^^^^^^^^
    303 |                   showThreads
    304 |                   currentAgent={{
    305 |                     id: 'project-assistant',
ERROR in src/pages/PullRequests.tsx:395:21
TS2322: Type '(message: string, threadId?: string) => void' is not assignable to type '(message: string, threadId?: string) => Promise<void>'.
  Type 'void' is not assignable to type 'Promise<void>'.
    393 |                   <Divider sx={{ mb: 3 }} />
    394 |                   <UnifiedChat
  > 395 |                     onSendMessage={handleSendMessage}
        |                     ^^^^^^^^^^^^^
    396 |                     showThreads={false}
    397 |                     currentAgent={{
    398 |                       id: 'code-reviewer',
ERROR in src/routes/Analytics.tsx:145:21
TS2322: Type '(event: React.ChangeEvent<{ value: unknown; }>) => void' is not assignable to type '(event: SelectChangeEvent<string>, child: ReactNode) => void'.
  Types of parameters 'event' and 'event' are incompatible.
    Type 'SelectChangeEvent<string>' is not assignable to type 'ChangeEvent<{ value: unknown; }>'.
      Type 'Event & { target: { value: string; name: string; }; }' is missing the following properties from type 'ChangeEvent<{ value: unknown; }>': nativeEvent, isDefaultPrevented, isPropagationStopped, persist
    143 |                   <Select
    144 |                     value={timeRange}
  > 145 |                     onChange={handleTimeRangeChange}
        |                     ^^^^^^^^
    146 |                     label="Time Range"
    147 |                   >
    148 |                     <MenuItem value="24h">Last 24 Hours</MenuItem>
ERROR in src/routes/DesignHub.tsx:18:35
TS2344: Type 'DesignHubPageParams' does not satisfy the constraint 'string | Record<string, string>'.
  Type 'DesignHubPageParams' is not assignable to type 'Record<string, string>'.
    Index signature for type 'string' is missing in type 'DesignHubPageParams'.
    16 |
    17 | const DesignHubPage: React.FC = () => {
  > 18 |   const { projectId } = useParams<DesignHubPageParams>();
       |                                   ^^^^^^^^^^^^^^^^^^^
    19 |   const navigate = useNavigate();
    20 |   const [loading, setLoading] = useState<boolean>(false);
    21 |
ERROR in src/services/agent.service.ts:25:3
TS1205: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
    23 |   TestType, 
    24 |   DocumentationType, 
  > 25 |   CodeGenerationRequest, 
       |   ^^^^^^^^^^^^^^^^^^^^^
    26 |   CodeGenerationResponse, 
    27 |   CodeReviewRequest, 
    28 |   CodeReviewResponse, 
ERROR in src/services/agent.service.ts:26:3
TS1205: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
    24 |   DocumentationType, 
    25 |   CodeGenerationRequest, 
  > 26 |   CodeGenerationResponse, 
       |   ^^^^^^^^^^^^^^^^^^^^^^
    27 |   CodeReviewRequest, 
    28 |   CodeReviewResponse, 
    29 |   TestGenerationRequest, 
ERROR in src/services/agent.service.ts:27:3
TS1205: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
    25 |   CodeGenerationRequest, 
    26 |   CodeGenerationResponse, 
  > 27 |   CodeReviewRequest, 
       |   ^^^^^^^^^^^^^^^^^
    28 |   CodeReviewResponse, 
    29 |   TestGenerationRequest, 
    30 |   TestGenerationResponse, 
ERROR in src/services/agent.service.ts:28:3
TS1205: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
    26 |   CodeGenerationResponse, 
    27 |   CodeReviewRequest, 
  > 28 |   CodeReviewResponse, 
       |   ^^^^^^^^^^^^^^^^^^
    29 |   TestGenerationRequest, 
    30 |   TestGenerationResponse, 
    31 |   DocumentationRequest, 
ERROR in src/services/agent.service.ts:29:3
TS1205: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
    27 |   CodeReviewRequest, 
    28 |   CodeReviewResponse, 
  > 29 |   TestGenerationRequest, 
       |   ^^^^^^^^^^^^^^^^^^^^^
    30 |   TestGenerationResponse, 
    31 |   DocumentationRequest, 
    32 |   DocumentationResponse, 
ERROR in src/services/agent.service.ts:30:3
TS1205: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
    28 |   CodeReviewResponse, 
    29 |   TestGenerationRequest, 
  > 30 |   TestGenerationResponse, 
       |   ^^^^^^^^^^^^^^^^^^^^^^
    31 |   DocumentationRequest, 
    32 |   DocumentationResponse, 
    33 |   AgentCapabilities 
ERROR in src/services/agent.service.ts:31:3
TS1205: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
    29 |   TestGenerationRequest, 
    30 |   TestGenerationResponse, 
  > 31 |   DocumentationRequest, 
       |   ^^^^^^^^^^^^^^^^^^^^
    32 |   DocumentationResponse, 
    33 |   AgentCapabilities 
    34 | };
ERROR in src/services/agent.service.ts:32:3
TS1205: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
    30 |   TestGenerationResponse, 
    31 |   DocumentationRequest, 
  > 32 |   DocumentationResponse, 
       |   ^^^^^^^^^^^^^^^^^^^^^
    33 |   AgentCapabilities 
    34 | };
    35 |
ERROR in src/services/agent.service.ts:33:3
TS1205: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
    31 |   DocumentationRequest, 
    32 |   DocumentationResponse, 
  > 33 |   AgentCapabilities 
       |   ^^^^^^^^^^^^^^^^^
    34 | };
    35 |
    36 | export interface GenerationContext {
ERROR in src/services/AgentCollaborationService.ts:293:18
TS2345: Argument of type '"task:created"' is not assignable to parameter of type '"agent:register" | "codebase:initialize" | "agent:notification"'.
    291 |
    292 |     this.tasks.set(task.id, task);
  > 293 |     this.ws.emit('task:created', {
        |                  ^^^^^^^^^^^^^^
    294 |       projectId: this.projectId,
    295 |       task
    296 |     });
ERROR in src/services/AgentCollaborationService.ts:304:20
TS2345: Argument of type '"agent:message"' is not assignable to parameter of type '"agent:register" | "codebase:initialize" | "agent:notification"'.
    302 |
    303 |     if (reviewer) {
  > 304 |       this.ws.emit('agent:message', {
        |                    ^^^^^^^^^^^^^^^
    305 |         projectId: this.projectId,
    306 |         from: message.from,
    307 |         to: reviewer.id,
ERROR in src/services/AgentCollaborationService.ts:321:20
TS2345: Argument of type '"agent:message"' is not assignable to parameter of type '"agent:register" | "codebase:initialize" | "agent:notification"'.
    319 |
    320 |     if (designer) {
  > 321 |       this.ws.emit('agent:message', {
        |                    ^^^^^^^^^^^^^^^
    322 |         projectId: this.projectId,
    323 |         from: message.from,
    324 |         to: designer.id,
ERROR in src/services/AgentCollaborationService.ts:338:20
TS2345: Argument of type '"agent:message"' is not assignable to parameter of type '"agent:register" | "codebase:initialize" | "agent:notification"'.
    336 |
    337 |     if (integrator) {
  > 338 |       this.ws.emit('agent:message', {
        |                    ^^^^^^^^^^^^^^^
    339 |         projectId: this.projectId,
    340 |         from: message.from,
    341 |         to: integrator.id,
ERROR in src/services/AgentCollaborationService.ts:351:18
TS2345: Argument of type '"agent:status-updated"' is not assignable to parameter of type '"agent:register" | "codebase:initialize" | "agent:notification"'.
    349 |
    350 |   private updateAgentStatus(agent: Agent) {
  > 351 |     this.ws.emit('agent:status-updated', {
        |                  ^^^^^^^^^^^^^^^^^^^^^^
    352 |       projectId: this.projectId,
    353 |       agentId: agent.id,
    354 |       status: agent.status
ERROR in src/services/AgentCollaborationService.ts:359:18
TS2345: Argument of type '"task:status-updated"' is not assignable to parameter of type '"agent:register" | "codebase:initialize" | "agent:notification"'.
    357 |
    358 |   private updateTaskStatus(task: AgentTask) {
  > 359 |     this.ws.emit('task:status-updated', {
        |                  ^^^^^^^^^^^^^^^^^^^^^
    360 |       projectId: this.projectId,
    361 |       taskId: task.id,
    362 |       status: task.status
ERROR in src/services/AgentCollaborationService.ts:367:18
TS2345: Argument of type '"agent:dispose"' is not assignable to parameter of type '"agent:register" | "codebase:initialize" | "agent:notification"'.
    365 |
    366 |   public dispose() {
  > 367 |     this.ws.emit('agent:dispose', {
        |                  ^^^^^^^^^^^^^^^
    368 |       projectId: this.projectId,
    369 |       sessionId: this.sessionId
    370 |     });
ERROR in src/services/AgentIntegrationService.ts:169:5
TS2740: Type '{}' is missing the following properties from type 'Agent': id, type, name, status, and 2 more.
    167 |
    168 |   private findAvailableAgent(type: AgentType): Agent | undefined {
  > 169 |     return Array.from(this.agentCollaboration.getAgents().values())
        |     ^^^^^^
    170 |       .find(agent => agent.type === type && agent.status === 'idle');
    171 |   }
    172 |
ERROR in src/services/AgentIntegrationService.ts:169:47
TS2339: Property 'getAgents' does not exist on type 'AgentCollaborationService'.
    167 |
    168 |   private findAvailableAgent(type: AgentType): Agent | undefined {
  > 169 |     return Array.from(this.agentCollaboration.getAgents().values())
        |                                               ^^^^^^^^^
    170 |       .find(agent => agent.type === type && agent.status === 'idle');
    171 |   }
    172 |
ERROR in src/services/AgentIntegrationService.ts:170:28
TS2339: Property 'type' does not exist on type 'unknown'.
    168 |   private findAvailableAgent(type: AgentType): Agent | undefined {
    169 |     return Array.from(this.agentCollaboration.getAgents().values())
  > 170 |       .find(agent => agent.type === type && agent.status === 'idle');
        |                            ^^^^
    171 |   }
    172 |
    173 |   private async handleCodeEdit(data: any) {
ERROR in src/services/AgentIntegrationService.ts:170:51
TS2339: Property 'status' does not exist on type 'unknown'.
    168 |   private findAvailableAgent(type: AgentType): Agent | undefined {
    169 |     return Array.from(this.agentCollaboration.getAgents().values())
  > 170 |       .find(agent => agent.type === type && agent.status === 'idle');
        |                                                   ^^^^^^
    171 |   }
    172 |
    173 |   private async handleCodeEdit(data: any) {
ERROR in src/services/AgentIntegrationService.ts:213:43
TS2339: Property 'createComponent' does not exist on type 'DesignAgentService'.
    211 |   private async handleDesignRequest(data: any, agent: Agent) {
    212 |     // Handle design requests
  > 213 |     const result = await this.designAgent.createComponent(data);
        |                                           ^^^^^^^^^^^^^^^
    214 |     await this.notifyAgent(agent.id, 'design:complete', result);
    215 |   }
    216 |
ERROR in src/services/AgentIntegrationService.ts:258:5
TS2322: Type 'unknown[]' is not assignable to type 'Agent[]'.
  Type '{}' is missing the following properties from type 'Agent': id, type, name, status, and 2 more.
    256 |   private getRelevantAgentsForCodeEdit(data: any): Agent[] {
    257 |     // Determine which agents should be notified about code changes
  > 258 |     return Array.from(this.agentCollaboration.getAgents().values())
        |     ^^^^^^
    259 |       .filter(agent => {
    260 |         switch (agent.type) {
    261 |           case 'reviewer':
ERROR in src/services/AgentIntegrationService.ts:258:47
TS2339: Property 'getAgents' does not exist on type 'AgentCollaborationService'.
    256 |   private getRelevantAgentsForCodeEdit(data: any): Agent[] {
    257 |     // Determine which agents should be notified about code changes
  > 258 |     return Array.from(this.agentCollaboration.getAgents().values())
        |                                               ^^^^^^^^^
    259 |       .filter(agent => {
    260 |         switch (agent.type) {
    261 |           case 'reviewer':
ERROR in src/services/AgentIntegrationService.ts:260:23
TS2339: Property 'type' does not exist on type 'unknown'.
    258 |     return Array.from(this.agentCollaboration.getAgents().values())
    259 |       .filter(agent => {
  > 260 |         switch (agent.type) {
        |                       ^^^^
    261 |           case 'reviewer':
    262 |           case 'tester':
    263 |           case 'documentation':
ERROR in src/services/AgentIntegrationService.ts:275:5
TS2740: Type '{}' is missing the following properties from type 'Agent': id, type, name, status, and 2 more.
    273 |   private determineTargetAgentForIDEMessage(data: any): Agent | undefined {
    274 |     // Determine which agent should handle the IDE message
  > 275 |     return Array.from(this.agentCollaboration.getAgents().values())
        |     ^^^^^^
    276 |       .find(agent => {
    277 |         switch (agent.type) {
    278 |           case 'code-implementer':
ERROR in src/services/AgentIntegrationService.ts:275:47
TS2339: Property 'getAgents' does not exist on type 'AgentCollaborationService'.
    273 |   private determineTargetAgentForIDEMessage(data: any): Agent | undefined {
    274 |     // Determine which agent should handle the IDE message
  > 275 |     return Array.from(this.agentCollaboration.getAgents().values())
        |                                               ^^^^^^^^^
    276 |       .find(agent => {
    277 |         switch (agent.type) {
    278 |           case 'code-implementer':
ERROR in src/services/AgentIntegrationService.ts:277:23
TS2339: Property 'type' does not exist on type 'unknown'.
    275 |     return Array.from(this.agentCollaboration.getAgents().values())
    276 |       .find(agent => {
  > 277 |         switch (agent.type) {
        |                       ^^^^
    278 |           case 'code-implementer':
    279 |             return data.type === 'code' || data.type === 'implementation';
    280 |           case 'designer':
ERROR in src/services/AgentIntegrationService.ts:292:5
TS2322: Type 'unknown[]' is not assignable to type 'Agent[]'.
  Type '{}' is missing the following properties from type 'Agent': id, type, name, status, and 2 more.
    290 |   private getAffectedAgentsForCollaboration(data: any): Agent[] {
    291 |     // Determine which agents are affected by collaborative changes
  > 292 |     return Array.from(this.agentCollaboration.getAgents().values())
        |     ^^^^^^
    293 |       .filter(agent => {
    294 |         switch (agent.type) {
    295 |           case 'code-implementer':
ERROR in src/services/AgentIntegrationService.ts:292:47
TS2339: Property 'getAgents' does not exist on type 'AgentCollaborationService'.
    290 |   private getAffectedAgentsForCollaboration(data: any): Agent[] {
    291 |     // Determine which agents are affected by collaborative changes
  > 292 |     return Array.from(this.agentCollaboration.getAgents().values())
        |                                               ^^^^^^^^^
    293 |       .filter(agent => {
    294 |         switch (agent.type) {
    295 |           case 'code-implementer':
ERROR in src/services/AgentIntegrationService.ts:294:23
TS2339: Property 'type' does not exist on type 'unknown'.
    292 |     return Array.from(this.agentCollaboration.getAgents().values())
    293 |       .filter(agent => {
  > 294 |         switch (agent.type) {
        |                       ^^^^
    295 |           case 'code-implementer':
    296 |           case 'reviewer':
    297 |           case 'tester':
ERROR in src/services/AgentIntegrationService.ts:309:5
TS2322: Type 'unknown[]' is not assignable to type 'Agent[]'.
  Type '{}' is missing the following properties from type 'Agent': id, type, name, status, and 2 more.
    307 |   private getRelevantAgentsForNavigation(data: any): Agent[] {
    308 |     // Determine which agents should handle navigation requests
  > 309 |     return Array.from(this.agentCollaboration.getAgents().values())
        |     ^^^^^^
    310 |       .filter(agent => {
    311 |         switch (agent.type) {
    312 |           case 'code-implementer':
ERROR in src/services/AgentIntegrationService.ts:309:47
TS2339: Property 'getAgents' does not exist on type 'AgentCollaborationService'.
    307 |   private getRelevantAgentsForNavigation(data: any): Agent[] {
    308 |     // Determine which agents should handle navigation requests
  > 309 |     return Array.from(this.agentCollaboration.getAgents().values())
        |                                               ^^^^^^^^^
    310 |       .filter(agent => {
    311 |         switch (agent.type) {
    312 |           case 'code-implementer':
ERROR in src/services/AgentIntegrationService.ts:311:23
TS2339: Property 'type' does not exist on type 'unknown'.
    309 |     return Array.from(this.agentCollaboration.getAgents().values())
    310 |       .filter(agent => {
  > 311 |         switch (agent.type) {
        |                       ^^^^
    312 |           case 'code-implementer':
    313 |           case 'architect':
    314 |             return true;
ERROR in src/services/AgentService.ts:1:37
TS2307: Cannot find module 'rxjs' or its corresponding type declarations.
  > 1 | import { Observable, Subject } from 'rxjs';
      |                                     ^^^^^^
    2 | import { MonitoringService } from './monitoring.service';
    3 | import { WebSocketService } from './websocket.service';
    4 | import { PerformanceMetric } from '../types/metrics';
ERROR in src/services/AgentService.ts:4:35
TS2307: Cannot find module '../types/metrics' or its corresponding type declarations.
    2 | import { MonitoringService } from './monitoring.service';
    3 | import { WebSocketService } from './websocket.service';
  > 4 | import { PerformanceMetric } from '../types/metrics';
      |                                   ^^^^^^^^^^^^^^^^^^
    5 | import { Agent, AgentTask, AgentResponse } from '../types/agent';
    6 |
    7 | export class AgentService {
ERROR in src/services/AgentService.ts:5:49
TS2307: Cannot find module '../types/agent' or its corresponding type declarations.
    3 | import { WebSocketService } from './websocket.service';
    4 | import { PerformanceMetric } from '../types/metrics';
  > 5 | import { Agent, AgentTask, AgentResponse } from '../types/agent';
      |                                                 ^^^^^^^^^^^^^^^^
    6 |
    7 | export class AgentService {
    8 |     private static instance: AgentService;
ERROR in src/services/AgentService.ts:44:29
TS2339: Property 'recordError' does not exist on type 'MonitoringService'.
    42 |             return data.agents;
    43 |         } catch (error) {
  > 44 |             this.monitoring.recordError('get_agents_failed', error);
       |                             ^^^^^^^^^^^
    45 |             throw error;
    46 |         }
    47 |     }
ERROR in src/services/AgentService.ts:66:17
TS2353: Object literal may only specify known properties, and 'category' does not exist in type 'Omit<MonitoringMetric, "id" | "timestamp">'.
    64 |             const duration = performance.now() - startTime;
    65 |             this.monitoring.recordMetric({
  > 66 |                 category: 'agent_task',
       |                 ^^^^^^^^
    67 |                 name: task.type,
    68 |                 value: duration,
    69 |                 tags: { agent_id: task.agent_id }
ERROR in src/services/AgentService.ts:74:29
TS2339: Property 'recordError' does not exist on type 'MonitoringService'.
    72 |             return data;
    73 |         } catch (error) {
  > 74 |             this.monitoring.recordError('execute_task_failed', error);
       |                             ^^^^^^^^^^^
    75 |             throw error;
    76 |         }
    77 |     }
ERROR in src/services/AgentService.ts:91:29
TS2339: Property 'recordError' does not exist on type 'MonitoringService'.
    89 |             return await response.json();
    90 |         } catch (error) {
  > 91 |             this.monitoring.recordError('evaluate_solution_failed', error);
       |                             ^^^^^^^^^^^
    92 |             throw error;
    93 |         }
    94 |     }
ERROR in src/services/AgentService.ts:103:29
TS2339: Property 'recordError' does not exist on type 'MonitoringService'.
    101 |             return await response.json();
    102 |         } catch (error) {
  > 103 |             this.monitoring.recordError('get_metrics_failed', error);
        |                             ^^^^^^^^^^^
    104 |             throw error;
    105 |         }
    106 |     }
ERROR in src/services/AgentService.ts:134:29
TS2339: Property 'recordError' does not exist on type 'MonitoringService'.
    132 |             return await response.json();
    133 |         } catch (error) {
  > 134 |             this.monitoring.recordError('update_config_failed', error);
        |                             ^^^^^^^^^^^
    135 |             throw error;
    136 |         }
    137 |     }
ERROR in src/services/ai-assistant.service.ts:136:41
TS2339: Property 'solutions' does not exist on type 'SafetyCheck'.
    134 |
    135 |             const suggestions: AIAssistantSuggestion[] = data.response.safetyChecks.map(check => {
  > 136 |                 const solutions = check.solutions?.map(solution => ({
        |                                         ^^^^^^^^^
    137 |                     code: solution.code,
    138 |                     description: solution.description,
    139 |                     metrics: {
ERROR in src/services/ai-assistant.service.ts:154:37
TS2339: Property 'file' does not exist on type 'SafetyCheck'.
    152 |                     confidence: check.status === 'safe' ? 1 : check.status === 'warning' ? 0.7 : 0.3,
    153 |                     context: {
  > 154 |                         file: check.file,
        |                                     ^^^^
    155 |                         line: check.line,
    156 |                         column: check.column
    157 |                     },
ERROR in src/services/ai-assistant.service.ts:155:37
TS2339: Property 'line' does not exist on type 'SafetyCheck'.
    153 |                     context: {
    154 |                         file: check.file,
  > 155 |                         line: check.line,
        |                                     ^^^^
    156 |                         column: check.column
    157 |                     },
    158 |                     actions: [
ERROR in src/services/ai-assistant.service.ts:156:39
TS2339: Property 'column' does not exist on type 'SafetyCheck'.
    154 |                         file: check.file,
    155 |                         line: check.line,
  > 156 |                         column: check.column
        |                                       ^^^^^^
    157 |                     },
    158 |                     actions: [
    159 |                         {
ERROR in src/services/ai-assistant.service.ts:184:45
TS2304: Cannot find name 'Solution'.
    182 |     }
    183 |
  > 184 |     private async executeSolution(solution: Solution, check: any): Promise<void> {
        |                                             ^^^^^^^^
    185 |         try {
    186 |             // Apply the solution code
    187 |             await this.applyCodeChanges(solution.code, check.file, check.line);
ERROR in src/services/ai-assistant.service.ts:217:18
TS2339: Property 'analytics' does not exist on type 'ProjectMetadata'.
    215 |
    216 |         // Update solution-related analytics
  > 217 |         metadata.analytics = {
        |                  ^^^^^^^^^
    218 |             ...metadata.analytics,
    219 |             successfulSolutions: (metadata.analytics.successfulSolutions || 0) + data.successfulSolutions,
    220 |             solutionMetrics: [
ERROR in src/services/ai-assistant.service.ts:218:25
TS2339: Property 'analytics' does not exist on type 'ProjectMetadata'.
    216 |         // Update solution-related analytics
    217 |         metadata.analytics = {
  > 218 |             ...metadata.analytics,
        |                         ^^^^^^^^^
    219 |             successfulSolutions: (metadata.analytics.successfulSolutions || 0) + data.successfulSolutions,
    220 |             solutionMetrics: [
    221 |                 ...(metadata.analytics.solutionMetrics || []),
ERROR in src/services/ai-assistant.service.ts:219:44
TS2339: Property 'analytics' does not exist on type 'ProjectMetadata'.
    217 |         metadata.analytics = {
    218 |             ...metadata.analytics,
  > 219 |             successfulSolutions: (metadata.analytics.successfulSolutions || 0) + data.successfulSolutions,
        |                                            ^^^^^^^^^
    220 |             solutionMetrics: [
    221 |                 ...(metadata.analytics.solutionMetrics || []),
    222 |                 data.solutionMetrics
ERROR in src/services/ai-assistant.service.ts:221:30
TS2339: Property 'analytics' does not exist on type 'ProjectMetadata'.
    219 |             successfulSolutions: (metadata.analytics.successfulSolutions || 0) + data.successfulSolutions,
    220 |             solutionMetrics: [
  > 221 |                 ...(metadata.analytics.solutionMetrics || []),
        |                              ^^^^^^^^^
    222 |                 data.solutionMetrics
    223 |             ]
    224 |         };
ERROR in src/services/ai-assistant.service.ts:598:59
TS2769: No overload matches this call.
  Overload 1 of 2, '(matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray', gave the following error.
    Argument of type 'unknown' is not assignable to parameter of type '{ [Symbol.match](string: string): RegExpMatchArray; }'.
      Property '[Symbol.match]' is missing in type '{}' but required in type '{ [Symbol.match](string: string): RegExpMatchArray; }'.
  Overload 2 of 2, '(regexp: string | RegExp): RegExpMatchArray', gave the following error.
    Argument of type 'unknown' is not assignable to parameter of type 'string | RegExp'.
    596 |                     if (typeof subPatterns === 'object') {
    597 |                         for (const [subCategory, pattern] of Object.entries(subPatterns)) {
  > 598 |                             const matches = content.match(pattern);
        |                                                           ^^^^^^^
    599 |                             if (matches) {
    600 |                                 topics.push(...matches);
    601 |                             }
ERROR in src/services/ai-assistant.service.ts:885:60
TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.
    883 |             // Check cache first
    884 |             const cacheKey = this.hashString(text);
  > 885 |             const cachedEmbedding = this.semanticCache.get(cacheKey);
        |                                                            ^^^^^^^^
    886 |             if (cachedEmbedding && Date.now() - cachedEmbedding.timestamp < this.CACHE_TTL) {
    887 |                 return cachedEmbedding.embeddings;
    888 |             }
ERROR in src/services/ai-assistant.service.ts:920:40
TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.
    918 |             if (embeddings.length > 384) {
    919 |                 const reducedEmbeddings = await this.reduceDimensionality(embeddings);
  > 920 |                 this.semanticCache.set(cacheKey, {
        |                                        ^^^^^^^^
    921 |                     embeddings: reducedEmbeddings,
    922 |                     timestamp: Date.now(),
    923 |                 });
ERROR in src/services/ai-assistant.service.ts:928:36
TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.
    926 |
    927 |             // Cache the embeddings
  > 928 |             this.semanticCache.set(cacheKey, {
        |                                    ^^^^^^^^
    929 |                 embeddings,
    930 |                 timestamp: Date.now(),
    931 |             });
ERROR in src/services/ai-assistant.service.ts:1121:45
TS2304: Cannot find name 'AIAssistantAnalytics'.
    1119 |     }
    1120 |
  > 1121 |     public getAnalytics(projectId: string): AIAssistantAnalytics {
         |                                             ^^^^^^^^^^^^^^^^^^^^
    1122 |         const metadata = this.projectMetadata.get(projectId);
    1123 |         if (!metadata) {
    1124 |             return {
ERROR in src/services/ai-assistant.service.ts:1150:43
TS2339: Property 'performanceMetrics' does not exist on type 'ProjectMetadata'.
    1148 |         // Calculate performance metrics
    1149 |         const performance = {
  > 1150 |             averageResponseTime: metadata.performanceMetrics.averageResponseTime,
         |                                           ^^^^^^^^^^^^^^^^^^
    1151 |             errorRate: metadata.performanceMetrics.errorRate,
    1152 |             suggestionAccuracy: metadata.performanceMetrics.suggestionAccuracy,
    1153 |         };
ERROR in src/services/ai-assistant.service.ts:1151:33
TS2339: Property 'performanceMetrics' does not exist on type 'ProjectMetadata'.
    1149 |         const performance = {
    1150 |             averageResponseTime: metadata.performanceMetrics.averageResponseTime,
  > 1151 |             errorRate: metadata.performanceMetrics.errorRate,
         |                                 ^^^^^^^^^^^^^^^^^^
    1152 |             suggestionAccuracy: metadata.performanceMetrics.suggestionAccuracy,
    1153 |         };
    1154 |
ERROR in src/services/ai-assistant.service.ts:1152:42
TS2339: Property 'performanceMetrics' does not exist on type 'ProjectMetadata'.
    1150 |             averageResponseTime: metadata.performanceMetrics.averageResponseTime,
    1151 |             errorRate: metadata.performanceMetrics.errorRate,
  > 1152 |             suggestionAccuracy: metadata.performanceMetrics.suggestionAccuracy,
         |                                          ^^^^^^^^^^^^^^^^^^
    1153 |         };
    1154 |
    1155 |         // Calculate user engagement
ERROR in src/services/ai-assistant.service.ts:1156:49
TS2339: Property 'userEngagement' does not exist on type 'ProjectMetadata'.
    1154 |
    1155 |         // Calculate user engagement
  > 1156 |         const activeHours = Array.from(metadata.userEngagement.activeHours.entries())
         |                                                 ^^^^^^^^^^^^^^
    1157 |             .sort((a, b) => b[1] - a[1])
    1158 |             .slice(0, 3)
    1159 |             .map(([hour, count]) => ({ hour, count }));
ERROR in src/services/ai-assistant.service.ts:1159:18
TS2345: Argument of type '([hour, count]: [any, any]) => { hour: any; count: any; }' is not assignable to parameter of type '(value: unknown, index: number, array: unknown[]) => { hour: any; count: any; }'.
  Types of parameters '__0' and 'value' are incompatible.
    Type 'unknown' is not assignable to type '[any, any]'.
    1157 |             .sort((a, b) => b[1] - a[1])
    1158 |             .slice(0, 3)
  > 1159 |             .map(([hour, count]) => ({ hour, count }));
         |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    1160 |
    1161 |         // Calculate code metrics
    1162 |         const languageStats = Array.from(metadata.codeMetrics.languageStats.entries())
ERROR in src/services/ai-assistant.service.ts:1162:51
TS2339: Property 'codeMetrics' does not exist on type 'ProjectMetadata'.
    1160 |
    1161 |         // Calculate code metrics
  > 1162 |         const languageStats = Array.from(metadata.codeMetrics.languageStats.entries())
         |                                                   ^^^^^^^^^^^
    1163 |             .sort((a, b) => b[1] - a[1])
    1164 |             .slice(0, 5)
    1165 |             .map(([language, count]) => ({ language, count }));
ERROR in src/services/ai-assistant.service.ts:1165:18
TS2345: Argument of type '([language, count]: [any, any]) => { language: any; count: any; }' is not assignable to parameter of type '(value: unknown, index: number, array: unknown[]) => { language: any; count: any; }'.
  Types of parameters '__0' and 'value' are incompatible.
    Type 'unknown' is not assignable to type '[any, any]'.
    1163 |             .sort((a, b) => b[1] - a[1])
    1164 |             .slice(0, 5)
  > 1165 |             .map(([language, count]) => ({ language, count }));
         |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    1166 |
    1167 |         // Calculate learning metrics
    1168 |         const skillLevels = Array.from(metadata.learningMetrics.skillLevels.entries())
ERROR in src/services/ai-assistant.service.ts:1168:49
TS2339: Property 'learningMetrics' does not exist on type 'ProjectMetadata'.
    1166 |
    1167 |         // Calculate learning metrics
  > 1168 |         const skillLevels = Array.from(metadata.learningMetrics.skillLevels.entries())
         |                                                 ^^^^^^^^^^^^^^^
    1169 |             .sort((a, b) => b[1] - a[1])
    1170 |             .map(([level, count]) => ({ level, count }));
    1171 |
ERROR in src/services/ai-assistant.service.ts:1170:18
TS2345: Argument of type '([level, count]: [any, any]) => { level: any; count: any; }' is not assignable to parameter of type '(value: unknown, index: number, array: unknown[]) => { level: any; count: any; }'.
  Types of parameters '__0' and 'value' are incompatible.
    Type 'unknown' is not assignable to type '[any, any]'.
    1168 |         const skillLevels = Array.from(metadata.learningMetrics.skillLevels.entries())
    1169 |             .sort((a, b) => b[1] - a[1])
  > 1170 |             .map(([level, count]) => ({ level, count }));
         |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    1171 |
    1172 |         const knowledgeGaps = Array.from(metadata.learningMetrics.knowledgeGaps.entries())
    1173 |             .sort((a, b) => b[1] - a[1])
ERROR in src/services/ai-assistant.service.ts:1172:51
TS2339: Property 'learningMetrics' does not exist on type 'ProjectMetadata'.
    1170 |             .map(([level, count]) => ({ level, count }));
    1171 |
  > 1172 |         const knowledgeGaps = Array.from(metadata.learningMetrics.knowledgeGaps.entries())
         |                                                   ^^^^^^^^^^^^^^^
    1173 |             .sort((a, b) => b[1] - a[1])
    1174 |             .slice(0, 5)
    1175 |             .map(([area, count]) => ({ area, count }));
ERROR in src/services/ai-assistant.service.ts:1175:18
TS2345: Argument of type '([area, count]: [any, any]) => { area: any; count: any; }' is not assignable to parameter of type '(value: unknown, index: number, array: unknown[]) => { area: any; count: any; }'.
  Types of parameters '__0' and 'value' are incompatible.
    Type 'unknown' is not assignable to type '[any, any]'.
    1173 |             .sort((a, b) => b[1] - a[1])
    1174 |             .slice(0, 5)
  > 1175 |             .map(([area, count]) => ({ area, count }));
         |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    1176 |
    1177 |         return {
    1178 |             totalInteractions: metadata.totalInteractions,
ERROR in src/services/ai-assistant.service.ts:1179:56
TS2339: Property 'performanceMetrics' does not exist on type 'ProjectMetadata'.
    1177 |         return {
    1178 |             totalInteractions: metadata.totalInteractions,
  > 1179 |             successfulSuggestions: Math.round(metadata.performanceMetrics.suggestionAccuracy * metadata.totalInteractions),
         |                                                        ^^^^^^^^^^^^^^^^^^
    1180 |             rejectedSuggestions: Math.round((1 - metadata.performanceMetrics.suggestionAccuracy) * metadata.totalInteractions),
    1181 |             averageConfidence: this.calculateAverageConfidence(metadata),
    1182 |             popularCommands,
ERROR in src/services/ai-assistant.service.ts:1180:59
TS2339: Property 'performanceMetrics' does not exist on type 'ProjectMetadata'.
    1178 |             totalInteractions: metadata.totalInteractions,
    1179 |             successfulSuggestions: Math.round(metadata.performanceMetrics.suggestionAccuracy * metadata.totalInteractions),
  > 1180 |             rejectedSuggestions: Math.round((1 - metadata.performanceMetrics.suggestionAccuracy) * metadata.totalInteractions),
         |                                                           ^^^^^^^^^^^^^^^^^^
    1181 |             averageConfidence: this.calculateAverageConfidence(metadata),
    1182 |             popularCommands,
    1183 |             userFeedback: {
ERROR in src/services/ai-assistant.service.ts:1212:18
TS2339: Property 'learningMetrics' does not exist on type 'ProjectMetadata'.
    1210 |         let count = 0;
    1211 |
  > 1212 |         metadata.learningMetrics.skillLevels.forEach((count, level) => {
         |                  ^^^^^^^^^^^^^^^
    1213 |             const confidence = {
    1214 |                 'beginner': 0.3,
    1215 |                 'intermediate': 0.6,
ERROR in src/services/ai-assistant.service.ts:1226:9
TS2322: Type 'unknown' is not assignable to type 'number'.
    1224 |
    1225 |     private calculateHelpfulFeedback(metadata: ProjectMetadata): number {
  > 1226 |         return Array.from(metadata.performanceMetrics.suggestionTypes.values())
         |         ^^^^^^
    1227 |             .reduce((sum, count) => sum + count, 0);
    1228 |     }
    1229 |
ERROR in src/services/ai-assistant.service.ts:1226:36
TS2339: Property 'performanceMetrics' does not exist on type 'ProjectMetadata'.
    1224 |
    1225 |     private calculateHelpfulFeedback(metadata: ProjectMetadata): number {
  > 1226 |         return Array.from(metadata.performanceMetrics.suggestionTypes.values())
         |                                    ^^^^^^^^^^^^^^^^^^
    1227 |             .reduce((sum, count) => sum + count, 0);
    1228 |     }
    1229 |
ERROR in src/services/ai-assistant.service.ts:1227:37
TS2365: Operator '+' cannot be applied to types 'unknown' and 'unknown'.
    1225 |     private calculateHelpfulFeedback(metadata: ProjectMetadata): number {
    1226 |         return Array.from(metadata.performanceMetrics.suggestionTypes.values())
  > 1227 |             .reduce((sum, count) => sum + count, 0);
         |                                     ^^^^^^^^^^^
    1228 |     }
    1229 |
    1230 |     private calculateNotHelpfulFeedback(metadata: ProjectMetadata): number {
ERROR in src/services/ai-assistant.service.ts:1231:25
TS2339: Property 'performanceMetrics' does not exist on type 'ProjectMetadata'.
    1229 |
    1230 |     private calculateNotHelpfulFeedback(metadata: ProjectMetadata): number {
  > 1231 |         return metadata.performanceMetrics.errorTypes.size;
         |                         ^^^^^^^^^^^^^^^^^^
    1232 |     }
    1233 |
    1234 |     private calculateAverageSessionLength(metadata: ProjectMetadata): number {
ERROR in src/services/ai-assistant.service.ts:1235:41
TS2339: Property 'userEngagement' does not exist on type 'ProjectMetadata'.
    1233 |
    1234 |     private calculateAverageSessionLength(metadata: ProjectMetadata): number {
  > 1235 |         const sessionLengths = metadata.userEngagement.sessionLengths;
         |                                         ^^^^^^^^^^^^^^
    1236 |         if (sessionLengths.length === 0) return 0;
    1237 |         return sessionLengths.reduce((sum, length) => sum + length, 0) / sessionLengths.length;
    1238 |     }
ERROR in src/services/ai-assistant.service.ts:1241:36
TS2339: Property 'userEngagement' does not exist on type 'ProjectMetadata'.
    1239 |
    1240 |     private getMostUsedFeatures(metadata: ProjectMetadata): Array<{ feature: string; count: number }> {
  > 1241 |         return Array.from(metadata.userEngagement.featureUsage.entries())
         |                                    ^^^^^^^^^^^^^^
    1242 |             .sort((a, b) => b[1] - a[1])
    1243 |             .slice(0, 5)
    1244 |             .map(([feature, count]) => ({ feature, count }));
ERROR in src/services/ai-assistant.service.ts:1244:18
TS2345: Argument of type '([feature, count]: [any, any]) => { feature: any; count: any; }' is not assignable to parameter of type '(value: unknown, index: number, array: unknown[]) => { feature: any; count: any; }'.
  Types of parameters '__0' and 'value' are incompatible.
    Type 'unknown' is not assignable to type '[any, any]'.
    1242 |             .sort((a, b) => b[1] - a[1])
    1243 |             .slice(0, 5)
  > 1244 |             .map(([feature, count]) => ({ feature, count }));
         |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    1245 |     }
    1246 |
    1247 |     private getComplexityDistribution(metadata: ProjectMetadata): Array<{ level: string; count: number }> {
ERROR in src/services/ai-assistant.service.ts:1248:36
TS2339: Property 'codeMetrics' does not exist on type 'ProjectMetadata'.
    1246 |
    1247 |     private getComplexityDistribution(metadata: ProjectMetadata): Array<{ level: string; count: number }> {
  > 1248 |         return Array.from(metadata.codeMetrics.complexityMetrics.entries())
         |                                    ^^^^^^^^^^^
    1249 |             .sort((a, b) => b[1] - a[1])
    1250 |             .map(([level, count]) => ({ level, count }));
    1251 |     }
ERROR in src/services/ai-assistant.service.ts:1250:18
TS2345: Argument of type '([level, count]: [any, any]) => { level: any; count: any; }' is not assignable to parameter of type '(value: unknown, index: number, array: unknown[]) => { level: any; count: any; }'.
  Types of parameters '__0' and 'value' are incompatible.
    Type 'unknown' is not assignable to type '[any, any]'.
    1248 |         return Array.from(metadata.codeMetrics.complexityMetrics.entries())
    1249 |             .sort((a, b) => b[1] - a[1])
  > 1250 |             .map(([level, count]) => ({ level, count }));
         |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    1251 |     }
    1252 |
    1253 |     private getRefactoringFrequency(metadata: ProjectMetadata): number {
ERROR in src/services/ai-assistant.service.ts:1254:54
TS2339: Property 'codeMetrics' does not exist on type 'ProjectMetadata'.
    1252 |
    1253 |     private getRefactoringFrequency(metadata: ProjectMetadata): number {
  > 1254 |         const totalRefactoring = Array.from(metadata.codeMetrics.refactoringStats.values())
         |                                                      ^^^^^^^^^^^
    1255 |             .reduce((sum, count) => sum + count, 0);
    1256 |         return totalRefactoring / metadata.totalInteractions;
    1257 |     }
ERROR in src/services/ai-assistant.service.ts:1255:37
TS2365: Operator '+' cannot be applied to types 'unknown' and 'unknown'.
    1253 |     private getRefactoringFrequency(metadata: ProjectMetadata): number {
    1254 |         const totalRefactoring = Array.from(metadata.codeMetrics.refactoringStats.values())
  > 1255 |             .reduce((sum, count) => sum + count, 0);
         |                                     ^^^^^^^^^^^
    1256 |         return totalRefactoring / metadata.totalInteractions;
    1257 |     }
    1258 |
ERROR in src/services/ai-assistant.service.ts:1256:16
TS2362: The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.
    1254 |         const totalRefactoring = Array.from(metadata.codeMetrics.refactoringStats.values())
    1255 |             .reduce((sum, count) => sum + count, 0);
  > 1256 |         return totalRefactoring / metadata.totalInteractions;
         |                ^^^^^^^^^^^^^^^^
    1257 |     }
    1258 |
    1259 |     private getBugFixRate(metadata: ProjectMetadata): number {
ERROR in src/services/ai-assistant.service.ts:1260:51
TS2339: Property 'codeMetrics' does not exist on type 'ProjectMetadata'.
    1258 |
    1259 |     private getBugFixRate(metadata: ProjectMetadata): number {
  > 1260 |         const totalBugFixes = Array.from(metadata.codeMetrics.bugFixStats.values())
         |                                                   ^^^^^^^^^^^
    1261 |             .reduce((sum, count) => sum + count, 0);
    1262 |         return totalBugFixes / metadata.totalInteractions;
    1263 |     }
ERROR in src/services/ai-assistant.service.ts:1261:37
TS2365: Operator '+' cannot be applied to types 'unknown' and 'unknown'.
    1259 |     private getBugFixRate(metadata: ProjectMetadata): number {
    1260 |         const totalBugFixes = Array.from(metadata.codeMetrics.bugFixStats.values())
  > 1261 |             .reduce((sum, count) => sum + count, 0);
         |                                     ^^^^^^^^^^^
    1262 |         return totalBugFixes / metadata.totalInteractions;
    1263 |     }
    1264 |
ERROR in src/services/ai-assistant.service.ts:1262:16
TS2362: The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.
    1260 |         const totalBugFixes = Array.from(metadata.codeMetrics.bugFixStats.values())
    1261 |             .reduce((sum, count) => sum + count, 0);
  > 1262 |         return totalBugFixes / metadata.totalInteractions;
         |                ^^^^^^^^^^^^^
    1263 |     }
    1264 |
    1265 |     private getImprovementAreas(metadata: ProjectMetadata): Array<{ area: string; count: number }> {
ERROR in src/services/ai-assistant.service.ts:1266:36
TS2339: Property 'learningMetrics' does not exist on type 'ProjectMetadata'.
    1264 |
    1265 |     private getImprovementAreas(metadata: ProjectMetadata): Array<{ area: string; count: number }> {
  > 1266 |         return Array.from(metadata.learningMetrics.improvementAreas.entries())
         |                                    ^^^^^^^^^^^^^^^
    1267 |             .sort((a, b) => b[1] - a[1])
    1268 |             .slice(0, 5)
    1269 |             .map(([area, count]) => ({ area, count }));
ERROR in src/services/ai-assistant.service.ts:1269:18
TS2345: Argument of type '([area, count]: [any, any]) => { area: any; count: any; }' is not assignable to parameter of type '(value: unknown, index: number, array: unknown[]) => { area: any; count: any; }'.
  Types of parameters '__0' and 'value' are incompatible.
    Type 'unknown' is not assignable to type '[any, any]'.
    1267 |             .sort((a, b) => b[1] - a[1])
    1268 |             .slice(0, 5)
  > 1269 |             .map(([area, count]) => ({ area, count }));
         |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    1270 |     }
    1271 |
    1272 |     private getTopicProgression(metadata: ProjectMetadata): Array<{ topic: string; count: number }> {
ERROR in src/services/ai-assistant.service.ts:1273:36
TS2339: Property 'learningMetrics' does not exist on type 'ProjectMetadata'.
    1271 |
    1272 |     private getTopicProgression(metadata: ProjectMetadata): Array<{ topic: string; count: number }> {
  > 1273 |         return Array.from(metadata.learningMetrics.topicProgression.entries())
         |                                    ^^^^^^^^^^^^^^^
    1274 |             .sort((a, b) => b[1] - a[1])
    1275 |             .slice(0, 5)
    1276 |             .map(([topic, count]) => ({ topic, count }));
ERROR in src/services/ai-assistant.service.ts:1276:18
TS2345: Argument of type '([topic, count]: [any, any]) => { topic: any; count: any; }' is not assignable to parameter of type '(value: unknown, index: number, array: unknown[]) => { topic: any; count: any; }'.
  Types of parameters '__0' and 'value' are incompatible.
    Type 'unknown' is not assignable to type '[any, any]'.
    1274 |             .sort((a, b) => b[1] - a[1])
    1275 |             .slice(0, 5)
  > 1276 |             .map(([topic, count]) => ({ topic, count }));
         |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    1277 |     }
    1278 |
    1279 |     public getChainOfThought(history: AIAssistantHistory): ChainOfThought {
ERROR in src/services/ai-assistant.service.ts:1279:60
TS2304: Cannot find name 'ChainOfThought'.
    1277 |     }
    1278 |
  > 1279 |     public getChainOfThought(history: AIAssistantHistory): ChainOfThought {
         |                                                            ^^^^^^^^^^^^^^
    1280 |         if (!history.metadata?.thinkingProcess) {
    1281 |             return {
    1282 |                 analysis: null,
ERROR in src/services/ai/CodeCompletionService.ts:45:23
TS2576: Property 'measure' does not exist on type 'PerformanceMonitor'. Did you mean to access the static member 'PerformanceMonitor.measure' instead?
    43 |   }
    44 |
  > 45 |   @performanceMonitor.measure
       |                       ^^^^^^^
    46 |   async getCompletions(context: CompletionContext): Promise<CompletionSuggestion[]> {
    47 |     try {
    48 |       // Check cache first
ERROR in src/services/analytics.service.ts:137:18
TS2393: Duplicate function implementation.
    135 |
    136 |     // Event Tracking
  > 137 |     public async trackEvent(event: Omit<AnalyticsEvent, 'id' | 'timestamp'>): Promise<AnalyticsEvent> {
        |                  ^^^^^^^^^^
    138 |         const response = await this.fetchWithAuth('/api/analytics/events', {
    139 |             method: 'POST',
    140 |             body: JSON.stringify(event),
ERROR in src/services/analytics.service.ts:170:18
TS2393: Duplicate function implementation.
    168 |
    169 |     // Metrics
  > 170 |     public async recordMetric(metric: Omit<AnalyticsMetric, 'timestamp'>): Promise<AnalyticsMetric> {
        |                  ^^^^^^^^^^^^
    171 |         const response = await this.fetchWithAuth('/api/analytics/metrics', {
    172 |             method: 'POST',
    173 |             body: JSON.stringify(metric),
ERROR in src/services/analytics.service.ts:417:5
TS2393: Duplicate function implementation.
    415 |      * Track an analytics event
    416 |      */
  > 417 |     trackEvent(type: string, data: Record<string, any> = {}): void {
        |     ^^^^^^^^^^
    418 |         if (Math.random() > this.config.samplingRate) return;
    419 |
    420 |         const startTime = performance.now();
ERROR in src/services/analytics.service.ts:425:17
TS2353: Object literal may only specify known properties, and 'data' does not exist in type 'AnalyticsEvent'.
    423 |                 type,
    424 |                 timestamp: Date.now().toString(),
  > 425 |                 data,
        |                 ^^^^
    426 |                 userId: '',
    427 |                 sessionId: this.sessionId,
    428 |             };
ERROR in src/services/analytics.service.ts:445:5
TS2393: Duplicate function implementation.
    443 |      * Record a metric value
    444 |      */
  > 445 |     recordMetric(name: string, value: number, tags: Record<string, string> = {}): void {
        |     ^^^^^^^^^^^^
    446 |         const startTime = performance.now();
    447 |         try {
    448 |             const metric: AnalyticsMetric = {
ERROR in src/services/analytics.service.ts:477:55
TS2365: Operator '>=' cannot be applied to types 'string' and 'number'.
    475 |
    476 |             const data = this.metrics
  > 477 |                 .filter(m => m.name === metricName && m.timestamp >= cutoff)
        |                                                       ^^^^^^^^^^^^^^^^^^^^^
    478 |                 .map(m => ({
    479 |                     timestamp: m.timestamp,
    480 |                     value: m.value,
ERROR in src/services/analytics.service.ts:482:33
TS2362: The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.
    480 |                     value: m.value,
    481 |                 }))
  > 482 |                 .sort((a, b) => a.timestamp - b.timestamp);
        |                                 ^^^^^^^^^^^
    483 |
    484 |             cacheService.set(cacheKey, data, 60000); // Cache for 1 minute
    485 |             performanceMonitor.recordMetric('analytics-timeseries-generated', performance.now() - startTime);
ERROR in src/services/analytics.service.ts:482:47
TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.
    480 |                     value: m.value,
    481 |                 }))
  > 482 |                 .sort((a, b) => a.timestamp - b.timestamp);
        |                                               ^^^^^^^^^^^
    483 |
    484 |             cacheService.set(cacheKey, data, 60000); // Cache for 1 minute
    485 |             performanceMonitor.recordMetric('analytics-timeseries-generated', performance.now() - startTime);
ERROR in src/services/analytics.service.ts:486:13
TS2322: Type '{ timestamp: string; value: number; }[]' is not assignable to type 'TimeSeriesData[]'.
  Type '{ timestamp: string; value: number; }' is not assignable to type 'TimeSeriesData'.
    Types of property 'timestamp' are incompatible.
      Type 'string' is not assignable to type 'number'.
    484 |             cacheService.set(cacheKey, data, 60000); // Cache for 1 minute
    485 |             performanceMonitor.recordMetric('analytics-timeseries-generated', performance.now() - startTime);
  > 486 |             return data;
        |             ^^^^^^
    487 |         } catch (error) {
    488 |             performanceMonitor.recordMetric('analytics-error', 1);
    489 |             console.error('Error generating time series:', error);
ERROR in src/services/analytics.service.ts:507:55
TS2365: Operator '>=' cannot be applied to types 'string' and 'number'.
    505 |             const cutoff = now - timeWindow;
    506 |             const values = this.metrics
  > 507 |                 .filter(m => m.name === metricName && m.timestamp >= cutoff)
        |                                                       ^^^^^^^^^^^^^^^^^^^^^
    508 |                 .map(m => m.value);
    509 |
    510 |             let result = 0;
ERROR in src/services/analytics.service.ts:594:33
TS2673: Constructor of class 'AnalyticsService' is private and only accessible within the class declaration.
    592 |
    593 | // Create a singleton instance
  > 594 | export const analyticsService = new AnalyticsService(); 
        |                                 ^^^^^^^^^^^^^^^^^^^^^^
ERROR in src/services/api.service.ts:75:17
TS2339: Property 'name' does not exist on type 'unknown'.
    73 |       return data as ApiResponse<T>;
    74 |     } catch (error) {
  > 75 |       if (error.name === 'AbortError') {
       |                 ^^^^
    76 |         performanceMonitor.recordMetric('api-timeout', 1);
    77 |         throw new Error(`Request timeout after ${this.timeout}ms`);
    78 |       }
ERROR in src/services/codeAnalysis/CodeQualityService.ts:1:10
TS2614: Module '"../api"' has no exported member 'APIService'. Did you mean to use 'import APIService from "../api"' instead?
  > 1 | import { APIService } from '../api';
      |          ^^^^^^^^^^
    2 | import { WebSocketService } from '../websocket';
    3 | import { debounce } from 'lodash';
    4 |
ERROR in src/services/CodeAwarenessService.ts:3:34
TS2307: Cannot find module 'socket.io/dist/typed-events' or its corresponding type declarations.
    1 | import { EventEmitter } from 'events';
    2 | import { Socket } from 'socket.io-client';
  > 3 | import { DefaultEventsMap } from 'socket.io/dist/typed-events';
      |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    4 | import * as monaco from 'monaco-editor';
    5 |
    6 | export interface CodeNode {
ERROR in src/services/codeCompletion/AICompletionService.ts:1:10
TS2614: Module '"../api"' has no exported member 'APIService'. Did you mean to use 'import APIService from "../api"' instead?
  > 1 | import { APIService } from '../api';
      |          ^^^^^^^^^^
    2 | import { debounce } from 'lodash';
    3 |
    4 | export interface CompletionContext {
ERROR in src/services/CodeEditingService.ts:365:49
TS2694: Namespace '"D:/ADE-stable-1.0/frontend/node_modules/monaco-editor/esm/vs/editor/editor.api".editor' has no exported member 'IPosition'.
    363 |   }
    364 |
  > 365 |   public async inspectVariable(position: editor.IPosition) {
        |                                                 ^^^^^^^^^
    366 |     const fileId = this.getCurrentFileId();
    367 |     if (!fileId) return;
    368 |
ERROR in src/services/CodeEditingService.ts:381:11
TS2393: Duplicate function implementation.
    379 |   }
    380 |
  > 381 |   private handleBreakpointHit(data: { fileId: string; breakpointId: string }) {
        |           ^^^^^^^^^^^^^^^^^^^
    382 |     const breakpoint = this.breakpoints.get(data.fileId)?.find(bp => bp.id === data.breakpointId);
    383 |     if (breakpoint) {
    384 |       // Highlight the current line
ERROR in src/services/CodeEditingService.ts:560:11
TS2393: Duplicate function implementation.
    558 |   }
    559 |
  > 560 |   private handleBreakpointHit(data: { breakpointId: string; variables: DebugVariable[] }): void {
        |           ^^^^^^^^^^^^^^^^^^^
    561 |     // Handle breakpoint hit with variable inspection
    562 |     this.ws.emit('ide:breakpoint-hit', {
    563 |       projectId: this.projectId,
ERROR in src/services/CodeNavigationService.ts:142:16
TS2393: Duplicate function implementation.
    140 |   }
    141 |
  > 142 |   public async findReferences(word: monaco.editor.IWordAtPosition) {
        |                ^^^^^^^^^^^^^^
    143 |     const model = this.editor.getModel();
    144 |     if (!model) return;
    145 |
ERROR in src/services/CodeNavigationService.ts:252:16
TS2393: Duplicate function implementation.
    250 |   }
    251 |
  > 252 |   public async findReferences(uri: string, position: { line: number; character: number }): Promise<Location[]> {
        |                ^^^^^^^^^^^^^^
    253 |     return new Promise((resolve) => {
    254 |       this.ws.emit('navigation:find-references', {
    255 |         projectId: this.projectId,
ERROR in src/services/DesignAgent.ts:233:19
TS2339: Property 'emit' does not exist on type 'WebSocketService'.
    231 |   async handleComponentAddition(component: any): Promise<void> {
    232 |     // Send component to backend for processing
  > 233 |     await this.ws.emit('design:add-component', {
        |                   ^^^^
    234 |       component,
    235 |       currentDesign: this.currentDesign,
    236 |     });
ERROR in src/services/DesignAgent.ts:241:19
TS2339: Property 'emit' does not exist on type 'WebSocketService'.
    239 |   async handleStyleAddition(style: any): Promise<void> {
    240 |     // Send style to backend for processing
  > 241 |     await this.ws.emit('design:add-style', {
        |                   ^^^^
    242 |       style,
    243 |       currentDesign: this.currentDesign,
    244 |     });
ERROR in src/services/DesignAgent.ts:249:36
TS2339: Property 'emit' does not exist on type 'WebSocketService'.
    247 |   async validateDesign(design: Partial<DesignSystem>): Promise<DesignValidationResult> {
    248 |     // Send design to backend for validation
  > 249 |     const response = await this.ws.emit('design:validate', design);
        |                                    ^^^^
    250 |     return response as DesignValidationResult;
    251 |   }
    252 |
ERROR in src/services/DesignAgent.ts:255:36
TS2339: Property 'emit' does not exist on type 'WebSocketService'.
    253 |   async generateImplementation(design: Partial<DesignSystem>): Promise<DesignImplementation> {
    254 |     // Send design to backend for implementation generation
  > 255 |     const response = await this.ws.emit('design:generate-implementation', design);
        |                                    ^^^^
    256 |     return response as DesignImplementation;
    257 |   }
    258 |
ERROR in src/services/DesignAgent.ts:261:36
TS2339: Property 'emit' does not exist on type 'WebSocketService'.
    259 |   async getComponentPreview(componentId: string): Promise<string> {
    260 |     // Request component preview from backend
  > 261 |     const response = await this.ws.emit('design:get-preview', { componentId });
        |                                    ^^^^
    262 |     return response as string;
    263 |   }
    264 |
ERROR in src/services/DesignAgent.ts:267:19
TS2339: Property 'emit' does not exist on type 'WebSocketService'.
    265 |   async updateComponent(componentId: string, updates: Partial<DesignComponent>): Promise<void> {
    266 |     // Send component updates to backend
  > 267 |     await this.ws.emit('design:update-component', {
        |                   ^^^^
    268 |       componentId,
    269 |       updates,
    270 |       currentDesign: this.currentDesign,
ERROR in src/services/DesignAgent.ts:276:19
TS2339: Property 'emit' does not exist on type 'WebSocketService'.
    274 |   async updateStyle(styleId: string, updates: Partial<DesignStyle>): Promise<void> {
    275 |     // Send style updates to backend
  > 276 |     await this.ws.emit('design:update-style', {
        |                   ^^^^
    277 |       styleId,
    278 |       updates,
    279 |       currentDesign: this.currentDesign,
ERROR in src/services/DesignAgent.ts:285:19
TS2339: Property 'emit' does not exist on type 'WebSocketService'.
    283 |   async finalizeDesign(design: DesignSystem): Promise<void> {
    284 |     // Send finalized design to backend for processing
  > 285 |     await this.ws.emit('design:finalize', design);
        |                   ^^^^
    286 |   }
    287 |
    288 |   disconnect() {
ERROR in src/services/DocumentationService.ts:1:37
TS2307: Cannot find module 'rxjs' or its corresponding type declarations.
  > 1 | import { Observable, Subject } from 'rxjs';
      |                                     ^^^^^^
    2 | import { MonitoringService } from './monitoring.service';
    3 | import { Documentation, DocType, DocSection } from '../types/documentation';
    4 |
ERROR in src/services/DocumentationService.ts:3:52
TS2307: Cannot find module '../types/documentation' or its corresponding type declarations.
    1 | import { Observable, Subject } from 'rxjs';
    2 | import { MonitoringService } from './monitoring.service';
  > 3 | import { Documentation, DocType, DocSection } from '../types/documentation';
      |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
    4 |
    5 | export class DocumentationService {
    6 |     private static instance: DocumentationService;
ERROR in src/services/DocumentationService.ts:49:29
TS2339: Property 'recordError' does not exist on type 'MonitoringService'.
    47 |             return doc;
    48 |         } catch (error) {
  > 49 |             this.monitoring.recordError('generate_docs_failed', error);
       |                             ^^^^^^^^^^^
    50 |             throw error;
    51 |         }
    52 |     }
ERROR in src/services/DocumentationService.ts:69:29
TS2339: Property 'recordError' does not exist on type 'MonitoringService'.
    67 |             return await response.json();
    68 |         } catch (error) {
  > 69 |             this.monitoring.recordError('update_docs_failed', error);
       |                             ^^^^^^^^^^^
    70 |             throw error;
    71 |         }
    72 |     }
ERROR in src/services/DocumentationService.ts:124:29
TS2339: Property 'recordError' does not exist on type 'MonitoringService'.
    122 |             return await response.json();
    123 |         } catch (error) {
  > 124 |             this.monitoring.recordError('add_section_failed', error);
        |                             ^^^^^^^^^^^
    125 |             throw error;
    126 |         }
    127 |     }
ERROR in src/services/DocumentationService.ts:148:29
TS2339: Property 'recordError' does not exist on type 'MonitoringService'.
    146 |             return await response.json();
    147 |         } catch (error) {
  > 148 |             this.monitoring.recordError('update_section_failed', error);
        |                             ^^^^^^^^^^^
    149 |             throw error;
    150 |         }
    151 |     }
ERROR in src/services/DocumentationService.ts:176:29
TS2339: Property 'recordError' does not exist on type 'MonitoringService'.
    174 |             return data.example;
    175 |         } catch (error) {
  > 176 |             this.monitoring.recordError('generate_example_failed', error);
        |                             ^^^^^^^^^^^
    177 |             throw error;
    178 |         }
    179 |     }
ERROR in src/services/error/ErrorHandler.ts:1:37
TS2307: Cannot find module 'rxjs' or its corresponding type declarations.
  > 1 | import { Observable, Subject } from 'rxjs';
      |                                     ^^^^^^
    2 | import { PerformanceMonitor } from '../monitoring/PerformanceMonitor';
    3 |
    4 | export interface ErrorDetails {
ERROR in src/services/FigmaService.ts:109:9
TS2353: Object literal may only specify known properties, and 'description' does not exist in type 'DesignComponent'.
    107 |         type: 'component',
    108 |         name: response.component.name,
  > 109 |         description: response.component.description,
        |         ^^^^^^^^^^^
    110 |         styles: response.component.styles,
    111 |         properties: response.component.properties,
    112 |       };
ERROR in src/services/FigmaService.ts:172:32
TS2339: Property 'description' does not exist on type 'DesignComponent'.
    170 |         key: component.id,
    171 |         name: component.name,
  > 172 |         description: component.description,
        |                                ^^^^^^^^^^^
    173 |         styles: component.styles,
    174 |         properties: component.properties,
    175 |       })),
ERROR in src/services/InteractiveDesignService.ts:196:76
TS2339: Property 'id' does not exist on type 'Omit<DesignElement, "id">'.
    194 |
    195 |       this.socket.once('design:update', (data: { canvas: DesignCanvas }) => {
  > 196 |         const newElement = data.canvas.elements.find(e => e.id === element.id);
        |                                                                            ^^
    197 |         if (newElement) {
    198 |           resolve(newElement);
    199 |         } else {
ERROR in src/services/llm.service.ts:80:52
TS2554: Expected 1 arguments, but got 2.
    78 |     } catch (error) {
    79 |       // Track error
  > 80 |       monitoringService.trackError(error as Error, {
       |                                                    ^
  > 81 |         context: 'llm_generation',
       | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 82 |         model: config.model,
       | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 83 |       });
       | ^^^^^^^^
    84 |       throw error;
    85 |     }
    86 |   }
ERROR in src/services/llm.service.ts:130:38
TS2352: Conversion of type 'Event' to type 'Error' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'Event' is missing the following properties from type 'Error': name, message
    128 |       ws.onerror = (error) => {
    129 |         // Track error
  > 130 |         monitoringService.trackError(error as Error, {
        |                                      ^^^^^^^^^^^^^^
    131 |           context: 'llm_streaming',
    132 |           model: config.model,
    133 |         });
ERROR in src/services/llm.service.ts:130:54
TS2554: Expected 1 arguments, but got 2.
    128 |       ws.onerror = (error) => {
    129 |         // Track error
  > 130 |         monitoringService.trackError(error as Error, {
        |                                                      ^
  > 131 |           context: 'llm_streaming',
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 132 |           model: config.model,
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 133 |         });
        | ^^^^^^^^^^
    134 |         reject(error);
    135 |       };
    136 |     });
ERROR in src/services/monitoring.service.ts:347:18
TS2393: Duplicate function implementation.
    345 |
    346 |     // Performance Metrics
  > 347 |     public async getPerformanceMetrics(options: {
        |                  ^^^^^^^^^^^^^^^^^^^^^
    348 |         startDate?: string;
    349 |         endDate?: string;
    350 |         metrics?: string[];
ERROR in src/services/monitoring.service.ts:571:40
TS2339: Property 'initiatorType' does not exist on type 'PerformanceEntry'.
    569 |                     tags: {
    570 |                         name: resource.name,
  > 571 |                         type: resource.initiatorType,
        |                                        ^^^^^^^^^^^^^
    572 |                     },
    573 |                 });
    574 |             });
ERROR in src/services/monitoring.service.ts:635:12
TS2393: Duplicate function implementation.
    633 |
    634 |     // Data Retrieval Methods
  > 635 |     public getPerformanceMetrics(): PerformanceMetric[] {
        |            ^^^^^^^^^^^^^^^^^^^^^
    636 |         return [...this.performanceMetrics];
    637 |     }
    638 |
ERROR in src/services/monitoring/PerformanceMonitor.ts:1:37
TS2307: Cannot find module 'rxjs' or its corresponding type declarations.
  > 1 | import { Observable, Subject } from 'rxjs';
      |                                     ^^^^^^
    2 |
    3 | export interface PerformanceMetric {
    4 |   name: string;
ERROR in src/services/promptService.ts:10:3
TS2614: Module '"./errorHandling"' has no exported member 'withErrorHandling'. Did you mean to use 'import withErrorHandling from "./errorHandling"' instead?
     8 | import { 
     9 |   logError, 
  > 10 |   withErrorHandling, 
       |   ^^^^^^^^^^^^^^^^^
    11 |   ErrorCategory, 
    12 |   ErrorSeverity
    13 | } from './errorHandling';
ERROR in src/services/security.ts:2:28
TS2307: Cannot find module 'crypto-browserify' or its corresponding type declarations.
    1 | import { Buffer } from 'buffer';
  > 2 | import { createHmac } from 'crypto-browserify';
      |                            ^^^^^^^^^^^^^^^^^^^
    3 | import { performanceMonitor } from './performance';
    4 |
    5 | interface SignedRequest extends Request {
ERROR in src/services/TestSessionManager.ts:118:53
TS2339: Property 'sendMessage' does not exist on type 'AgentCollaborationService'.
    116 |         }
    117 |
  > 118 |         const response = await session.agentService.sendMessage(prompt.content);
        |                                                     ^^^^^^^^^^^
    119 |         
    120 |         // Validate response
    121 |         const validationResults = await this.trainingManager.validateResponse(
ERROR in src/services/websocket.service.ts:42:54
TS2345: Argument of type 'Data' is not assignable to parameter of type 'string'.
  Type 'ArrayBuffer' is not assignable to type 'string'.
    40 |     this.ws.onmessage = (event) => {
    41 |       try {
  > 42 |         const message: WebSocketMessage = JSON.parse(event.data);
       |                                                      ^^^^^^^^^^
    43 |         this.emit(message.type, message.payload);
    44 |       } catch (error) {
    45 |         console.error('Error parsing WebSocket message:', error);
ERROR in src/utils/documentation.ts:98:34
TS2339: Property 'getMetadata' does not exist on type 'typeof Reflect'.
     96 |
     97 |       // Get parameter types from metadata or function signature
  >  98 |       const paramTypes = Reflect.getMetadata('design:paramtypes', target, propertyKey) || [];
        |                                  ^^^^^^^^^^^
     99 |       const paramNames = originalMethod.toString()
    100 |         .match(/\(([^)]*)\)/)?.[1]
    101 |         .split(',')
ERROR in src/utils/validation.ts:1:19
TS2307: Cannot find module 'zod' or its corresponding type declarations.
  > 1 | import { z } from 'zod';
      |                   ^^^^^
    2 |
    3 | // Common validation schemas
    4 | export const emailSchema = z.string().email('Invalid email address');
ERROR in src/utils/validation.ts:71:45
TS2339: Property 'errors' does not exist on type 'unknown'.
    69 |   } catch (error) {
    70 |     if (error instanceof z.ZodError) {
  > 71 |       return { success: false, error: error.errors[0].message };
       |                                             ^^^^^^
    72 |     }
    73 |     return { success: false, error: 'Validation failed' };
    74 |   }