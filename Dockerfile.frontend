FROM node:18-alpine as build

WORKDIR /app

# Copy package.json and package-lock.json
COPY frontend/package*.json ./

# Install dependencies
RUN npm install

# Copy the frontend code
COPY frontend ./

# Fix common React import issues
RUN grep -l "useCallback\|useState\|useEffect" src/hooks/*.ts | xargs -r sed -i '1s/^/import React from "react";\n/'

# Add TypeScript configuration fixes if needed
RUN if ! grep -q "esModuleInterop" tsconfig.json; then \
    sed -i 's/"compilerOptions": {/"compilerOptions": {\n    "esModuleInterop": true,/' tsconfig.json; \
    fi

RUN if ! grep -q "allowSyntheticDefaultImports" tsconfig.json; then \
    sed -i 's/"compilerOptions": {/"compilerOptions": {\n    "allowSyntheticDefaultImports": true,/' tsconfig.json; \
    fi

# Attempt to fix linting issues automatically
RUN npm run lint:fix || echo "Linting issues detected but continuing build"

# Build the application with CI=false to ignore errors
RUN CI=false npm run build

# Production stage
FROM nginx:alpine

# Copy built files from build stage
COPY --from=build /app/build /usr/share/nginx/html

# Copy nginx configuration
COPY deployment/nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 80
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
